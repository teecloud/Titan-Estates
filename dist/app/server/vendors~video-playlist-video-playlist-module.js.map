{"version":3,"sources":["./node_modules/@videogular/ngx-videogular/__ivy_ngcc__/fesm2015/videogular-ngx-videogular-core.js","./node_modules/@videogular/ngx-videogular/__ivy_ngcc__/fesm2015/videogular-ngx-videogular-buffering.js","./node_modules/@videogular/ngx-videogular/__ivy_ngcc__/fesm2015/videogular-ngx-videogular-overlay-play.js","./node_modules/@videogular/ngx-videogular/__ivy_ngcc__/fesm2015/videogular-ngx-videogular-controls.js"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4M;AAC7J;AAC6B;AACvC;;AAErC;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACwC;;AAExC;AACA;AACA;AACA,8CAA8C,8BAA8B;AAC5E;AACA;AACA;AACA;AACA,oCAAoC,wEAAkB,EAAE,uCAAuC,uBAAuB,EAAE,uCAAuC;AAC/J,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,yBAAyB;AACzB,oCAAoC,0DAAY;AAChD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF;AACA;AACA,wCAAwC,wEAAkB,EAAE,2CAA2C,2BAA2B,EAAE,2CAA2C;AAC/K,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,mCAAmC,4CAAO;AAC1C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,4EAA4E,6CAA6C;AACzH;AACA;AACA,mDAAmD,wEAAkB,EAAE,sDAAsD,sCAAsC,EAAE,sDAAsD;AAC3N,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C,WAAW,EAQV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,oCAAoC;AAC9F,0CAA0C,wEAAkB,EAAE,6CAA6C,6BAA6B,EAAE,6CAA6C;AACvL,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAY;AAClD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,sDAAS;AAC7C,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,4CAA4C;AACtH;AACA;AACA,kDAAkD,wEAAkB,EAAE,qDAAqD,qCAAqC,EAAE,qDAAqD;AACvN,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C,WAAW,EAqBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,8CAA8C,8BAA8B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,wEAAkB,EAAE,uCAAuC,uBAAuB,EAAE,uCAAuC;AAC/J,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB,WAAW,EA2DV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C,oCAAoC,0DAAY;AAChD,kCAAkC,0DAAY;AAC9C,sCAAsC,0DAAY;AAClD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,sDAAS;AAChC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,wCAAwC,OAAO;AAC/C,4BAA4B,sDAAS;AACrC;AACA,2BAA2B,sDAAS;AACpC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,sEAAsE,wCAAwC,+DAAwB,CAAC,wDAAiB,GAAG;AAC3J,4BAA4B,+DAAwB,EAAE,6EAA6E,uJAAuJ,EAAE;AAC5R;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,uBAAuB,OAAO,oDAAM,EAAE;AACtC,wBAAwB,OAAO,oDAAM,EAAE;AACvC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,0BAA0B,OAAO,oDAAM,EAAE;AACzC;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,EAAE,EAAE,GAAG;AAChE,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAuBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4CAAO;AACzC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sDAAS,aAAa,EAAE;AAC3C,qBAAqB,sDAAS,aAAa,EAAE;AAC7C,4BAA4B,sDAAS,aAAa,EAAE;AACpD,4BAA4B,sDAAS,aAAa,EAAE;AACpD,qBAAqB,sDAAS,aAAa,EAAE;AAC7C,uBAAuB,sDAAS,aAAa,EAAE;AAC/C,mBAAmB,sDAAS,aAAa,EAAE;AAC3C,mBAAmB,sDAAS,aAAa,EAAE;AAC3C,wBAAwB,sDAAS,aAAa,EAAE;AAChD,4BAA4B,sDAAS,aAAa,EAAE;AACpD,uBAAuB,sDAAS,aAAa,EAAE;AAC/C,mBAAmB,sDAAS,aAAa,EAAE;AAC3C,kBAAkB,sDAAS,aAAa,EAAE;AAC1C,qBAAqB,sDAAS,aAAa,EAAE;AAC7C,sBAAsB,sDAAS,aAAa,EAAE;AAC9C,wBAAwB,sDAAS,aAAa,EAAE;AAChD,oBAAoB,sDAAS,aAAa,EAAE;AAC5C,qBAAqB,sDAAS,aAAa,EAAE;AAC7C,qBAAqB,sDAAS,aAAa,EAAE;AAC7C,qBAAqB,sDAAS,aAAa,EAAE;AAC7C,wBAAwB,sDAAS,aAAa,EAAE;AAChD,0BAA0B,sDAAS,aAAa,EAAE;AAClD,qBAAqB,sDAAS,aAAa,EAAE;AAC7C;AACA,sBAAsB,sDAAS,aAAa,EAAE;AAC9C,oBAAoB,sDAAS,aAAa,EAAE;AAC5C;AACA,0BAA0B,+CAAU;AACpC,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,2CAA2C,EAAE,mBAAmB,oCAAoC;AACpG;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAa;AACnD,kBAAkB,0DAAG;AACrB,mBAAmB,KAAK;AACxB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gCAAgC,kDAAK;AACrC,oBAAoB;AACpB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6CAA6C,OAAO;AACpD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,iCAAiC,EAAE;AACnC,iCAAiC,EAAE;AACnC,iCAAiC,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uCAAuC,kDAAK;AAC5C,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,oCAAoC,+DAAwB,gBAAgB,+DAAwB,CAAC,+DAAwB,GAAG;AAC9L,wBAAwB,+DAAwB,EAAE,oEAAoE,2CAA2C,EAAE;AACnK;AACA;AACA,KAAK,qBAAqB;AAC1B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,eAAe,OAAO,mDAAK,EAAE;AAC7B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,qBAAqB,GAAG,OAAO,+DAAwB,EAAE,EAAE,EAAE,GAAG;AAC/F,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAA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AC3B,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,WAAW,EAgRV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW,EAqGV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,sBAAsB;AACtB,WAAW,EAyCV;AACD;AACA;AACA;AACA,gCAAgC;AAChC,WAAW,EAqDV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW,EAaV;AACD;AACA;AACA;AACA,mCAAmC;AACnC,WAAW,EAOV;AACD;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,WAAW,EAkDV;AACD;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW,EAaV;AACD;AACA;AACA;AACA,mCAAmC;AACnC,WAAW,EAOV;AACD;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,WAAW,EAoDV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,YAAY;AACZ;AACA,gBAAgB;AAChB;AACA,sBAAsB;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,wEAAwE;AACxE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,+BAA+B;AAC/B;AACA;AACA,eAAe,GAAG;A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+K;AAChI;AACd;AACuG;;AAExI;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACwC;AACkB;AAChB;;AAE1C;AACA;AACA,2BAA2B,SAAS,gBAAgB;AACpD,8DAA8D;AAC9D,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,gEAAyB;AAC7B,CAAC;AACD,0DAA0D;AAC1D,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,0DAA0D;AAC1D,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB,CAAC,yDAAkB;AAC/C,CAAC;AACD,gEAAgE;AAChE,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,gEAAyB;AAC7B,CAAC;AACD,gEAAgE;AAChE,IAAI,uDAAgB;AACpB,CAAC;AACD;AACA,IAAI,yDAAkB;AACtB,CAAC;AACD,kEAAkE;AAClE,IAAI,uDAAgB;AACpB,CAAC;AACD;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,0BAA0B,sDAAS;AACnC;AACA,2BAA2B,sDAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,+BAA+B,wEAAQ;AACvC;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,oEAAoE,uCAAuC,+DAAwB,CAAC,4EAAmB,GAAG,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,uFAA8B,GAAG;AACjQ,2BAA2B,+DAAwB,EAAE,yIAAyI;AAC9L,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,6EAA6E,wGAAwG;AACvM,QAAQ,6DAAsB;AAC9B,QAAQ,0DAAmB;AAC3B,KAAK,EAAE,iCAAiC,6BAA6B,wBAAwB,sBAAsB,uBAAuB,uBAAuB,oBAAoB,+CAA+C,wCAAwC,uCAAuC,qCAAqC,oCAAoC,gCAAgC,SAAS,0BAA0B,wBAAwB,SAAS,4BAA4B;AAC5f;AACA;AACA,KAAK,OAAO,4EAAY,EAAE;AAC1B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uFAAuB;AACnC;AACA;AACA,oBAAoB,OAAO,yDAAW,mCAAmC;AACzE,oBAAoB,OAAO,yDAAW,yBAAyB;AAC/D,aAAa,OAAO,mDAAK,EAAE;AAC3B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,sBAAsB,OAAO,mDAAK,EAAE;AACpC;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,4EAAmB,EAAE,GAAG,OAAO,wDAAiB,EAAE,GAAG,OAAO,uFAA8B,EAAE,EAAE,EAAE,GAAG;AACzI,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAoCV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gEAAgE,qCAAqC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,4EAAmB,GAAG;AACjM,yBAAyB,+DAAwB,EAAE,4GAA4G;AAC/J,QAAQ,+DAAwB;AAChC,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,kEAAkE;AACzE,QAAQ,wDAAiB,+EAA+E,2BAA2B,EAAE,SAAS,+DAAwB,4EAA4E,+BAA+B,EAAE,SAAS,+DAAwB,4EAA4E,sCAAsC,EAAE;AACxa,KAAK,EAAE,WAAW,iBAAiB,4YAA4Y;AAC/a,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,4EAA4E,4BAA4B,EAAE,qFAAqF,gCAAgC,EAAE;AAC1P,QAAQ,4DAAqB;AAC7B,QAAQ,uDAAgB;AACxB,QAAQ,uDAAgB;AACxB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB,YAAY,6DAAsB;AAC3D,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,eAAe,uDAAc,gCAAgC,sCAAsC,oCAAoC,iCAAiC,gCAAgC,4BAA4B,wBAAwB,kCAAkC,uBAAuB,uBAAuB,0BAA0B,uBAAuB,4BAA4B,SAAS,8BAA8B,6BAA6B,wBAAwB,uBAAuB,8BAA8B,SAAS,qCAAqC,wBAAwB,uBAAuB,sBAAsB,+BAA+B,iCAAiC,SAAS,gCAAgC,wBAAwB,sBAAsB,+BAA+B,iCAAiC,wCAAwC,SAAS,+BAA+B,6BAA6B,sBAAsB,uBAAuB,kBAAkB,mBAAmB,sCAAsC,8BAA8B,+BAA+B,iCAAiC,wCAAwC,SAAS,oHAAoH,2BAA2B,SAAS,4BAA4B;AACn6C;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4EAAY;AACxB;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,oBAAoB,OAAO,uDAAS,uBAAuB,eAAe,IAAI;AAC9E,cAAc,OAAO,0DAAY,6CAA6C;AAC9E,kBAAkB,OAAO,0DAAY,2CAA2C;AAChF,yBAAyB,OAAO,0DAAY,kCAAkC;AAC9E;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,uBAAuB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,4EAAmB,EAAE,EAAE,EAAE,G;AAC5F;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,uDAAS;AAC3B,iCAAiC,eAAe;AAChD,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAmBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,mBAAmB;AACnB,WAAW,EAOV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,6CAA6C,EAAE;AAC/C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,aAAa;AACb;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,8EAA8E,4CAA4C,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,4EAAmB,GAAG;AACtN,gCAAgC,+DAAwB,EAAE,8EAA8E,iBAAiB,sSAAsS;AAC/b,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,oDAAa;AACrB,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,wFAAwF,6CAA6C,EAAE;AAChK,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,gEAAyB;AACjC,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,uDAAc,wCAAwC,sCAAsC,oCAAoC,iCAAiC,gCAAgC,4BAA4B,wBAAwB,kCAAkC,sBAAsB,uBAAuB,0BAA0B,uBAAuB,4BAA4B,SAAS,sCAAsC,6BAA6B,wBAAwB,uBAAuB,8BAA8B,qBAAqB,sBAAsB,SAAS,gDAAgD,sBAAsB,2BAA2B,uBAAuB,2BAA2B,mCAAmC,gCAAgC,2BAA2B,6BAA6B,0BAA0B,SAAS,4DAA4D,wBAAwB,SAAS,uDAAuD,sBAAsB,SAAS,2CAA2C,6BAA6B,sBAAsB,uBAAuB,oBAAoB,6BAA6B,oCAAoC,oEAAoE,2BAA2B,+BAA+B,SAAS,0DAA0D,sBAAsB,SAAS,4BAA4B;AAC9hD;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4EAAY;AACxB;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,4EAAmB,EAAE,EAAE,EAAE,GAAG;AAC/F,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAiBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,EAAE;AACrD,mDAAmD,EAAE;AACrD,mDAAmD,EAAE;AACrD;AACA;AACA;AACA,gDAAgD,+BAA+B;AAC/E,kBAAkB,0DAAmB,EAAE,6CAA6C;AACpF,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,kDAAI;AAClB,gBAAgB,gBAAgB;AAChC,KAAK,eAAe,EAAE;AACtB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,0EAA0E,0CAA0C,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,4EAAmB,GAAG;AAChN,8BAA8B,+DAAwB,EAAE,0EAA0E,iEAAiE,kIAAkI;AACrU,QAAQ,6DAAsB;AAC9B,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,oDAAW,0DAA0D,sCAAsC,oCAAoC,iCAAiC,gCAAgC,4BAA4B,wBAAwB,kCAAkC,uBAAuB,sBAAsB,0BAA0B,uBAAuB,4BAA4B,+BAA+B,oEAAoE,SAAS,4BAA4B;AAC9jB;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4EAAY;AACxB;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA,oCAAoC,+BAA+B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,4EAAmB,EAAE,EAAE,EAAE,GAAG;AAC/F,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAeV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sCAAsC,wEAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,oEAAoE,uCAAuC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,4EAAmB,GAAG,+DAAwB,CAAC,uFAA8B,GAAG;AACjQ,2BAA2B,+DAAwB,EAAE,0IAA0I;AAC/L,QAAQ,wDAAiB,iFAAiF,wCAAwC,EAAE,kFAAkF,wCAAwC,EAAE,SAAS,+DAAwB,8EAA8E,sCAAsC,EAAE,SAAS,+DAAwB,oFAAoF,yCAAyC,EAAE,kFAAkF,wCAAwC,EAAE,SAAS,+DAAwB,sFAAsF,0CAA0C,EAAE,SAAS,+DAAwB,gFAAgF,uCAAuC,EAAE,SAAS,+DAAwB,8EAA8E,sCAAsC,EAAE;AACvpC,KAAK;AACL,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,uCAAuC,uQAAuQ;AAChU,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,kCAAkC,sCAAsC,oCAAoC,iCAAiC,gCAAgC,4BAA4B,6BAA6B,sBAAsB,sBAAsB,uBAAuB,oBAAoB,0BAA0B,8BAA8B,0CAA0C,uBAAuB,sDAAsD,qDAAqD,mDAAmD,kDAAkD,8CAA8C,SAAS,gCAAgC,6BAA6B,wBAAwB,uBAAuB,8BAA8B,uBAAuB,SAAS,kCAAkC,6BAA6B,oBAAoB,kCAAkC,uBAAuB,uBAAuB,wBAAwB,yBAAyB,sCAAsC,qCAAqC,mCAAmC,kCAAkC,8BAA8B,SAAS,2BAA2B,oBAAoB,qBAAqB,SAAS,uCAAuC,0BAA0B,2BAA2B,SAAS,4BAA4B;AACv8C;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4EAAY,EAAE;AAC1B,KAAK,OAAO,uFAAuB;AACnC;AACA;AACA,oBAAoB,OAAO,yDAAW,yBAAyB;AAC/D,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,2BAA2B,OAAO,0DAAY,oCAAoC;AAClF,2BAA2B,OAAO,0DAAY,6CAA6C;AAC3F,yBAAyB,OAAO,0DAAY,2CAA2C;AACvF,4BAA4B,OAAO,0DAAY,qCAAqC;AACpF,2BAA2B,OAAO,0DAAY,6CAA6C;AAC3F,6BAA6B,OAAO,0DAAY,+CAA+C;AAC/F,0BAA0B,OAAO,0DAAY,4CAA4C;AACzF,yBAAyB,OAAO,0DAAY,kCAAkC;AAC9E;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,4EAAmB,EAAE,GAAG,OAAO,uFAA8B,EAAE,EAAE,EAAE,GAAG;AACzI,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAmBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,kFAAkF,8CAA8C,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,4EAAmB,GAAG;AAC5N,kCAAkC,+DAAwB,EAAE,kFAAkF,uBAAuB,YAAY,qCAAqC,aAAa,kEAA2B,gTAAgT;AAC9iB,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,oDAAa;AACrB,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,0FAA0F,+CAA+C,EAAE;AACpK,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,gEAAyB;AACjC,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,uDAAc,0CAA0C,sCAAsC,oCAAoC,iCAAiC,gCAAgC,4BAA4B,wBAAwB,kCAAkC,sBAAsB,uBAAuB,0BAA0B,uBAAuB,4BAA4B,SAAS,wCAAwC,6BAA6B,wBAAwB,uBAAuB,8BAA8B,qBAAqB,sBAAsB,SAAS,qDAAqD,sBAAsB,2BAA2B,uBAAuB,2BAA2B,mCAAmC,gCAAgC,2BAA2B,6BAA6B,0BAA0B,SAAS,iEAAiE,wBAAwB,SAAS,4DAA4D,sBAAsB,SAAS,+CAA+C,6BAA6B,sBAAsB,uBAAuB,oBAAoB,6BAA6B,oCAAoC,oEAAoE,2BAA2B,+BAA+B,SAAS,4DAA4D,sBAAsB,SAAS,4BAA4B;AACvjD;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4EAAY;AACxB;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,uBAAuB,OAAO,oDAAM,EAAE;AACtC;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,4EAAmB,EAAE,EAAE,EAAE,GAAG;AAC/F,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAiBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mCAAmC,4EAAY;AAC/C;AACA;AACA;AA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,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,mCAAmC,sCAAsC,oCAAoC,mCAAmC,iCAAiC,gCAAgC,4BAA4B,wBAAwB,kCAAkC,uBAAuB,sBAAsB,0BAA0B,uBAAuB,4BAA4B,SAAS,6BAA6B,+BAA+B,SAAS,4BAA4B;AAClhB;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4EAAY;AACxB;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,eAAe,OAAO,0DAAY,oBAAoB;AACtD,iBAAiB,OAAO,0DAAY,kCAAkC;AACtE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,4EAAmB,EAAE,EAAE,EAAE,G;AAC5F;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAaV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,4DAA4D,mCAAmC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,4EAAmB,GAAG;AAC3L,uBAAuB,+DAAwB,EAAE,gHAAgH;AACjK,QAAQ,wDAAiB,+DAA+D,sBAAsB,EAAE,0EAA0E,8BAA8B,EAAE;AAC1N,KAAK,EAAE,WAAW,iBAAiB,kKAAkK;AACrM,QAAQ,uDAAgB;AACxB,KAAK;AACL,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,6BAA6B,sCAAsC,oCAAoC,mCAAmC,iCAAiC,gCAAgC,4BAA4B,wBAAwB,kCAAkC,uBAAuB,sBAAsB,0BAA0B,uBAAuB,4BAA4B,SAAS,uBAAuB,+BAA+B,SAAS,4BAA4B;AACtgB;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4EAAY;AACxB;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,eAAe,OAAO,0DAAY,oBAAoB;AACtD,iBAAiB,OAAO,0DAAY,kCAAkC;AACtE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,4EAAmB,EAAE,EAAE,EAAE,G;AAC5F;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAeV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mCAAmC,4EAAY;AAC/C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,wEAAwE,yCAAyC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,4EAAmB,GAAG,+DAAwB,CAAC,sFAA6B,GAAG;AACtQ,6BAA6B,+DAAwB,EAAE,kIAAkI;AACzL,QAAQ,wDAAiB,qEAAqE,sBAAsB,EAAE,gFAAgF,8BAA8B,EAAE;AACtO,KAAK,EAAE,8KAA8K;AACrL,QAAQ,uDAAgB;AACxB,KAAK;AACL,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,mCAAmC,sCAAsC,oCAAoC,mCAAmC,iCAAiC,gCAAgC,4BAA4B,wBAAwB,kCAAkC,uBAAuB,sBAAsB,0BAA0B,uBAAuB,4BAA4B,SAAS,6BAA6B,+BAA+B,SAAS,4BAA4B;AAClhB;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4EAAY,EAAE;AAC1B,KAAK,OAAO,sFAAsB;AAClC;AACA;AACA,eAAe,OAAO,0DAAY,oBAAoB;AACtD,iBAAiB,OAAO,0DAAY,kCAAkC;AACtE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,4EAAmB,EAAE,GAAG,OAAO,sFAA6B,EAAE,EAAE,EAAE,G;AACrI;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAiBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,8FAA8F,oDAAoD,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,4EAAmB,GAAG;AAC9O,wCAAwC,+DAAwB,EAAE,gGAAgG,iBAAiB,yHAAyH;AAC5S,QAAQ,uDAAgB;AACxB,KAAK;AACL,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,iDAAiD,wBAAwB,sBAAsB,sBAAsB,+BAA+B,6BAA6B,SAAS,iDAAiD,qDAAqD,SAAS,iDAAiD,6BAA6B,+BAA+B,SAAS,6DAA6D,qCAAqC,kCAAkC,6BAA6B,SAAS,4BAA4B;AAC5mB;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,4EAAY;AACxB;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,4EAAmB,EAAE,EAAE,EAAE,GAAG;AAC/F,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,OAAO;AAC/D,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,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","file":"vendors~video-playlist-video-playlist-module.js","sourcesContent":["import { Injectable, ɵɵdefineInjectable, EventEmitter, Directive, ElementRef, Output, ChangeDetectorRef, Input, Component, ViewEncapsulation, HostBinding, ContentChildren, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Subject, fromEvent, Observable, combineLatest, timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/states/vg-states.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\"];\nclass VgStates {\n}\nVgStates.ɵfac = function VgStates_Factory(t) { return new (t || VgStates)(); };\nVgStates.VG_ENDED = 'ended';\nVgStates.VG_PAUSED = 'paused';\nVgStates.VG_PLAYING = 'playing';\nVgStates.VG_LOADING = 'waiting';\n/** @nocollapse */ VgStates.ɵprov = ɵɵdefineInjectable({ factory: function VgStates_Factory() { return new VgStates(); }, token: VgStates, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgStates, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    VgStates.VG_ENDED;\n    /** @type {?} */\n    VgStates.VG_PAUSED;\n    /** @type {?} */\n    VgStates.VG_PLAYING;\n    /** @type {?} */\n    VgStates.VG_LOADING;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/vg-api/vg-api.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgApiService {\n    constructor() {\n        this.medias = {}; // TODO: refactor to Set<IPlayable>\n        this.playerReadyEvent = new EventEmitter(true);\n        this.isPlayerReady = false;\n    }\n    /**\n     * @param {?} fsAPI\n     * @return {?}\n     */\n    onPlayerReady(fsAPI) {\n        this.fsAPI = fsAPI;\n        this.isPlayerReady = true;\n        this.playerReadyEvent.emit(this);\n    }\n    /**\n     * @return {?}\n     */\n    getDefaultMedia() {\n        for (const item in this.medias) {\n            if (this.medias[item]) {\n                return this.medias[item];\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getMasterMedia() {\n        /** @type {?} */\n        let master;\n        for (const id in this.medias) {\n            if (this.medias[id].vgMaster === 'true' ||\n                this.medias[id].vgMaster === true) {\n                master = this.medias[id];\n                break;\n            }\n        }\n        return master || this.getDefaultMedia();\n    }\n    /**\n     * @return {?}\n     */\n    isMasterDefined() {\n        /** @type {?} */\n        let result = false;\n        for (const id in this.medias) {\n            if (this.medias[id].vgMaster === 'true' ||\n                this.medias[id].vgMaster === true) {\n                result = true;\n                break;\n            }\n        }\n        return result;\n    }\n    /**\n     * @param {?=} id\n     * @return {?}\n     */\n    getMediaById(id = null) {\n        /** @type {?} */\n        let media = this.medias[id];\n        if (!id || id === '*') {\n            media = this;\n        }\n        return media;\n    }\n    /**\n     * @return {?}\n     */\n    play() {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.medias[id].play();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    pause() {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.medias[id].pause();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get duration() {\n        return this.$$getAllProperties('duration');\n    }\n    /**\n     * @param {?} seconds\n     * @return {?}\n     */\n    set currentTime(seconds) {\n        this.$$setAllProperties('currentTime', seconds);\n    }\n    /**\n     * @return {?}\n     */\n    get currentTime() {\n        return this.$$getAllProperties('currentTime');\n    }\n    /**\n     * @param {?} state\n     * @return {?}\n     */\n    set state(state) {\n        this.$$setAllProperties('state', state);\n    }\n    /**\n     * @return {?}\n     */\n    get state() {\n        return this.$$getAllProperties('state');\n    }\n    /**\n     * @param {?} volume\n     * @return {?}\n     */\n    set volume(volume) {\n        this.$$setAllProperties('volume', volume);\n    }\n    /**\n     * @return {?}\n     */\n    get volume() {\n        return this.$$getAllProperties('volume');\n    }\n    /**\n     * @param {?} rate\n     * @return {?}\n     */\n    set playbackRate(rate) {\n        this.$$setAllProperties('playbackRate', rate);\n    }\n    /**\n     * @return {?}\n     */\n    get playbackRate() {\n        return this.$$getAllProperties('playbackRate');\n    }\n    /**\n     * @return {?}\n     */\n    get canPlay() {\n        return this.$$getAllProperties('canPlay');\n    }\n    /**\n     * @return {?}\n     */\n    get canPlayThrough() {\n        return this.$$getAllProperties('canPlayThrough');\n    }\n    /**\n     * @return {?}\n     */\n    get isMetadataLoaded() {\n        return this.$$getAllProperties('isMetadataLoaded');\n    }\n    /**\n     * @return {?}\n     */\n    get isWaiting() {\n        return this.$$getAllProperties('isWaiting');\n    }\n    /**\n     * @return {?}\n     */\n    get isCompleted() {\n        return this.$$getAllProperties('isCompleted');\n    }\n    /**\n     * @return {?}\n     */\n    get isLive() {\n        return this.$$getAllProperties('isLive');\n    }\n    /**\n     * @return {?}\n     */\n    get isMaster() {\n        return this.$$getAllProperties('isMaster');\n    }\n    /**\n     * @return {?}\n     */\n    get time() {\n        return this.$$getAllProperties('time');\n    }\n    /**\n     * @return {?}\n     */\n    get buffer() {\n        return this.$$getAllProperties('buffer');\n    }\n    /**\n     * @return {?}\n     */\n    get buffered() {\n        return this.$$getAllProperties('buffered');\n    }\n    /**\n     * @return {?}\n     */\n    get subscriptions() {\n        return this.$$getAllProperties('subscriptions');\n    }\n    /**\n     * @return {?}\n     */\n    get textTracks() {\n        return this.$$getAllProperties('textTracks');\n    }\n    /**\n     * @param {?} value\n     * @param {?=} byPercent\n     * @return {?}\n     */\n    seekTime(value, byPercent = false) {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.$$seek(this.medias[id], value, byPercent);\n            }\n        }\n    }\n    /**\n     * @param {?} media\n     * @param {?} value\n     * @param {?=} byPercent\n     * @return {?}\n     */\n    $$seek(media, value, byPercent = false) {\n        /** @type {?} */\n        let second;\n        /** @type {?} */\n        let duration = media.duration;\n        if (byPercent) {\n            if (this.isMasterDefined()) {\n                duration = this.getMasterMedia().duration;\n            }\n            second = (value * duration) / 100;\n        }\n        else {\n            second = value;\n        }\n        media.currentTime = second;\n    }\n    /**\n     * @param {?} type\n     * @param {?=} label\n     * @param {?=} language\n     * @return {?}\n     */\n    addTextTrack(type, label, language) {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.$$addTextTrack(this.medias[id], type, label, language);\n            }\n        }\n    }\n    /**\n     * @param {?} media\n     * @param {?} type\n     * @param {?=} label\n     * @param {?=} language\n     * @return {?}\n     */\n    $$addTextTrack(media, type, label, language) {\n        media.addTextTrack(type, label, language);\n    }\n    /**\n     * @param {?} property\n     * @return {?}\n     */\n    $$getAllProperties(property) {\n        /** @type {?} */\n        const medias = {};\n        /** @type {?} */\n        let result;\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                medias[id] = this.medias[id];\n            }\n        }\n        /** @type {?} */\n        const nMedias = Object.keys(medias).length;\n        switch (nMedias) {\n            case 0:\n                // Return default values until vgMedia is initialized\n                switch (property) {\n                    case 'state':\n                        result = VgStates.VG_PAUSED;\n                        break;\n                    case 'playbackRate':\n                    case 'volume':\n                        result = 1;\n                        break;\n                    case 'time':\n                        result = { current: 0, total: 0, left: 0 };\n                        break;\n                }\n                break;\n            case 1:\n                // If there's only one media element then return the plain value\n                /** @type {?} */\n                const firstMediaId = Object.keys(medias)[0];\n                result = medias[firstMediaId][property];\n                break;\n            default:\n                // TODO: return 'master' value\n                /** @type {?} */\n                const master = this.getMasterMedia();\n                result = medias[master.id][property];\n        }\n        return result;\n    }\n    /**\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    $$setAllProperties(property, value) {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.medias[id][property] = value;\n            }\n        }\n    }\n    /**\n     * @param {?} elem\n     * @return {?}\n     */\n    registerElement(elem) {\n        this.videogularElement = elem;\n    }\n    /**\n     * @param {?} media\n     * @return {?}\n     */\n    registerMedia(media) {\n        this.medias[media.id] = media;\n    }\n    /**\n     * @param {?} media\n     * @return {?}\n     */\n    unregisterMedia(media) {\n        delete this.medias[media.id];\n    }\n}\nVgApiService.ɵfac = function VgApiService_Factory(t) { return new (t || VgApiService)(); };\n/** @nocollapse */\nVgApiService.ctorParameters = () => [];\n/** @nocollapse */ VgApiService.ɵprov = ɵɵdefineInjectable({ factory: function VgApiService_Factory() { return new VgApiService(); }, token: VgApiService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgApiService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /** @type {?} */\n    VgApiService.prototype.medias;\n    /** @type {?} */\n    VgApiService.prototype.videogularElement;\n    /** @type {?} */\n    VgApiService.prototype.playerReadyEvent;\n    /** @type {?} */\n    VgApiService.prototype.isPlayerReady;\n    /** @type {?} */\n    VgApiService.prototype.fsAPI;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/vg-controls-hidden/vg-controls-hidden.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgControlsHiddenService {\n    constructor() {\n        this.isHiddenSubject = new Subject();\n        this.isHidden = this.isHiddenSubject.asObservable();\n    }\n    /**\n     * @param {?} hidden\n     * @return {?}\n     */\n    state(hidden) {\n        this.isHiddenSubject.next(hidden);\n    }\n}\nVgControlsHiddenService.ɵfac = function VgControlsHiddenService_Factory(t) { return new (t || VgControlsHiddenService)(); };\n/** @nocollapse */\nVgControlsHiddenService.ctorParameters = () => [];\n/** @nocollapse */ VgControlsHiddenService.ɵprov = ɵɵdefineInjectable({ factory: function VgControlsHiddenService_Factory() { return new VgControlsHiddenService(); }, token: VgControlsHiddenService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgControlsHiddenService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /** @type {?} */\n    VgControlsHiddenService.prototype.isHidden;\n    /**\n     * @type {?}\n     * @private\n     */\n    VgControlsHiddenService.prototype.isHiddenSubject;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/vg-utils/vg-utils.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgUtilsService {\n    /**\n     * Inspired by Paul Irish\n     * https://gist.github.com/paulirish/211209\n     * @return {?}\n     */\n    static getZIndex() {\n        /** @type {?} */\n        let zIndex = 1;\n        /** @type {?} */\n        let elementZIndex;\n        /** @type {?} */\n        const tags = document.getElementsByTagName('*');\n        for (let i = 0, l = tags.length; i < l; i++) {\n            elementZIndex = parseInt(window.getComputedStyle(tags[i])['z-index'], 10);\n            if (elementZIndex > zIndex) {\n                zIndex = elementZIndex + 1;\n            }\n        }\n        return zIndex;\n    }\n    // Very simple mobile detection, not 100% reliable\n    /**\n     * @return {?}\n     */\n    static isMobileDevice() {\n        // return (\n        //   typeof window.screen.orientation !== 'undefined' ||\n        //   navigator.userAgent.indexOf('IEMobile') !== -1\n        // );\n        // window.orientation is deprecated and we should use window.screen.orientation\n        return (typeof window.orientation !== 'undefined' ||\n            navigator.userAgent.indexOf('IEMobile') !== -1);\n    }\n    /**\n     * @return {?}\n     */\n    static isiOSDevice() {\n        return (navigator.userAgent.match(/ip(hone|ad|od)/i) &&\n            !navigator.userAgent.match(/(iemobile)[\\/\\s]?([\\w\\.]*)/i));\n    }\n    /**\n     * @return {?}\n     */\n    static isCordova() {\n        return (document.URL.indexOf('http://') === -1 &&\n            document.URL.indexOf('https://') === -1);\n    }\n}\nVgUtilsService.ɵfac = function VgUtilsService_Factory(t) { return new (t || VgUtilsService)(); };\n/** @nocollapse */ VgUtilsService.ɵprov = ɵɵdefineInjectable({ factory: function VgUtilsService_Factory() { return new VgUtilsService(); }, token: VgUtilsService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgUtilsService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/vg-fullscreen-api/vg-fullscreen-api.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgFullscreenApiService {\n    constructor() {\n        this.nativeFullscreen = true;\n        this.isFullscreen = false;\n        this.onChangeFullscreen = new EventEmitter();\n    }\n    /**\n     * @param {?} elem\n     * @param {?} medias\n     * @return {?}\n     */\n    init(elem, medias) {\n        this.videogularElement = elem;\n        this.medias = medias;\n        /** @type {?} */\n        const APIs = {\n            w3: {\n                enabled: 'fullscreenEnabled',\n                element: 'fullscreenElement',\n                request: 'requestFullscreen',\n                exit: 'exitFullscreen',\n                onchange: 'fullscreenchange',\n                onerror: 'fullscreenerror',\n            },\n            newWebkit: {\n                enabled: 'webkitFullscreenEnabled',\n                element: 'webkitFullscreenElement',\n                request: 'webkitRequestFullscreen',\n                exit: 'webkitExitFullscreen',\n                onchange: 'webkitfullscreenchange',\n                onerror: 'webkitfullscreenerror',\n            },\n            oldWebkit: {\n                enabled: 'webkitIsFullScreen',\n                element: 'webkitCurrentFullScreenElement',\n                request: 'webkitRequestFullScreen',\n                exit: 'webkitCancelFullScreen',\n                onchange: 'webkitfullscreenchange',\n                onerror: 'webkitfullscreenerror',\n            },\n            moz: {\n                enabled: 'mozFullScreen',\n                element: 'mozFullScreenElement',\n                request: 'mozRequestFullScreen',\n                exit: 'mozCancelFullScreen',\n                onchange: 'mozfullscreenchange',\n                onerror: 'mozfullscreenerror',\n            },\n            ios: {\n                enabled: 'webkitFullscreenEnabled',\n                element: 'webkitFullscreenElement',\n                request: 'webkitEnterFullscreen',\n                exit: 'webkitExitFullscreen',\n                onchange: 'webkitendfullscreen',\n                // Hack for iOS: webkitfullscreenchange it's not firing\n                onerror: 'webkitfullscreenerror',\n            },\n            ms: {\n                enabled: 'msFullscreenEnabled',\n                element: 'msFullscreenElement',\n                request: 'msRequestFullscreen',\n                exit: 'msExitFullscreen',\n                onchange: 'MSFullscreenChange',\n                onerror: 'MSFullscreenError',\n            },\n        };\n        for (const browser in APIs) {\n            if (APIs[browser].enabled in document) {\n                this.polyfill = APIs[browser];\n                break;\n            }\n        }\n        if (VgUtilsService.isiOSDevice()) {\n            this.polyfill = APIs.ios;\n        }\n        this.isAvailable = this.polyfill != null;\n        if (this.polyfill == null) {\n            return;\n        }\n        /** @type {?} */\n        let fsElemDispatcher;\n        switch (this.polyfill.onchange) {\n            // Mozilla dispatches the fullscreen change event from document, not the element\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=724816#c3\n            case 'mozfullscreenchange':\n                fsElemDispatcher = document;\n                break;\n            // iOS dispatches the fullscreen change event from video element\n            case 'webkitendfullscreen':\n                fsElemDispatcher = this.medias.toArray()[0].elem;\n                break;\n            // HTML5 implementation dispatches the fullscreen change event from the element\n            default:\n                fsElemDispatcher = elem;\n        }\n        this.fsChangeSubscription = fromEvent(fsElemDispatcher, this.polyfill.onchange).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.onFullscreenChange();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    onFullscreenChange() {\n        this.isFullscreen = !!document[this.polyfill.element];\n        this.onChangeFullscreen.emit(this.isFullscreen);\n    }\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    toggleFullscreen(element = null) {\n        if (this.isFullscreen) {\n            this.exit();\n        }\n        else {\n            this.request(element);\n        }\n    }\n    /**\n     * @param {?} elem\n     * @return {?}\n     */\n    request(elem) {\n        if (!elem) {\n            elem = this.videogularElement;\n        }\n        this.isFullscreen = true;\n        this.onChangeFullscreen.emit(true);\n        // Perform native full screen support\n        if (this.isAvailable && this.nativeFullscreen) {\n            // Fullscreen for mobile devices\n            if (VgUtilsService.isMobileDevice()) {\n                // We should make fullscreen the video object if it doesn't have native fullscreen support\n                // Fallback! We can't set vg-player on fullscreen, only video/audio objects\n                if ((!this.polyfill.enabled && elem === this.videogularElement) ||\n                    VgUtilsService.isiOSDevice()) {\n                    elem = this.medias.toArray()[0].elem;\n                }\n                this.enterElementInFullScreen(elem);\n            }\n            else {\n                this.enterElementInFullScreen(this.videogularElement);\n            }\n        }\n    }\n    /**\n     * @param {?} elem\n     * @return {?}\n     */\n    enterElementInFullScreen(elem) {\n        elem[this.polyfill.request]();\n    }\n    /**\n     * @return {?}\n     */\n    exit() {\n        this.isFullscreen = false;\n        this.onChangeFullscreen.emit(false);\n        // Exit from native fullscreen\n        if (this.isAvailable && this.nativeFullscreen) {\n            document[this.polyfill.exit]();\n        }\n    }\n}\nVgFullscreenApiService.ɵfac = function VgFullscreenApiService_Factory(t) { return new (t || VgFullscreenApiService)(); };\n/** @nocollapse */\nVgFullscreenApiService.ctorParameters = () => [];\n/** @nocollapse */ VgFullscreenApiService.ɵprov = ɵɵdefineInjectable({ factory: function VgFullscreenApiService_Factory() { return new VgFullscreenApiService(); }, token: VgFullscreenApiService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgFullscreenApiService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /** @type {?} */\n    VgFullscreenApiService.prototype.polyfill;\n    /** @type {?} */\n    VgFullscreenApiService.prototype.onchange;\n    /** @type {?} */\n    VgFullscreenApiService.prototype.onerror;\n    /** @type {?} */\n    VgFullscreenApiService.prototype.nativeFullscreen;\n    /** @type {?} */\n    VgFullscreenApiService.prototype.isFullscreen;\n    /** @type {?} */\n    VgFullscreenApiService.prototype.isAvailable;\n    /** @type {?} */\n    VgFullscreenApiService.prototype.videogularElement;\n    /** @type {?} */\n    VgFullscreenApiService.prototype.medias;\n    /** @type {?} */\n    VgFullscreenApiService.prototype.fsChangeSubscription;\n    /** @type {?} */\n    VgFullscreenApiService.prototype.onChangeFullscreen;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/events/vg-events.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgEvents {\n}\nVgEvents.ɵfac = function VgEvents_Factory(t) { return new (t || VgEvents)(); };\nVgEvents.VG_ABORT = 'abort';\nVgEvents.VG_CAN_PLAY = 'canplay';\nVgEvents.VG_CAN_PLAY_THROUGH = 'canplaythrough';\nVgEvents.VG_DURATION_CHANGE = 'durationchange';\nVgEvents.VG_EMPTIED = 'emptied';\nVgEvents.VG_ENCRYPTED = 'encrypted';\nVgEvents.VG_ENDED = 'ended';\nVgEvents.VG_ERROR = 'error';\nVgEvents.VG_LOADED_DATA = 'loadeddata';\nVgEvents.VG_LOADED_METADATA = 'loadedmetadata';\nVgEvents.VG_LOAD_START = 'loadstart';\nVgEvents.VG_PAUSE = 'pause';\nVgEvents.VG_PLAY = 'play';\nVgEvents.VG_PLAYING = 'playing';\nVgEvents.VG_PROGRESS = 'progress';\nVgEvents.VG_RATE_CHANGE = 'ratechange';\nVgEvents.VG_SEEK = 'seek';\nVgEvents.VG_SEEKED = 'seeked';\nVgEvents.VG_SEEKING = 'seeking';\nVgEvents.VG_STALLED = 'stalled';\nVgEvents.VG_SUSPEND = 'suspend';\nVgEvents.VG_TIME_UPDATE = 'timeupdate';\nVgEvents.VG_VOLUME_CHANGE = 'volumechange';\nVgEvents.VG_WAITING = 'waiting';\nVgEvents.VG_LOAD = 'load';\nVgEvents.VG_ENTER = 'enter';\nVgEvents.VG_EXIT = 'exit';\nVgEvents.VG_START_ADS = 'startads';\nVgEvents.VG_END_ADS = 'endads';\n/** @nocollapse */ VgEvents.ɵprov = ɵɵdefineInjectable({ factory: function VgEvents_Factory() { return new VgEvents(); }, token: VgEvents, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgEvents, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    VgEvents.VG_ABORT;\n    /** @type {?} */\n    VgEvents.VG_CAN_PLAY;\n    /** @type {?} */\n    VgEvents.VG_CAN_PLAY_THROUGH;\n    /** @type {?} */\n    VgEvents.VG_DURATION_CHANGE;\n    /** @type {?} */\n    VgEvents.VG_EMPTIED;\n    /** @type {?} */\n    VgEvents.VG_ENCRYPTED;\n    /** @type {?} */\n    VgEvents.VG_ENDED;\n    /** @type {?} */\n    VgEvents.VG_ERROR;\n    /** @type {?} */\n    VgEvents.VG_LOADED_DATA;\n    /** @type {?} */\n    VgEvents.VG_LOADED_METADATA;\n    /** @type {?} */\n    VgEvents.VG_LOAD_START;\n    /** @type {?} */\n    VgEvents.VG_PAUSE;\n    /** @type {?} */\n    VgEvents.VG_PLAY;\n    /** @type {?} */\n    VgEvents.VG_PLAYING;\n    /** @type {?} */\n    VgEvents.VG_PROGRESS;\n    /** @type {?} */\n    VgEvents.VG_RATE_CHANGE;\n    /** @type {?} */\n    VgEvents.VG_SEEK;\n    /** @type {?} */\n    VgEvents.VG_SEEKED;\n    /** @type {?} */\n    VgEvents.VG_SEEKING;\n    /** @type {?} */\n    VgEvents.VG_STALLED;\n    /** @type {?} */\n    VgEvents.VG_SUSPEND;\n    /** @type {?} */\n    VgEvents.VG_TIME_UPDATE;\n    /** @type {?} */\n    VgEvents.VG_VOLUME_CHANGE;\n    /** @type {?} */\n    VgEvents.VG_WAITING;\n    /** @type {?} */\n    VgEvents.VG_LOAD;\n    /** @type {?} */\n    VgEvents.VG_ENTER;\n    /** @type {?} */\n    VgEvents.VG_EXIT;\n    /** @type {?} */\n    VgEvents.VG_START_ADS;\n    /** @type {?} */\n    VgEvents.VG_END_ADS;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/directives/vg-cue-points/vg-cue-points.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgCuePointsDirective {\n    /**\n     * @param {?} ref\n     */\n    constructor(ref) {\n        this.ref = ref;\n        this.onEnterCuePoint = new EventEmitter();\n        this.onUpdateCuePoint = new EventEmitter();\n        this.onExitCuePoint = new EventEmitter();\n        this.onCompleteCuePoint = new EventEmitter();\n        this.subscriptions = [];\n        this.cuesSubscriptions = [];\n        this.totalCues = 0;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.onLoad$ = fromEvent(this.ref.nativeElement, VgEvents.VG_LOAD);\n        this.subscriptions.push(this.onLoad$.subscribe(this.onLoad.bind(this)));\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onLoad(event) {\n        /** @type {?} */\n        const cues = event.target.track.cues;\n        this.ref.nativeElement.cues = cues;\n        this.updateCuePoints(cues);\n    }\n    /**\n     * @param {?} cues\n     * @return {?}\n     */\n    updateCuePoints(cues) {\n        this.cuesSubscriptions.forEach((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => s.unsubscribe()));\n        for (let i = 0, l = cues.length; i < l; i++) {\n            this.onEnter$ = fromEvent(cues[i], VgEvents.VG_ENTER);\n            this.cuesSubscriptions.push(this.onEnter$.subscribe(this.onEnter.bind(this)));\n            this.onExit$ = fromEvent(cues[i], VgEvents.VG_EXIT);\n            this.cuesSubscriptions.push(this.onExit$.subscribe(this.onExit.bind(this)));\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onEnter(event) {\n        this.onEnterCuePoint.emit(event.target);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onExit(event) {\n        this.onExitCuePoint.emit(event.target);\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ref.nativeElement.track && this.ref.nativeElement.track.cues) {\n            /** @type {?} */\n            const changes = this.totalCues !== this.ref.nativeElement.track.cues.length;\n            if (changes) {\n                this.totalCues = this.ref.nativeElement.track.cues.length;\n                this.ref.nativeElement.cues = this.ref.nativeElement.track.cues;\n                this.updateCuePoints(this.ref.nativeElement.track.cues);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscriptions.forEach((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => s.unsubscribe()));\n    }\n}\nVgCuePointsDirective.ɵfac = function VgCuePointsDirective_Factory(t) { return new (t || VgCuePointsDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nVgCuePointsDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: VgCuePointsDirective, selectors: [[\"\", \"vgCuePoints\", \"\"]], outputs: { onEnterCuePoint: \"onEnterCuePoint\", onUpdateCuePoint: \"onUpdateCuePoint\", onExitCuePoint: \"onExitCuePoint\", onCompleteCuePoint: \"onCompleteCuePoint\" } });\n/** @nocollapse */\nVgCuePointsDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nVgCuePointsDirective.propDecorators = {\n    onEnterCuePoint: [{ type: Output }],\n    onUpdateCuePoint: [{ type: Output }],\n    onExitCuePoint: [{ type: Output }],\n    onCompleteCuePoint: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgCuePointsDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[vgCuePoints]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { onEnterCuePoint: [{\n            type: Output\n        }], onUpdateCuePoint: [{\n            type: Output\n        }], onExitCuePoint: [{\n            type: Output\n        }], onCompleteCuePoint: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    VgCuePointsDirective.prototype.onEnterCuePoint;\n    /** @type {?} */\n    VgCuePointsDirective.prototype.onUpdateCuePoint;\n    /** @type {?} */\n    VgCuePointsDirective.prototype.onExitCuePoint;\n    /** @type {?} */\n    VgCuePointsDirective.prototype.onCompleteCuePoint;\n    /** @type {?} */\n    VgCuePointsDirective.prototype.subscriptions;\n    /** @type {?} */\n    VgCuePointsDirective.prototype.cuesSubscriptions;\n    /** @type {?} */\n    VgCuePointsDirective.prototype.onLoad$;\n    /** @type {?} */\n    VgCuePointsDirective.prototype.onEnter$;\n    /** @type {?} */\n    VgCuePointsDirective.prototype.onExit$;\n    /** @type {?} */\n    VgCuePointsDirective.prototype.totalCues;\n    /** @type {?} */\n    VgCuePointsDirective.prototype.ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/directives/vg-media/vg-media.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgMediaDirective {\n    /**\n     * @param {?} api\n     * @param {?} ref\n     */\n    constructor(api, ref) {\n        this.api = api;\n        this.ref = ref;\n        this.state = VgStates.VG_PAUSED;\n        this.time = { current: 0, total: 0, left: 0 };\n        this.buffer = { end: 0 };\n        this.canPlay = false;\n        this.canPlayThrough = false;\n        this.isMetadataLoaded = false;\n        this.isWaiting = false;\n        this.isCompleted = false;\n        this.isLive = false;\n        this.isBufferDetected = false;\n        this.checkInterval = 200;\n        this.currentPlayPos = 0;\n        this.lastPlayPos = 0;\n        this.playAtferSync = false;\n        this.bufferDetected = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.vgMedia.nodeName) {\n            // It's a native element\n            this.elem = this.vgMedia;\n        }\n        else {\n            // It's an Angular Class\n            this.elem = this.vgMedia.elem;\n        }\n        // Just in case we're creating this vgMedia dynamically register again into API\n        this.api.registerMedia(this);\n        this.subscriptions = {\n            // Native events\n            abort: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_ABORT),\n            canPlay: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_CAN_PLAY),\n            canPlayThrough: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_CAN_PLAY_THROUGH),\n            durationChange: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_DURATION_CHANGE),\n            emptied: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_EMPTIED),\n            encrypted: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_ENCRYPTED),\n            ended: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_ENDED),\n            error: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_ERROR),\n            loadedData: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_LOADED_DATA),\n            loadedMetadata: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_LOADED_METADATA),\n            loadStart: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_LOAD_START),\n            pause: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_PAUSE),\n            play: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_PLAY),\n            playing: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_PLAYING),\n            progress: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_PROGRESS),\n            rateChange: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_RATE_CHANGE),\n            seeked: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_SEEKED),\n            seeking: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_SEEKING),\n            stalled: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_STALLED),\n            suspend: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_SUSPEND),\n            timeUpdate: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_TIME_UPDATE),\n            volumeChange: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_VOLUME_CHANGE),\n            waiting: fromEvent((/** @type {?} */ (this.elem)), VgEvents.VG_WAITING),\n            // Advertisement only events\n            startAds: fromEvent((/** @type {?} */ (window)), VgEvents.VG_START_ADS),\n            endAds: fromEvent((/** @type {?} */ (window)), VgEvents.VG_END_ADS),\n            // See changes on <source> child elements to reload the video file\n            mutation: new Observable((/**\n             * @param {?} observer\n             * @return {?}\n             */\n            (observer) => {\n                /** @type {?} */\n                const domObs = new MutationObserver((/**\n                 * @param {?} mutations\n                 * @return {?}\n                 */\n                (mutations) => {\n                    observer.next(mutations);\n                }));\n                domObs.observe((/** @type {?} */ (this.elem)), { childList: true, attributes: true });\n                return (/**\n                 * @return {?}\n                 */\n                () => {\n                    domObs.disconnect();\n                });\n            })),\n            // Custom buffering detection\n            bufferDetected: this.bufferDetected,\n        };\n        this.mutationObs = this.subscriptions.mutation.subscribe(this.onMutation.bind(this));\n        this.canPlayObs = this.subscriptions.canPlay.subscribe(this.onCanPlay.bind(this));\n        this.canPlayThroughObs = this.subscriptions.canPlayThrough.subscribe(this.onCanPlayThrough.bind(this));\n        this.loadedMetadataObs = this.subscriptions.loadedMetadata.subscribe(this.onLoadMetadata.bind(this));\n        this.waitingObs = this.subscriptions.waiting.subscribe(this.onWait.bind(this));\n        this.progressObs = this.subscriptions.progress.subscribe(this.onProgress.bind(this));\n        this.endedObs = this.subscriptions.ended.subscribe(this.onComplete.bind(this));\n        this.playingObs = this.subscriptions.playing.subscribe(this.onStartPlaying.bind(this));\n        this.playObs = this.subscriptions.play.subscribe(this.onPlay.bind(this));\n        this.pauseObs = this.subscriptions.pause.subscribe(this.onPause.bind(this));\n        this.timeUpdateObs = this.subscriptions.timeUpdate.subscribe(this.onTimeUpdate.bind(this));\n        this.volumeChangeObs = this.subscriptions.volumeChange.subscribe(this.onVolumeChange.bind(this));\n        this.errorObs = this.subscriptions.error.subscribe(this.onError.bind(this));\n        if (this.vgMaster) {\n            this.api.playerReadyEvent.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.prepareSync();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    prepareSync() {\n        /** @type {?} */\n        const canPlayAll = [];\n        for (const media in this.api.medias) {\n            if (this.api.medias[media]) {\n                canPlayAll.push(this.api.medias[media].subscriptions.canPlay);\n            }\n        }\n        this.canPlayAllSubscription = combineLatest(canPlayAll)\n            .pipe(map((/**\n         * @param {...?} params\n         * @return {?}\n         */\n        (...params) => {\n            /** @type {?} */\n            const checkReadyState = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                return event.target.readyState === 4;\n            });\n            /** @type {?} */\n            const allReady = params.some(checkReadyState);\n            if (allReady && !this.syncSubscription) {\n                this.startSync();\n                this.syncSubscription.unsubscribe();\n            }\n        })))\n            .subscribe();\n    }\n    /**\n     * @return {?}\n     */\n    startSync() {\n        this.syncSubscription = timer(0, 1000).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            for (const media in this.api.medias) {\n                if (this.api.medias[media] !== this) {\n                    /** @type {?} */\n                    const diff = this.api.medias[media].currentTime - this.currentTime;\n                    if (diff < -0.3 || diff > 0.3) {\n                        this.playAtferSync = this.state === VgStates.VG_PLAYING;\n                        this.pause();\n                        this.api.medias[media].pause();\n                        this.api.medias[media].currentTime = this.currentTime;\n                    }\n                    else {\n                        if (this.playAtferSync) {\n                            this.play();\n                            this.api.medias[media].play();\n                            this.playAtferSync = false;\n                        }\n                    }\n                }\n            }\n        }));\n    }\n    /**\n     * @param {?} mutations\n     * @return {?}\n     */\n    onMutation(mutations) {\n        // Detect changes only for source elements or src attribute\n        for (let i = 0, l = mutations.length; i < l; i++) {\n            /** @type {?} */\n            const mut = mutations[i];\n            if (mut.type === 'attributes' && mut.attributeName === 'src') {\n                // Only load src file if it's not a blob (for DASH / HLS sources)\n                if (((/** @type {?} */ (mut.target))).src &&\n                    ((/** @type {?} */ (mut.target))).src.length > 0 &&\n                    ((/** @type {?} */ (mut.target))).src.indexOf('blob:') < 0) {\n                    this.loadMedia();\n                    break;\n                }\n            }\n            else if (mut.type === 'childList' &&\n                mut.removedNodes.length &&\n                mut.removedNodes[0].nodeName.toLowerCase() === 'source') {\n                this.loadMedia();\n                break;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    loadMedia() {\n        this.vgMedia.pause();\n        this.vgMedia.currentTime = 0;\n        // Start buffering until we can play the media file\n        this.stopBufferCheck();\n        this.isBufferDetected = true;\n        this.bufferDetected.next(this.isBufferDetected);\n        // TODO: This is ugly, we should find something cleaner. For some reason a TimerObservable doesn't works.\n        setTimeout((/**\n         * @return {?}\n         */\n        () => this.vgMedia.load()), 10);\n    }\n    /**\n     * @return {?}\n     */\n    play() {\n        // short-circuit if already playing\n        if (this.playPromise ||\n            (this.state !== VgStates.VG_PAUSED && this.state !== VgStates.VG_ENDED)) {\n            return;\n        }\n        this.playPromise = this.vgMedia.play();\n        // browser has async play promise\n        if (this.playPromise && this.playPromise.then && this.playPromise.catch) {\n            this.playPromise\n                .then((/**\n             * @return {?}\n             */\n            () => {\n                this.playPromise = null;\n            }))\n                .catch((/**\n             * @return {?}\n             */\n            () => {\n                this.playPromise = null;\n                // deliberately empty for the sake of eating console noise\n            }));\n        }\n        return this.playPromise;\n    }\n    /**\n     * @return {?}\n     */\n    pause() {\n        // browser has async play promise\n        if (this.playPromise) {\n            this.playPromise.then((/**\n             * @return {?}\n             */\n            () => {\n                this.vgMedia.pause();\n            }));\n        }\n        else {\n            this.vgMedia.pause();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get id() {\n        // We should return undefined if vgMedia still doesn't exist\n        /** @type {?} */\n        let result;\n        if (this.vgMedia) {\n            result = this.vgMedia.id;\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    get duration() {\n        return this.vgMedia.duration === Infinity\n            ? this.specifiedDuration\n            : this.vgMedia.duration;\n    }\n    /**\n     * @param {?} seconds\n     * @return {?}\n     */\n    set currentTime(seconds) {\n        this.vgMedia.currentTime = seconds;\n        // this.elem.dispatchEvent(new CustomEvent(VgEvents.VG_SEEK));\n    }\n    /**\n     * @return {?}\n     */\n    get currentTime() {\n        return this.vgMedia.currentTime;\n    }\n    /**\n     * @param {?} volume\n     * @return {?}\n     */\n    set volume(volume) {\n        this.vgMedia.volume = volume;\n    }\n    /**\n     * @return {?}\n     */\n    get volume() {\n        return this.vgMedia.volume;\n    }\n    /**\n     * @param {?} rate\n     * @return {?}\n     */\n    set playbackRate(rate) {\n        this.vgMedia.playbackRate = rate;\n    }\n    /**\n     * @return {?}\n     */\n    get playbackRate() {\n        return this.vgMedia.playbackRate;\n    }\n    /**\n     * @return {?}\n     */\n    get buffered() {\n        return this.vgMedia.buffered;\n    }\n    /**\n     * @return {?}\n     */\n    get textTracks() {\n        return this.vgMedia.textTracks;\n    }\n    // @ts-ignore\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onCanPlay(event) {\n        this.isBufferDetected = false;\n        this.bufferDetected.next(this.isBufferDetected);\n        this.canPlay = true;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onCanPlayThrough(event) {\n        this.isBufferDetected = false;\n        this.bufferDetected.next(this.isBufferDetected);\n        this.canPlayThrough = true;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onLoadMetadata(event) {\n        this.isMetadataLoaded = true;\n        this.time = {\n            current: 0,\n            left: 0,\n            total: this.duration * 1000,\n        };\n        this.state = VgStates.VG_PAUSED;\n        // Live streaming check\n        /** @type {?} */\n        const t = Math.round(this.time.total);\n        this.isLive = t === Infinity;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onWait(event) {\n        this.isWaiting = true;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onComplete(event) {\n        this.isCompleted = true;\n        this.state = VgStates.VG_ENDED;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onStartPlaying(event) {\n        this.state = VgStates.VG_PLAYING;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onPlay(event) {\n        this.state = VgStates.VG_PLAYING;\n        if (this.vgMaster) {\n            if (!this.syncSubscription || this.syncSubscription.closed) {\n                this.startSync();\n            }\n        }\n        this.startBufferCheck();\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onPause(event) {\n        this.state = VgStates.VG_PAUSED;\n        if (this.vgMaster) {\n            if (!this.playAtferSync) {\n                this.syncSubscription.unsubscribe();\n            }\n        }\n        this.stopBufferCheck();\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onTimeUpdate(event) {\n        /** @type {?} */\n        const end = this.buffered.length - 1;\n        this.time = {\n            current: this.currentTime * 1000,\n            total: this.time.total,\n            left: (this.duration - this.currentTime) * 1000,\n        };\n        if (end >= 0) {\n            this.buffer = { end: this.buffered.end(end) * 1000 };\n        }\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onProgress(event) {\n        /** @type {?} */\n        const end = this.buffered.length - 1;\n        if (end >= 0) {\n            this.buffer = { end: this.buffered.end(end) * 1000 };\n        }\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onVolumeChange(event) {\n        // TODO: Save to localstorage the current volume\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onError(event) {\n        // TODO: Handle error messages\n        this.ref.detectChanges();\n    }\n    // http://stackoverflow.com/a/23828241/779529\n    /**\n     * @return {?}\n     */\n    bufferCheck() {\n        /** @type {?} */\n        const offset = 1 / this.checkInterval;\n        this.currentPlayPos = this.currentTime;\n        if (!this.isBufferDetected &&\n            this.currentPlayPos < this.lastPlayPos + offset) {\n            this.isBufferDetected = true;\n        }\n        if (this.isBufferDetected &&\n            this.currentPlayPos > this.lastPlayPos + offset) {\n            this.isBufferDetected = false;\n        }\n        // Prevent calls to bufferCheck after ngOnDestroy have been called\n        if (!this.bufferDetected.closed) {\n            this.bufferDetected.next(this.isBufferDetected);\n        }\n        this.lastPlayPos = this.currentPlayPos;\n    }\n    /**\n     * @return {?}\n     */\n    startBufferCheck() {\n        this.checkBufferSubscription = timer(0, this.checkInterval).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.bufferCheck();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    stopBufferCheck() {\n        if (this.checkBufferSubscription) {\n            this.checkBufferSubscription.unsubscribe();\n        }\n        this.isBufferDetected = false;\n        this.bufferDetected.next(this.isBufferDetected);\n    }\n    /**\n     * @param {?} value\n     * @param {?=} byPercent\n     * @return {?}\n     */\n    seekTime(value, byPercent = false) {\n        /** @type {?} */\n        let second;\n        /** @type {?} */\n        const duration = this.duration;\n        if (byPercent) {\n            second = (value * duration) / 100;\n        }\n        else {\n            second = value;\n        }\n        this.currentTime = second;\n    }\n    /**\n     * @param {?} type\n     * @param {?=} label\n     * @param {?=} language\n     * @param {?=} mode\n     * @return {?}\n     */\n    addTextTrack(type, label, language, mode) {\n        /** @type {?} */\n        const newTrack = this.vgMedia.addTextTrack(type, label, language);\n        if (mode) {\n            newTrack.mode = mode;\n        }\n        return newTrack;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.vgMedia.src = '';\n        this.mutationObs.unsubscribe();\n        this.canPlayObs.unsubscribe();\n        this.canPlayThroughObs.unsubscribe();\n        this.loadedMetadataObs.unsubscribe();\n        this.waitingObs.unsubscribe();\n        this.progressObs.unsubscribe();\n        this.endedObs.unsubscribe();\n        this.playingObs.unsubscribe();\n        this.playObs.unsubscribe();\n        this.pauseObs.unsubscribe();\n        this.timeUpdateObs.unsubscribe();\n        this.volumeChangeObs.unsubscribe();\n        this.errorObs.unsubscribe();\n        if (this.checkBufferSubscription) {\n            this.checkBufferSubscription.unsubscribe();\n        }\n        if (this.syncSubscription) {\n            this.syncSubscription.unsubscribe();\n        }\n        this.bufferDetected.complete();\n        this.bufferDetected.unsubscribe();\n        this.api.unregisterMedia(this);\n    }\n}\nVgMediaDirective.ɵfac = function VgMediaDirective_Factory(t) { return new (t || VgMediaDirective)(ɵngcc0.ɵɵdirectiveInject(VgApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nVgMediaDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: VgMediaDirective, selectors: [[\"\", \"vgMedia\", \"\"]], inputs: { vgMedia: \"vgMedia\", vgMaster: \"vgMaster\" } });\n/** @nocollapse */\nVgMediaDirective.ctorParameters = () => [\n    { type: VgApiService },\n    { type: ChangeDetectorRef }\n];\nVgMediaDirective.propDecorators = {\n    vgMedia: [{ type: Input }],\n    vgMaster: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgMediaDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[vgMedia]'\n            }]\n    }], function () { return [{ type: VgApiService }, { type: ɵngcc0.ChangeDetectorRef }]; }, { vgMedia: [{\n            type: Input\n        }], vgMaster: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    VgMediaDirective.prototype.elem;\n    /** @type {?} */\n    VgMediaDirective.prototype.vgMedia;\n    /** @type {?} */\n    VgMediaDirective.prototype.vgMaster;\n    /** @type {?} */\n    VgMediaDirective.prototype.state;\n    /** @type {?} */\n    VgMediaDirective.prototype.time;\n    /** @type {?} */\n    VgMediaDirective.prototype.buffer;\n    /** @type {?} */\n    VgMediaDirective.prototype.track;\n    /** @type {?} */\n    VgMediaDirective.prototype.subscriptions;\n    /** @type {?} */\n    VgMediaDirective.prototype.canPlay;\n    /** @type {?} */\n    VgMediaDirective.prototype.canPlayThrough;\n    /** @type {?} */\n    VgMediaDirective.prototype.isMetadataLoaded;\n    /** @type {?} */\n    VgMediaDirective.prototype.isWaiting;\n    /** @type {?} */\n    VgMediaDirective.prototype.isCompleted;\n    /** @type {?} */\n    VgMediaDirective.prototype.isLive;\n    /** @type {?} */\n    VgMediaDirective.prototype.isBufferDetected;\n    /** @type {?} */\n    VgMediaDirective.prototype.checkInterval;\n    /** @type {?} */\n    VgMediaDirective.prototype.currentPlayPos;\n    /** @type {?} */\n    VgMediaDirective.prototype.lastPlayPos;\n    /** @type {?} */\n    VgMediaDirective.prototype.specifiedDuration;\n    /** @type {?} */\n    VgMediaDirective.prototype.checkBufferSubscription;\n    /** @type {?} */\n    VgMediaDirective.prototype.syncSubscription;\n    /** @type {?} */\n    VgMediaDirective.prototype.canPlayAllSubscription;\n    /** @type {?} */\n    VgMediaDirective.prototype.playAtferSync;\n    /** @type {?} */\n    VgMediaDirective.prototype.mutationObs;\n    /** @type {?} */\n    VgMediaDirective.prototype.canPlayObs;\n    /** @type {?} */\n    VgMediaDirective.prototype.canPlayThroughObs;\n    /** @type {?} */\n    VgMediaDirective.prototype.loadedMetadataObs;\n    /** @type {?} */\n    VgMediaDirective.prototype.waitingObs;\n    /** @type {?} */\n    VgMediaDirective.prototype.progressObs;\n    /** @type {?} */\n    VgMediaDirective.prototype.endedObs;\n    /** @type {?} */\n    VgMediaDirective.prototype.playingObs;\n    /** @type {?} */\n    VgMediaDirective.prototype.playObs;\n    /** @type {?} */\n    VgMediaDirective.prototype.pauseObs;\n    /** @type {?} */\n    VgMediaDirective.prototype.timeUpdateObs;\n    /** @type {?} */\n    VgMediaDirective.prototype.volumeChangeObs;\n    /** @type {?} */\n    VgMediaDirective.prototype.errorObs;\n    /** @type {?} */\n    VgMediaDirective.prototype.bufferDetected;\n    /** @type {?} */\n    VgMediaDirective.prototype.playPromise;\n    /**\n     * @type {?}\n     * @private\n     */\n    VgMediaDirective.prototype.api;\n    /**\n     * @type {?}\n     * @private\n     */\n    VgMediaDirective.prototype.ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/vg-player/vg-player.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgPlayerComponent {\n    /**\n     * @param {?} ref\n     * @param {?} api\n     * @param {?} fsAPI\n     * @param {?} controlsHidden\n     */\n    constructor(ref, api, fsAPI, controlsHidden) {\n        this.api = api;\n        this.fsAPI = fsAPI;\n        this.controlsHidden = controlsHidden;\n        this.isFullscreen = false;\n        this.isNativeFullscreen = false;\n        this.areControlsHidden = false;\n        this.onPlayerReady = new EventEmitter();\n        this.onMediaReady = new EventEmitter();\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n        this.api.registerElement(this.elem);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this.medias.toArray().forEach((/**\n         * @param {?} media\n         * @return {?}\n         */\n        (media) => {\n            this.api.registerMedia(media);\n        }));\n        this.fsAPI.init(this.elem, this.medias);\n        this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n        this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\n        this.api.onPlayerReady(this.fsAPI);\n        this.onPlayerReady.emit(this.api);\n    }\n    /**\n     * @param {?} fsState\n     * @return {?}\n     */\n    onChangeFullscreen(fsState) {\n        if (!this.fsAPI.nativeFullscreen) {\n            this.isFullscreen = fsState;\n            this.zIndex = fsState ? VgUtilsService.getZIndex().toString() : 'auto';\n        }\n        else {\n            this.isNativeFullscreen = fsState;\n        }\n    }\n    /**\n     * @param {?} hidden\n     * @return {?}\n     */\n    onHideControls(hidden) {\n        this.areControlsHidden = hidden;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscriptions.forEach((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => s.unsubscribe()));\n    }\n}\nVgPlayerComponent.ɵfac = function VgPlayerComponent_Factory(t) { return new (t || VgPlayerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(VgApiService), ɵngcc0.ɵɵdirectiveInject(VgFullscreenApiService), ɵngcc0.ɵɵdirectiveInject(VgControlsHiddenService)); };\nVgPlayerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgPlayerComponent, selectors: [[\"vg-player\"]], contentQueries: function VgPlayerComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, VgMediaDirective, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.medias = _t);\n    } }, hostVars: 8, hostBindings: function VgPlayerComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"z-index\", ctx.zIndex);\n        ɵngcc0.ɵɵclassProp(\"fullscreen\", ctx.isFullscreen)(\"native-fullscreen\", ctx.isNativeFullscreen)(\"controls-hidden\", ctx.areControlsHidden);\n    } }, outputs: { onPlayerReady: \"onPlayerReady\", onMediaReady: \"onMediaReady\" }, features: [ɵngcc0.ɵɵProvidersFeature([VgApiService, VgFullscreenApiService, VgControlsHiddenService])], ngContentSelectors: _c0, decls: 1, vars: 0, template: function VgPlayerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\"\\n      vg-player {\\n        font-family: 'videogular';\\n        position: relative;\\n        display: flex;\\n        width: 100%;\\n        height: 100%;\\n        overflow: hidden;\\n        background-color: black;\\n      }\\n      vg-player.fullscreen {\\n        position: fixed;\\n        left: 0;\\n        top: 0;\\n      }\\n      vg-player.native-fullscreen.controls-hidden {\\n        cursor: none;\\n      }\\n    \"], encapsulation: 2 });\n/** @nocollapse */\nVgPlayerComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: VgApiService },\n    { type: VgFullscreenApiService },\n    { type: VgControlsHiddenService }\n];\nVgPlayerComponent.propDecorators = {\n    isFullscreen: [{ type: HostBinding, args: ['class.fullscreen',] }],\n    isNativeFullscreen: [{ type: HostBinding, args: ['class.native-fullscreen',] }],\n    areControlsHidden: [{ type: HostBinding, args: ['class.controls-hidden',] }],\n    zIndex: [{ type: HostBinding, args: ['style.z-index',] }],\n    onPlayerReady: [{ type: Output }],\n    onMediaReady: [{ type: Output }],\n    medias: [{ type: ContentChildren, args: [VgMediaDirective,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgPlayerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'vg-player',\n                encapsulation: ViewEncapsulation.None,\n                template: `<ng-content></ng-content>`,\n                providers: [VgApiService, VgFullscreenApiService, VgControlsHiddenService],\n                styles: [`\n      vg-player {\n        font-family: 'videogular';\n        position: relative;\n        display: flex;\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        background-color: black;\n      }\n      vg-player.fullscreen {\n        position: fixed;\n        left: 0;\n        top: 0;\n      }\n      vg-player.native-fullscreen.controls-hidden {\n        cursor: none;\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: VgApiService }, { type: VgFullscreenApiService }, { type: VgControlsHiddenService }]; }, { isFullscreen: [{\n            type: HostBinding,\n            args: ['class.fullscreen']\n        }], isNativeFullscreen: [{\n            type: HostBinding,\n            args: ['class.native-fullscreen']\n        }], areControlsHidden: [{\n            type: HostBinding,\n            args: ['class.controls-hidden']\n        }], onPlayerReady: [{\n            type: Output\n        }], onMediaReady: [{\n            type: Output\n        }], zIndex: [{\n            type: HostBinding,\n            args: ['style.z-index']\n        }], medias: [{\n            type: ContentChildren,\n            args: [VgMediaDirective]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    VgPlayerComponent.prototype.elem;\n    /** @type {?} */\n    VgPlayerComponent.prototype.isFullscreen;\n    /** @type {?} */\n    VgPlayerComponent.prototype.isNativeFullscreen;\n    /** @type {?} */\n    VgPlayerComponent.prototype.areControlsHidden;\n    /** @type {?} */\n    VgPlayerComponent.prototype.zIndex;\n    /** @type {?} */\n    VgPlayerComponent.prototype.onPlayerReady;\n    /** @type {?} */\n    VgPlayerComponent.prototype.onMediaReady;\n    /** @type {?} */\n    VgPlayerComponent.prototype.medias;\n    /** @type {?} */\n    VgPlayerComponent.prototype.subscriptions;\n    /** @type {?} */\n    VgPlayerComponent.prototype.api;\n    /** @type {?} */\n    VgPlayerComponent.prototype.fsAPI;\n    /**\n     * @type {?}\n     * @private\n     */\n    VgPlayerComponent.prototype.controlsHidden;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/core.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst services = [\n    VgApiService,\n    VgControlsHiddenService,\n    VgFullscreenApiService,\n    VgUtilsService,\n    VgEvents,\n    VgStates\n];\n/** @type {?} */\nconst directives = [\n    VgCuePointsDirective,\n    VgMediaDirective\n];\nclass VgCoreModule {\n}\nVgCoreModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: VgCoreModule });\nVgCoreModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function VgCoreModule_Factory(t) { return new (t || VgCoreModule)(); }, providers: [...services], imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(VgCoreModule, { declarations: function () { return [VgCuePointsDirective, VgMediaDirective, VgPlayerComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [VgCuePointsDirective, VgMediaDirective, VgPlayerComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgCoreModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                providers: [...services],\n                declarations: [...directives, VgPlayerComponent],\n                exports: [...directives, VgPlayerComponent]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/interfaces/bitrate-options.interface.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction BitrateOptions() { }\nif (false) {\n    /** @type {?} */\n    BitrateOptions.prototype.qualityIndex;\n    /** @type {?} */\n    BitrateOptions.prototype.width;\n    /** @type {?} */\n    BitrateOptions.prototype.height;\n    /** @type {?} */\n    BitrateOptions.prototype.bitrate;\n    /** @type {?} */\n    BitrateOptions.prototype.mediaType;\n    /** @type {?|undefined} */\n    BitrateOptions.prototype.label;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/interfaces/i-media-element.interface.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction IMediaElement() { }\nif (false) {\n    /**\n     * Returns the id of the element.\n     * @type {?}\n     */\n    IMediaElement.prototype.id;\n    /**\n     * Returns the node name. Only available on native HTML tags.\n     * @type {?|undefined}\n     */\n    IMediaElement.prototype.nodeName;\n    /**\n     * Returns the node element. Only available on Angular classes.\n     * @type {?|undefined}\n     */\n    IMediaElement.prototype.elem;\n    /**\n     * Returns an AudioTrackList object with the audio tracks for a given video element.\n     * @type {?}\n     */\n    IMediaElement.prototype.audioTracks;\n    /**\n     * Gets or sets a value that indicates whether to start playing the media automatically.\n     * @type {?}\n     */\n    IMediaElement.prototype.autoplay;\n    /**\n     * Gets a collection of buffered time ranges.\n     * @type {?}\n     */\n    IMediaElement.prototype.buffered;\n    /**\n     * Gets or sets a flag that indicates whether the client provides a set of controls for\n     * the media (in case the developer does not include controls for the player).\n     * @type {?}\n     */\n    IMediaElement.prototype.controls;\n    /** @type {?} */\n    IMediaElement.prototype.crossOrigin;\n    /**\n     * Gets the address or URL of the current media resource that is selected by IHTMLMediaElement.\n     * @type {?}\n     */\n    IMediaElement.prototype.currentSrc;\n    /**\n     * Gets or sets the current playback position, in seconds.\n     * @type {?}\n     */\n    IMediaElement.prototype.currentTime;\n    /** @type {?} */\n    IMediaElement.prototype.defaultMuted;\n    /**\n     * Gets or sets the default playback rate when the user is not using fast forward or reverse for a video or audio resource.\n     * @type {?}\n     */\n    IMediaElement.prototype.defaultPlaybackRate;\n    /**\n     * Returns the duration in seconds of the current media resource. A NaN value is returned if duration\n     * is not available, or Infinity if the media resource is streaming.\n     * @type {?}\n     */\n    IMediaElement.prototype.duration;\n    /**\n     * Gets information about whether the playback has ended or not.\n     * @type {?}\n     */\n    IMediaElement.prototype.ended;\n    /**\n     * Returns an object representing the current error state of the audio or video element.\n     * @type {?}\n     */\n    IMediaElement.prototype.error;\n    /**\n     * Gets or sets a flag to specify whether playback should restart after it completes.\n     * @type {?}\n     */\n    IMediaElement.prototype.loop;\n    /** @type {?} */\n    IMediaElement.prototype.mediaKeys;\n    /**\n     * Specifies the purpose of the audio or video media, such as background audio or alerts.\n     * @type {?}\n     */\n    IMediaElement.prototype.msAudioCategory;\n    /**\n     * Specifies the output device id that the audio will be sent to.\n     * @type {?}\n     */\n    IMediaElement.prototype.msAudioDeviceType;\n    /** @type {?} */\n    IMediaElement.prototype.msGraphicsTrustStatus;\n    /**\n     * Gets the MSMediaKeys object, which is used for decrypting media data, that is associated with this media element.\n     * @type {?}\n     */\n    IMediaElement.prototype.msKeys;\n    /**\n     * Gets or sets whether the DLNA PlayTo device is available.\n     * @type {?}\n     */\n    IMediaElement.prototype.msPlayToDisabled;\n    /**\n     * Gets or sets the path to the preferred media source. This enables the Play To target device to\n     * stream the media content, which can be DRM protected, from a different location, such as a cloud media server.\n     * @type {?}\n     */\n    IMediaElement.prototype.msPlayToPreferredSourceUri;\n    /**\n     * Gets or sets the primary DLNA PlayTo device.\n     * @type {?}\n     */\n    IMediaElement.prototype.msPlayToPrimary;\n    /**\n     * Gets the source associated with the media element for use by the PlayToManager.\n     * @type {?}\n     */\n    IMediaElement.prototype.msPlayToSource;\n    /**\n     * Specifies whether or not to enable low-latency playback on the media element.\n     * @type {?}\n     */\n    IMediaElement.prototype.msRealTime;\n    /**\n     * Gets or sets a flag that indicates whether the audio (either audio or the audio track on video media) is muted.\n     * @type {?}\n     */\n    IMediaElement.prototype.muted;\n    /**\n     * Gets the current network activity for the element.\n     * @type {?}\n     */\n    IMediaElement.prototype.networkState;\n    /** @type {?} */\n    IMediaElement.prototype.onencrypted;\n    /** @type {?} */\n    IMediaElement.prototype.onmsneedkey;\n    /**\n     * Gets a flag that specifies whether playback is paused.\n     * @type {?}\n     */\n    IMediaElement.prototype.paused;\n    /**\n     * Gets or sets the current rate of speed for the media resource to play. This speed is\n     * expressed as a multiple of the normal speed of the media resource.\n     * @type {?}\n     */\n    IMediaElement.prototype.playbackRate;\n    /**\n     * Gets TimeRanges for the current media resource that has been played.\n     * @type {?}\n     */\n    IMediaElement.prototype.played;\n    /**\n     * Gets or sets the current playback position, in seconds.\n     * @type {?}\n     */\n    IMediaElement.prototype.preload;\n    /** @type {?} */\n    IMediaElement.prototype.readyState;\n    /**\n     * Returns a TimeRanges object that represents the ranges of the current media resource that can be seeked.\n     * @type {?}\n     */\n    IMediaElement.prototype.seekable;\n    /**\n     * Gets a flag that indicates whether the the client is currently moving to a new playback position in the media resource.\n     * @type {?}\n     */\n    IMediaElement.prototype.seeking;\n    /**\n     * The address or URL of the a media resource that is to be considered.\n     * @type {?}\n     */\n    IMediaElement.prototype.src;\n    /** @type {?} */\n    IMediaElement.prototype.srcObject;\n    /** @type {?} */\n    IMediaElement.prototype.textTracks;\n    /** @type {?} */\n    IMediaElement.prototype.videoTracks;\n    /**\n     * Gets or sets the volume level for audio portions of the media element.\n     * @type {?}\n     */\n    IMediaElement.prototype.volume;\n    /** @type {?} */\n    IMediaElement.prototype.HAVE_CURRENT_DATA;\n    /** @type {?} */\n    IMediaElement.prototype.HAVE_ENOUGH_DATA;\n    /** @type {?} */\n    IMediaElement.prototype.HAVE_FUTURE_DATA;\n    /** @type {?} */\n    IMediaElement.prototype.HAVE_METADATA;\n    /** @type {?} */\n    IMediaElement.prototype.HAVE_NOTHING;\n    /** @type {?} */\n    IMediaElement.prototype.NETWORK_EMPTY;\n    /** @type {?} */\n    IMediaElement.prototype.NETWORK_IDLE;\n    /** @type {?} */\n    IMediaElement.prototype.NETWORK_LOADING;\n    /** @type {?} */\n    IMediaElement.prototype.NETWORK_NO_SOURCE;\n    /**\n     * @param {?} kind\n     * @param {?=} label\n     * @param {?=} language\n     * @return {?}\n     */\n    IMediaElement.prototype.addTextTrack = function (kind, label, language) { };\n    /**\n     * Returns a string that specifies whether the client can play a given media resource type.\n     * @param {?} type\n     * @return {?}\n     */\n    IMediaElement.prototype.canPlayType = function (type) { };\n    /**\n     * Resets the audio or video object and loads a new media resource.\n     * @return {?}\n     */\n    IMediaElement.prototype.load = function () { };\n    /**\n     * Clears all effects from the media pipeline.\n     * @return {?}\n     */\n    IMediaElement.prototype.msClearEffects = function () { };\n    /**\n     * @return {?}\n     */\n    IMediaElement.prototype.msGetAsCastingSource = function () { };\n    /**\n     * Inserts the specified audio effect into media pipeline.\n     * @param {?} activatableClassId\n     * @param {?} effectRequired\n     * @param {?=} config\n     * @return {?}\n     */\n    IMediaElement.prototype.msInsertAudioEffect = function (activatableClassId, effectRequired, config) { };\n    /**\n     * @param {?} mediaKeys\n     * @return {?}\n     */\n    IMediaElement.prototype.msSetMediaKeys = function (mediaKeys) { };\n    /**\n     * Specifies the media protection manager for a given media pipeline.\n     * @param {?=} mediaProtectionManager\n     * @return {?}\n     */\n    IMediaElement.prototype.msSetMediaProtectionManager = function (mediaProtectionManager) { };\n    /**\n     * Pauses the current playback and sets paused to TRUE. This can be used to test whether the media is\n     * playing or paused. You can also use the pause or play events to tell whether the media is playing or not.\n     * @return {?}\n     */\n    IMediaElement.prototype.pause = function () { };\n    /**\n     * Loads and starts playback of a media resource.\n     * @return {?}\n     */\n    IMediaElement.prototype.play = function () { };\n    /**\n     * @param {?} mediaKeys\n     * @return {?}\n     */\n    IMediaElement.prototype.setMediaKeys = function (mediaKeys) { };\n    /**\n     * @param {?} type\n     * @param {?} listener\n     * @param {?=} useCapture\n     * @return {?}\n     */\n    IMediaElement.prototype.addEventListener = function (type, listener, useCapture) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/interfaces/idrm-license-server.interface.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction IDRMLicenseServer() { }\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/interfaces/ihls-config.interface.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction IHLSConfig() { }\nif (false) {\n    /** @type {?} */\n    IHLSConfig.prototype.abrController;\n    /** @type {?} */\n    IHLSConfig.prototype.fLoader;\n    /** @type {?} */\n    IHLSConfig.prototype.fetchSetup;\n    /** @type {?} */\n    IHLSConfig.prototype.loader;\n    /** @type {?} */\n    IHLSConfig.prototype.pLoader;\n    /** @type {?} */\n    IHLSConfig.prototype.timelineController;\n    /** @type {?} */\n    IHLSConfig.prototype.xhrSetup;\n    /** @type {?} */\n    IHLSConfig.prototype.startLevel;\n    /** @type {?} */\n    IHLSConfig.prototype.defaultAudioCodec;\n    /** @type {?} */\n    IHLSConfig.prototype.autoStartLoad;\n    /** @type {?} */\n    IHLSConfig.prototype.startPosition;\n    /** @type {?} */\n    IHLSConfig.prototype.capLevelToPlayerSize;\n    /** @type {?} */\n    IHLSConfig.prototype.debug;\n    /** @type {?} */\n    IHLSConfig.prototype.initialLiveManifestSize;\n    /** @type {?} */\n    IHLSConfig.prototype.maxBufferLength;\n    /** @type {?} */\n    IHLSConfig.prototype.maxMaxBufferLength;\n    /** @type {?} */\n    IHLSConfig.prototype.maxBufferSize;\n    /** @type {?} */\n    IHLSConfig.prototype.maxBufferHole;\n    /** @type {?} */\n    IHLSConfig.prototype.maxSeekHole;\n    /** @type {?} */\n    IHLSConfig.prototype.seekHoleNudgeDuration;\n    /** @type {?} */\n    IHLSConfig.prototype.maxFragLookUpTolerance;\n    /** @type {?} */\n    IHLSConfig.prototype.liveSyncDurationCount;\n    /** @type {?} */\n    IHLSConfig.prototype.liveMaxLatencyDurationCount;\n    /** @type {?} */\n    IHLSConfig.prototype.enableWorker;\n    /** @type {?} */\n    IHLSConfig.prototype.enableSoftwareAES;\n    /** @type {?} */\n    IHLSConfig.prototype.manifestLoadingTimeOut;\n    /** @type {?} */\n    IHLSConfig.prototype.manifestLoadingMaxRetry;\n    /** @type {?} */\n    IHLSConfig.prototype.manifestLoadingRetryDelay;\n    /** @type {?} */\n    IHLSConfig.prototype.manifestLoadingMaxRetryTimeout;\n    /** @type {?} */\n    IHLSConfig.prototype.levelLoadingTimeOut;\n    /** @type {?} */\n    IHLSConfig.prototype.levelLoadingMaxRetry;\n    /** @type {?} */\n    IHLSConfig.prototype.levelLoadingRetryDelay;\n    /** @type {?} */\n    IHLSConfig.prototype.levelLoadingMaxRetryTimeout;\n    /** @type {?} */\n    IHLSConfig.prototype.fragLoadingTimeOut;\n    /** @type {?} */\n    IHLSConfig.prototype.fragLoadingMaxRetry;\n    /** @type {?} */\n    IHLSConfig.prototype.fragLoadingRetryDelay;\n    /** @type {?} */\n    IHLSConfig.prototype.fragLoadingMaxRetryTimeout;\n    /** @type {?} */\n    IHLSConfig.prototype.startFragPrefech;\n    /** @type {?} */\n    IHLSConfig.prototype.appendErrorMaxRetry;\n    /** @type {?} */\n    IHLSConfig.prototype.enableCEA708Captions;\n    /** @type {?} */\n    IHLSConfig.prototype.stretchShortVideoTrack;\n    /** @type {?} */\n    IHLSConfig.prototype.forceKeyFrameOnDiscontinuity;\n    /** @type {?} */\n    IHLSConfig.prototype.abrEwmaFastLive;\n    /** @type {?} */\n    IHLSConfig.prototype.abrEwmaSlowLive;\n    /** @type {?} */\n    IHLSConfig.prototype.abrEwmaFastVoD;\n    /** @type {?} */\n    IHLSConfig.prototype.abrEwmaSlowVoD;\n    /** @type {?} */\n    IHLSConfig.prototype.abrEwmaDefaultEstimate;\n    /** @type {?} */\n    IHLSConfig.prototype.abrBandWidthFactor;\n    /** @type {?} */\n    IHLSConfig.prototype.abrBandWidthUpFactor;\n    /** @type {?} */\n    IHLSConfig.prototype.minAutoBitrate;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/interfaces/vg-media-api.interface.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction IPlayable() { }\nif (false) {\n    /** @type {?} */\n    IPlayable.prototype.id;\n    /** @type {?} */\n    IPlayable.prototype.elem;\n    /** @type {?} */\n    IPlayable.prototype.time;\n    /** @type {?} */\n    IPlayable.prototype.buffer;\n    /** @type {?|undefined} */\n    IPlayable.prototype.track;\n    /** @type {?} */\n    IPlayable.prototype.canPlay;\n    /** @type {?} */\n    IPlayable.prototype.canPlayThrough;\n    /** @type {?} */\n    IPlayable.prototype.isMetadataLoaded;\n    /** @type {?} */\n    IPlayable.prototype.isWaiting;\n    /** @type {?} */\n    IPlayable.prototype.isCompleted;\n    /** @type {?} */\n    IPlayable.prototype.isLive;\n    /** @type {?} */\n    IPlayable.prototype.textTracks;\n    /** @type {?} */\n    IPlayable.prototype.state;\n    /** @type {?} */\n    IPlayable.prototype.subscriptions;\n    /** @type {?} */\n    IPlayable.prototype.duration;\n    /** @type {?} */\n    IPlayable.prototype.currentTime;\n    /** @type {?} */\n    IPlayable.prototype.play;\n    /** @type {?} */\n    IPlayable.prototype.pause;\n    /** @type {?|undefined} */\n    IPlayable.prototype.addTextTrack;\n    /** @type {?|undefined} */\n    IPlayable.prototype.dispatchEvent;\n}\n/**\n * @record\n */\nfunction IMediaSubscriptions() { }\nif (false) {\n    /** @type {?} */\n    IMediaSubscriptions.prototype.abort;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.bufferDetected;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.canPlay;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.canPlayThrough;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.durationChange;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.emptied;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.encrypted;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.ended;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.error;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.loadedData;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.loadedMetadata;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.loadStart;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.pause;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.play;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.playing;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.progress;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.rateChange;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.seeked;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.seeking;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.stalled;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.suspend;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.timeUpdate;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.volumeChange;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.waiting;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.startAds;\n    /** @type {?} */\n    IMediaSubscriptions.prototype.endAds;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/interfaces/deprecated-tracks-types.interface.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction AudioTrack() { }\nif (false) {\n    /** @type {?} */\n    AudioTrack.prototype.enabled;\n    /** @type {?} */\n    AudioTrack.prototype.id;\n    /** @type {?} */\n    AudioTrack.prototype.kind;\n    /** @type {?} */\n    AudioTrack.prototype.label;\n    /** @type {?} */\n    AudioTrack.prototype.language;\n    /** @type {?} */\n    AudioTrack.prototype.sourceBuffer;\n}\n/**\n * @record\n */\nfunction AudioTrackListEventMap() { }\nif (false) {\n    /** @type {?} */\n    AudioTrackListEventMap.prototype.addtrack;\n    /** @type {?} */\n    AudioTrackListEventMap.prototype.change;\n    /** @type {?} */\n    AudioTrackListEventMap.prototype.removetrack;\n}\n/**\n * Used to represent a list of the audio tracks contained within a given HTML media element, with each track represented by a separate AudioTrack object in the list.\n * @record\n */\nfunction AudioTrackList() { }\nif (false) {\n    /** @type {?} */\n    AudioTrackList.prototype.length;\n    /** @type {?} */\n    AudioTrackList.prototype.onaddtrack;\n    /** @type {?} */\n    AudioTrackList.prototype.onchange;\n    /** @type {?} */\n    AudioTrackList.prototype.onremovetrack;\n    /* Skipping unhandled member: [index: number]: AudioTrack;*/\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    AudioTrackList.prototype.getTrackById = function (id) { };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    AudioTrackList.prototype.item = function (index) { };\n    /**\n     * @template K\n     * @param {?} type\n     * @param {?} listener\n     * @param {?=} options\n     * @return {?}\n     */\n    AudioTrackList.prototype.addEventListener = function (type, listener, options) { };\n    /**\n     * @param {?} type\n     * @param {?} listener\n     * @param {?=} options\n     * @return {?}\n     */\n    AudioTrackList.prototype.addEventListener = function (type, listener, options) { };\n    /**\n     * @template K\n     * @param {?} type\n     * @param {?} listener\n     * @param {?=} options\n     * @return {?}\n     */\n    AudioTrackList.prototype.removeEventListener = function (type, listener, options) { };\n    /**\n     * @param {?} type\n     * @param {?} listener\n     * @param {?=} options\n     * @return {?}\n     */\n    AudioTrackList.prototype.removeEventListener = function (type, listener, options) { };\n}\n/**\n * A single video track from a <video> element.\n * @record\n */\nfunction VideoTrack() { }\nif (false) {\n    /** @type {?} */\n    VideoTrack.prototype.id;\n    /** @type {?} */\n    VideoTrack.prototype.kind;\n    /** @type {?} */\n    VideoTrack.prototype.label;\n    /** @type {?} */\n    VideoTrack.prototype.language;\n    /** @type {?} */\n    VideoTrack.prototype.selected;\n    /** @type {?} */\n    VideoTrack.prototype.sourceBuffer;\n}\n/**\n * @record\n */\nfunction VideoTrackListEventMap() { }\nif (false) {\n    /** @type {?} */\n    VideoTrackListEventMap.prototype.addtrack;\n    /** @type {?} */\n    VideoTrackListEventMap.prototype.change;\n    /** @type {?} */\n    VideoTrackListEventMap.prototype.removetrack;\n}\n/**\n * Used to represent a list of the video tracks contained within a <video> element, with each track represented by a separate VideoTrack object in the list.\n * @record\n */\nfunction VideoTrackList() { }\nif (false) {\n    /** @type {?} */\n    VideoTrackList.prototype.length;\n    /** @type {?} */\n    VideoTrackList.prototype.onaddtrack;\n    /** @type {?} */\n    VideoTrackList.prototype.onchange;\n    /** @type {?} */\n    VideoTrackList.prototype.onremovetrack;\n    /** @type {?} */\n    VideoTrackList.prototype.selectedIndex;\n    /* Skipping unhandled member: [index: number]: VideoTrack;*/\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    VideoTrackList.prototype.getTrackById = function (id) { };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    VideoTrackList.prototype.item = function (index) { };\n    /**\n     * @template K\n     * @param {?} type\n     * @param {?} listener\n     * @param {?=} options\n     * @return {?}\n     */\n    VideoTrackList.prototype.addEventListener = function (type, listener, options) { };\n    /**\n     * @param {?} type\n     * @param {?} listener\n     * @param {?=} options\n     * @return {?}\n     */\n    VideoTrackList.prototype.addEventListener = function (type, listener, options) { };\n    /**\n     * @template K\n     * @param {?} type\n     * @param {?} listener\n     * @param {?=} options\n     * @return {?}\n     */\n    VideoTrackList.prototype.removeEventListener = function (type, listener, options) { };\n    /**\n     * @param {?} type\n     * @param {?} listener\n     * @param {?=} options\n     * @return {?}\n     */\n    VideoTrackList.prototype.removeEventListener = function (type, listener, options) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/directives/vg-media/vg-media-element.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgMediaElement {\n    /**\n     * @return {?}\n     */\n    get audioTracks() {\n        return null;\n    }\n    // @ts-ignore\n    /**\n     * @param {?} kind\n     * @param {?=} label\n     * @param {?=} language\n     * @return {?}\n     */\n    addTextTrack(kind, label, language) {\n        return null;\n    }\n    // @ts-ignore\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    canPlayType(type) {\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    load() { }\n    /**\n     * @return {?}\n     */\n    msClearEffects() { }\n    /**\n     * @return {?}\n     */\n    msGetAsCastingSource() {\n        return null;\n    }\n    // @ts-ignore\n    /**\n     * @param {?} _activatableClassId\n     * @param {?} _effectRequired\n     * @param {?=} _config\n     * @return {?}\n     */\n    msInsertAudioEffect(_activatableClassId, _effectRequired, _config) { }\n    // @ts-ignore\n    /**\n     * @param {?} mediaKeys\n     * @return {?}\n     */\n    msSetMediaKeys(mediaKeys) { }\n    // @ts-ignore\n    /**\n     * @param {?=} mediaProtectionManager\n     * @return {?}\n     */\n    msSetMediaProtectionManager(mediaProtectionManager) { }\n    /**\n     * @return {?}\n     */\n    pause() { }\n    /**\n     * @return {?}\n     */\n    play() {\n        return null;\n    }\n    // @ts-ignore\n    /**\n     * @param {?} mediaKeys\n     * @return {?}\n     */\n    setMediaKeys(mediaKeys) {\n        return null;\n    }\n    // @ts-ignore\n    /**\n     * @param {?} _type\n     * @param {?} _listener\n     * @param {?=} _useCapture\n     * @return {?}\n     */\n    addEventListener(_type, _listener, _useCapture) { }\n}\nif (false) {\n    /** @type {?} */\n    VgMediaElement.prototype.id;\n    /** @type {?} */\n    VgMediaElement.prototype.elem;\n    /** @type {?} */\n    VgMediaElement.prototype.autoplay;\n    /** @type {?} */\n    VgMediaElement.prototype.buffered;\n    /** @type {?} */\n    VgMediaElement.prototype.controls;\n    /** @type {?} */\n    VgMediaElement.prototype.crossOrigin;\n    /** @type {?} */\n    VgMediaElement.prototype.currentSrc;\n    /** @type {?} */\n    VgMediaElement.prototype.currentTime;\n    /** @type {?} */\n    VgMediaElement.prototype.defaultMuted;\n    /** @type {?} */\n    VgMediaElement.prototype.defaultPlaybackRate;\n    /** @type {?} */\n    VgMediaElement.prototype.duration;\n    /** @type {?} */\n    VgMediaElement.prototype.ended;\n    /** @type {?} */\n    VgMediaElement.prototype.error;\n    /** @type {?} */\n    VgMediaElement.prototype.loop;\n    /** @type {?} */\n    VgMediaElement.prototype.mediaKeys;\n    /** @type {?} */\n    VgMediaElement.prototype.msAudioCategory;\n    /** @type {?} */\n    VgMediaElement.prototype.msAudioDeviceType;\n    /** @type {?} */\n    VgMediaElement.prototype.msGraphicsTrustStatus;\n    /** @type {?} */\n    VgMediaElement.prototype.msKeys;\n    /** @type {?} */\n    VgMediaElement.prototype.msPlayToDisabled;\n    /** @type {?} */\n    VgMediaElement.prototype.msPlayToPreferredSourceUri;\n    /** @type {?} */\n    VgMediaElement.prototype.msPlayToPrimary;\n    /** @type {?} */\n    VgMediaElement.prototype.msPlayToSource;\n    /** @type {?} */\n    VgMediaElement.prototype.msRealTime;\n    /** @type {?} */\n    VgMediaElement.prototype.muted;\n    /** @type {?} */\n    VgMediaElement.prototype.networkState;\n    /** @type {?} */\n    VgMediaElement.prototype.onencrypted;\n    /** @type {?} */\n    VgMediaElement.prototype.onmsneedkey;\n    /** @type {?} */\n    VgMediaElement.prototype.paused;\n    /** @type {?} */\n    VgMediaElement.prototype.playbackRate;\n    /** @type {?} */\n    VgMediaElement.prototype.played;\n    /** @type {?} */\n    VgMediaElement.prototype.preload;\n    /** @type {?} */\n    VgMediaElement.prototype.readyState;\n    /** @type {?} */\n    VgMediaElement.prototype.seekable;\n    /** @type {?} */\n    VgMediaElement.prototype.seeking;\n    /** @type {?} */\n    VgMediaElement.prototype.src;\n    /** @type {?} */\n    VgMediaElement.prototype.srcObject;\n    /** @type {?} */\n    VgMediaElement.prototype.textTracks;\n    /** @type {?} */\n    VgMediaElement.prototype.videoTracks;\n    /** @type {?} */\n    VgMediaElement.prototype.volume;\n    /** @type {?} */\n    VgMediaElement.prototype.HAVE_CURRENT_DATA;\n    /** @type {?} */\n    VgMediaElement.prototype.HAVE_ENOUGH_DATA;\n    /** @type {?} */\n    VgMediaElement.prototype.HAVE_FUTURE_DATA;\n    /** @type {?} */\n    VgMediaElement.prototype.HAVE_METADATA;\n    /** @type {?} */\n    VgMediaElement.prototype.HAVE_NOTHING;\n    /** @type {?} */\n    VgMediaElement.prototype.NETWORK_EMPTY;\n    /** @type {?} */\n    VgMediaElement.prototype.NETWORK_IDLE;\n    /** @type {?} */\n    VgMediaElement.prototype.NETWORK_LOADING;\n    /** @type {?} */\n    VgMediaElement.prototype.NETWORK_NO_SOURCE;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: videogular-ngx-videogular-core.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { VgApiService, VgControlsHiddenService, VgCoreModule, VgCuePointsDirective, VgEvents, VgFullscreenApiService, VgMediaDirective, VgMediaElement, VgPlayerComponent, VgStates, VgUtilsService };\n\n//# sourceMappingURL=videogular-ngx-videogular-core.js.map","import { Component, ViewEncapsulation, ElementRef, Input, HostBinding, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VgApiService, VgCoreModule } from '@videogular/ngx-videogular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/vg-buffering/vg-buffering.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@videogular/ngx-videogular/core';\nclass VgBufferingComponent {\n    /**\n     * @param {?} ref\n     * @param {?} API\n     */\n    constructor(ref, API) {\n        this.API = API;\n        this.checkInterval = 50;\n        this.currentPlayPos = 0;\n        this.lastPlayPos = 0;\n        this.subscriptions = [];\n        this.isBuffering = false;\n        this.elem = ref.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\n             * @return {?}\n             */\n            () => this.onPlayerReady())));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n        this.subscriptions.push(this.target.subscriptions.bufferDetected.subscribe((/**\n         * @param {?} isBuffering\n         * @return {?}\n         */\n        (isBuffering) => this.onUpdateBuffer(isBuffering))));\n    }\n    /**\n     * @param {?} isBuffering\n     * @return {?}\n     */\n    onUpdateBuffer(isBuffering) {\n        this.isBuffering = isBuffering;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscriptions.forEach((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => s.unsubscribe()));\n    }\n}\nVgBufferingComponent.ɵfac = function VgBufferingComponent_Factory(t) { return new (t || VgBufferingComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\nVgBufferingComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgBufferingComponent, selectors: [[\"vg-buffering\"]], hostVars: 2, hostBindings: function VgBufferingComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"is-buffering\", ctx.isBuffering);\n    } }, inputs: { vgFor: \"vgFor\" }, decls: 3, vars: 0, consts: [[1, \"vg-buffering\"], [1, \"bufferingContainer\"], [1, \"loadingSpinner\"]], template: function VgBufferingComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\"\\n      vg-buffering {\\n        display: none;\\n        z-index: 201;\\n      }\\n      vg-buffering.is-buffering {\\n        display: block;\\n      }\\n\\n      .vg-buffering {\\n        position: absolute;\\n        display: block;\\n        width: 100%;\\n        height: 100%;\\n      }\\n      .vg-buffering .bufferingContainer {\\n        width: 100%;\\n        position: absolute;\\n        cursor: pointer;\\n        top: 50%;\\n        margin-top: -50px;\\n        zoom: 1;\\n        filter: alpha(opacity=60);\\n        opacity: 0.6;\\n      }\\n      /* Loading Spinner\\n        * http://www.alessioatzeni.com/blog/css3-loading-animation-loop/\\n        */\\n      .vg-buffering .loadingSpinner {\\n        background-color: rgba(0, 0, 0, 0);\\n        border: 5px solid rgba(255, 255, 255, 1);\\n        opacity: 0.9;\\n        border-top: 5px solid rgba(0, 0, 0, 0);\\n        border-left: 5px solid rgba(0, 0, 0, 0);\\n        border-radius: 50px;\\n        box-shadow: 0 0 35px #ffffff;\\n        width: 50px;\\n        height: 50px;\\n        margin: 0 auto;\\n        -moz-animation: spin 0.5s infinite linear;\\n        -webkit-animation: spin 0.5s infinite linear;\\n      }\\n      .vg-buffering .loadingSpinner .stop {\\n        -webkit-animation-play-state: paused;\\n        -moz-animation-play-state: paused;\\n      }\\n      @-moz-keyframes spin {\\n        0% {\\n          -moz-transform: rotate(0deg);\\n        }\\n        100% {\\n          -moz-transform: rotate(360deg);\\n        }\\n      }\\n      @-moz-keyframes spinoff {\\n        0% {\\n          -moz-transform: rotate(0deg);\\n        }\\n        100% {\\n          -moz-transform: rotate(-360deg);\\n        }\\n      }\\n      @-webkit-keyframes spin {\\n        0% {\\n          -webkit-transform: rotate(0deg);\\n        }\\n        100% {\\n          -webkit-transform: rotate(360deg);\\n        }\\n      }\\n      @-webkit-keyframes spinoff {\\n        0% {\\n          -webkit-transform: rotate(0deg);\\n        }\\n        100% {\\n          -webkit-transform: rotate(-360deg);\\n        }\\n      }\\n    \"], encapsulation: 2 });\n/** @nocollapse */\nVgBufferingComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: VgApiService }\n];\nVgBufferingComponent.propDecorators = {\n    vgFor: [{ type: Input }],\n    isBuffering: [{ type: HostBinding, args: ['class.is-buffering',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgBufferingComponent, [{\n        type: Component,\n        args: [{\n                selector: 'vg-buffering',\n                encapsulation: ViewEncapsulation.None,\n                template: `<div class=\"vg-buffering\">\n    <div class=\"bufferingContainer\">\n      <div class=\"loadingSpinner\"></div>\n    </div>\n  </div>`,\n                styles: [`\n      vg-buffering {\n        display: none;\n        z-index: 201;\n      }\n      vg-buffering.is-buffering {\n        display: block;\n      }\n\n      .vg-buffering {\n        position: absolute;\n        display: block;\n        width: 100%;\n        height: 100%;\n      }\n      .vg-buffering .bufferingContainer {\n        width: 100%;\n        position: absolute;\n        cursor: pointer;\n        top: 50%;\n        margin-top: -50px;\n        zoom: 1;\n        filter: alpha(opacity=60);\n        opacity: 0.6;\n      }\n      /* Loading Spinner\n        * http://www.alessioatzeni.com/blog/css3-loading-animation-loop/\n        */\n      .vg-buffering .loadingSpinner {\n        background-color: rgba(0, 0, 0, 0);\n        border: 5px solid rgba(255, 255, 255, 1);\n        opacity: 0.9;\n        border-top: 5px solid rgba(0, 0, 0, 0);\n        border-left: 5px solid rgba(0, 0, 0, 0);\n        border-radius: 50px;\n        box-shadow: 0 0 35px #ffffff;\n        width: 50px;\n        height: 50px;\n        margin: 0 auto;\n        -moz-animation: spin 0.5s infinite linear;\n        -webkit-animation: spin 0.5s infinite linear;\n      }\n      .vg-buffering .loadingSpinner .stop {\n        -webkit-animation-play-state: paused;\n        -moz-animation-play-state: paused;\n      }\n      @-moz-keyframes spin {\n        0% {\n          -moz-transform: rotate(0deg);\n        }\n        100% {\n          -moz-transform: rotate(360deg);\n        }\n      }\n      @-moz-keyframes spinoff {\n        0% {\n          -moz-transform: rotate(0deg);\n        }\n        100% {\n          -moz-transform: rotate(-360deg);\n        }\n      }\n      @-webkit-keyframes spin {\n        0% {\n          -webkit-transform: rotate(0deg);\n        }\n        100% {\n          -webkit-transform: rotate(360deg);\n        }\n      }\n      @-webkit-keyframes spinoff {\n        0% {\n          -webkit-transform: rotate(0deg);\n        }\n        100% {\n          -webkit-transform: rotate(-360deg);\n        }\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { isBuffering: [{\n            type: HostBinding,\n            args: ['class.is-buffering']\n        }], vgFor: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    VgBufferingComponent.prototype.vgFor;\n    /** @type {?} */\n    VgBufferingComponent.prototype.elem;\n    /** @type {?} */\n    VgBufferingComponent.prototype.target;\n    /** @type {?} */\n    VgBufferingComponent.prototype.checkInterval;\n    /** @type {?} */\n    VgBufferingComponent.prototype.currentPlayPos;\n    /** @type {?} */\n    VgBufferingComponent.prototype.lastPlayPos;\n    /** @type {?} */\n    VgBufferingComponent.prototype.subscriptions;\n    /** @type {?} */\n    VgBufferingComponent.prototype.isBuffering;\n    /** @type {?} */\n    VgBufferingComponent.prototype.API;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/buffering.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgBufferingModule {\n}\nVgBufferingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: VgBufferingModule });\nVgBufferingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function VgBufferingModule_Factory(t) { return new (t || VgBufferingModule)(); }, imports: [[CommonModule, VgCoreModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(VgBufferingModule, { declarations: function () { return [VgBufferingComponent]; }, imports: function () { return [CommonModule, VgCoreModule]; }, exports: function () { return [VgBufferingComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgBufferingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, VgCoreModule],\n                declarations: [VgBufferingComponent],\n                exports: [VgBufferingComponent]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: videogular-ngx-videogular-buffering.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { VgBufferingComponent, VgBufferingModule };\n\n//# sourceMappingURL=videogular-ngx-videogular-buffering.js.map","import { Component, ViewEncapsulation, ElementRef, Input, HostBinding, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VgStates, VgApiService, VgFullscreenApiService, VgControlsHiddenService, VgCoreModule } from '@videogular/ngx-videogular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/vg-overlay-play.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@videogular/ngx-videogular/core';\nclass VgOverlayPlayComponent {\n    /**\n     * @param {?} ref\n     * @param {?} API\n     * @param {?} fsAPI\n     * @param {?} controlsHidden\n     */\n    constructor(ref, API, fsAPI, controlsHidden) {\n        this.API = API;\n        this.fsAPI = fsAPI;\n        this.controlsHidden = controlsHidden;\n        this.isNativeFullscreen = false;\n        this.areControlsHidden = false;\n        this.subscriptions = [];\n        this.isBuffering = false;\n        this.elem = ref.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\n             * @return {?}\n             */\n            () => this.onPlayerReady())));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n        this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n        this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\n        this.subscriptions.push(this.target.subscriptions.bufferDetected.subscribe((/**\n         * @param {?} isBuffering\n         * @return {?}\n         */\n        (isBuffering) => this.onUpdateBuffer(isBuffering))));\n    }\n    /**\n     * @param {?} isBuffering\n     * @return {?}\n     */\n    onUpdateBuffer(isBuffering) {\n        this.isBuffering = isBuffering;\n    }\n    /**\n     * @param {?} fsState\n     * @return {?}\n     */\n    onChangeFullscreen(fsState) {\n        if (this.fsAPI.nativeFullscreen) {\n            this.isNativeFullscreen = fsState;\n        }\n    }\n    /**\n     * @param {?} hidden\n     * @return {?}\n     */\n    onHideControls(hidden) {\n        this.areControlsHidden = hidden;\n    }\n    /**\n     * @return {?}\n     */\n    onClick() {\n        /** @type {?} */\n        const state = this.getState();\n        switch (state) {\n            case VgStates.VG_PLAYING:\n                this.target.pause();\n                break;\n            case VgStates.VG_PAUSED:\n            case VgStates.VG_ENDED:\n                this.target.play();\n                break;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getState() {\n        /** @type {?} */\n        let state = VgStates.VG_PAUSED;\n        if (this.target) {\n            if (this.target.state instanceof Array) {\n                for (let i = 0, l = this.target.state.length; i < l; i++) {\n                    if (this.target.state[i] === VgStates.VG_PLAYING) {\n                        state = VgStates.VG_PLAYING;\n                        break;\n                    }\n                }\n            }\n            else {\n                state = this.target.state;\n            }\n        }\n        return state;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscriptions.forEach((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => s.unsubscribe()));\n    }\n}\nVgOverlayPlayComponent.ɵfac = function VgOverlayPlayComponent_Factory(t) { return new (t || VgOverlayPlayComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgFullscreenApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgControlsHiddenService)); };\nVgOverlayPlayComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgOverlayPlayComponent, selectors: [[\"vg-overlay-play\"]], hostVars: 2, hostBindings: function VgOverlayPlayComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function VgOverlayPlayComponent_click_HostBindingHandler() { return ctx.onClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"is-buffering\", ctx.isBuffering);\n    } }, inputs: { vgFor: \"vgFor\" }, decls: 2, vars: 6, consts: [[1, \"vg-overlay-play\"], [1, \"overlay-play-container\"]], template: function VgOverlayPlayComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"native-fullscreen\", ctx.isNativeFullscreen)(\"controls-hidden\", ctx.areControlsHidden);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"vg-icon-play_arrow\", ctx.getState() !== \"playing\");\n    } }, styles: [\"\\n      vg-overlay-play {\\n        z-index: 200;\\n      }\\n      vg-overlay-play.is-buffering {\\n        display: none;\\n      }\\n      vg-overlay-play .vg-overlay-play {\\n        transition: all 0.5s;\\n        cursor: pointer;\\n        position: absolute;\\n        display: block;\\n        color: white;\\n        width: 100%;\\n        height: 100%;\\n        font-size: 80px;\\n        filter: alpha(opacity=60);\\n        opacity: 0.6;\\n      }\\n      vg-overlay-play .vg-overlay-play.native-fullscreen.controls-hidden {\\n        cursor: none;\\n      }\\n      vg-overlay-play\\n        .vg-overlay-play\\n        .overlay-play-container.vg-icon-play_arrow {\\n        pointer-events: none;\\n        width: 100%;\\n        height: 100%;\\n        position: absolute;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        font-size: 80px;\\n      }\\n      vg-overlay-play .vg-overlay-play:hover {\\n        filter: alpha(opacity=100);\\n        opacity: 1;\\n      }\\n      vg-overlay-play\\n        .vg-overlay-play:hover\\n        .overlay-play-container.vg-icon-play_arrow:before {\\n        transform: scale(1.2);\\n      }\\n    \"], encapsulation: 2 });\n/** @nocollapse */\nVgOverlayPlayComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: VgApiService },\n    { type: VgFullscreenApiService },\n    { type: VgControlsHiddenService }\n];\nVgOverlayPlayComponent.propDecorators = {\n    vgFor: [{ type: Input }],\n    isBuffering: [{ type: HostBinding, args: ['class.is-buffering',] }],\n    onClick: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgOverlayPlayComponent, [{\n        type: Component,\n        args: [{\n                selector: 'vg-overlay-play',\n                encapsulation: ViewEncapsulation.None,\n                template: `<div\n    class=\"vg-overlay-play\"\n    [class.native-fullscreen]=\"isNativeFullscreen\"\n    [class.controls-hidden]=\"areControlsHidden\"\n  >\n    <div\n      class=\"overlay-play-container\"\n      [class.vg-icon-play_arrow]=\"getState() !== 'playing'\"\n    ></div>\n  </div>`,\n                styles: [`\n      vg-overlay-play {\n        z-index: 200;\n      }\n      vg-overlay-play.is-buffering {\n        display: none;\n      }\n      vg-overlay-play .vg-overlay-play {\n        transition: all 0.5s;\n        cursor: pointer;\n        position: absolute;\n        display: block;\n        color: white;\n        width: 100%;\n        height: 100%;\n        font-size: 80px;\n        filter: alpha(opacity=60);\n        opacity: 0.6;\n      }\n      vg-overlay-play .vg-overlay-play.native-fullscreen.controls-hidden {\n        cursor: none;\n      }\n      vg-overlay-play\n        .vg-overlay-play\n        .overlay-play-container.vg-icon-play_arrow {\n        pointer-events: none;\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-size: 80px;\n      }\n      vg-overlay-play .vg-overlay-play:hover {\n        filter: alpha(opacity=100);\n        opacity: 1;\n      }\n      vg-overlay-play\n        .vg-overlay-play:hover\n        .overlay-play-container.vg-icon-play_arrow:before {\n        transform: scale(1.2);\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }, { type: ɵngcc1.VgFullscreenApiService }, { type: ɵngcc1.VgControlsHiddenService }]; }, { isBuffering: [{\n            type: HostBinding,\n            args: ['class.is-buffering']\n        }], \n    /**\n     * @return {?}\n     */\n    onClick: [{\n            type: HostListener,\n            args: ['click']\n        }], vgFor: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    VgOverlayPlayComponent.prototype.vgFor;\n    /** @type {?} */\n    VgOverlayPlayComponent.prototype.elem;\n    /** @type {?} */\n    VgOverlayPlayComponent.prototype.target;\n    /** @type {?} */\n    VgOverlayPlayComponent.prototype.isNativeFullscreen;\n    /** @type {?} */\n    VgOverlayPlayComponent.prototype.areControlsHidden;\n    /** @type {?} */\n    VgOverlayPlayComponent.prototype.subscriptions;\n    /** @type {?} */\n    VgOverlayPlayComponent.prototype.isBuffering;\n    /** @type {?} */\n    VgOverlayPlayComponent.prototype.API;\n    /** @type {?} */\n    VgOverlayPlayComponent.prototype.fsAPI;\n    /**\n     * @type {?}\n     * @private\n     */\n    VgOverlayPlayComponent.prototype.controlsHidden;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/overlay-play.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgOverlayPlayModule {\n}\nVgOverlayPlayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: VgOverlayPlayModule });\nVgOverlayPlayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function VgOverlayPlayModule_Factory(t) { return new (t || VgOverlayPlayModule)(); }, imports: [[CommonModule, VgCoreModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(VgOverlayPlayModule, { declarations: function () { return [VgOverlayPlayComponent]; }, imports: function () { return [CommonModule, VgCoreModule]; }, exports: function () { return [VgOverlayPlayComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgOverlayPlayModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, VgCoreModule],\n                declarations: [VgOverlayPlayComponent],\n                exports: [VgOverlayPlayComponent]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: videogular-ngx-videogular-overlay-play.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { VgOverlayPlayComponent, VgOverlayPlayModule };\n\n//# sourceMappingURL=videogular-ngx-videogular-overlay-play.js.map","import { Component, ViewEncapsulation, ElementRef, HostBinding, Input, ViewChild, HostListener, Pipe, EventEmitter, Output, ChangeDetectorRef, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { fromEvent } from 'rxjs';\nimport { VgStates, VgApiService, VgControlsHiddenService, VgFullscreenApiService, VgCoreModule } from '@videogular/ngx-videogular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/vg-controls/vg-controls.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@videogular/ngx-videogular/core';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"*\"];\nconst _c1 = [\"volumeBar\"];\nconst _c2 = function (a0) { return { dragging: a0 }; };\nfunction VgTrackSelectorComponent_option_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const track_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", track_r1.id)(\"selected\", track_r1.selected === true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", track_r1.label, \" \");\n} }\nfunction VgTimeDisplayComponent_span_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1, \"LIVE\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction VgTimeDisplayComponent_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"vgUtc\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(2, 1, ctx_r1.getTime(), ctx_r1.vgFormat));\n} }\nfunction VgQualitySelectorComponent_option_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const bitrate_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", bitrate_r1.qualityIndex)(\"selected\", bitrate_r1.qualityIndex === (ctx_r0.bitrateSelected == null ? null : ctx_r0.bitrateSelected.qualityIndex));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", bitrate_r1.label, \" \");\n} }\nfunction VgScrubBarCuePointsComponent_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const cp_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵstyleProp(\"width\", cp_r1.$$style == null ? null : cp_r1.$$style.width)(\"left\", cp_r1.$$style == null ? null : cp_r1.$$style.left);\n} }\nfunction VgScrubBarCurrentTimeComponent_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} }\nclass VgControlsComponent {\n    // @ts-ignore\n    /**\n     * @param {?} API\n     * @param {?} ref\n     * @param {?} hidden\n     */\n    constructor(API, ref, hidden) {\n        this.API = API;\n        this.hidden = hidden;\n        this.isAdsPlaying = 'initial';\n        this.hideControls = false;\n        this.vgAutohide = false;\n        this.vgAutohideTime = 3;\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.mouseMove$ = fromEvent(this.API.videogularElement, 'mousemove');\n        this.subscriptions.push(this.mouseMove$.subscribe(this.show.bind(this)));\n        this.touchStart$ = fromEvent(this.API.videogularElement, 'touchstart');\n        this.subscriptions.push(this.touchStart$.subscribe(this.show.bind(this)));\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\n             * @return {?}\n             */\n            () => this.onPlayerReady())));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n        this.subscriptions.push(this.target.subscriptions.play.subscribe(this.onPlay.bind(this)));\n        this.subscriptions.push(this.target.subscriptions.pause.subscribe(this.onPause.bind(this)));\n        this.subscriptions.push(this.target.subscriptions.startAds.subscribe(this.onStartAds.bind(this)));\n        this.subscriptions.push(this.target.subscriptions.endAds.subscribe(this.onEndAds.bind(this)));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this.vgAutohide) {\n            this.hide();\n        }\n        else {\n            this.show();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onPlay() {\n        if (this.vgAutohide) {\n            this.hide();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onPause() {\n        clearTimeout(this.timer);\n        this.hideControls = false;\n        this.hidden.state(false);\n    }\n    /**\n     * @return {?}\n     */\n    onStartAds() {\n        this.isAdsPlaying = 'none';\n    }\n    /**\n     * @return {?}\n     */\n    onEndAds() {\n        this.isAdsPlaying = 'initial';\n    }\n    /**\n     * @return {?}\n     */\n    hide() {\n        if (this.vgAutohide) {\n            clearTimeout(this.timer);\n            this.hideAsync();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    show() {\n        clearTimeout(this.timer);\n        this.hideControls = false;\n        this.hidden.state(false);\n        if (this.vgAutohide) {\n            this.hideAsync();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    hideAsync() {\n        if (this.API.state === VgStates.VG_PLAYING) {\n            this.timer = setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this.hideControls = true;\n                this.hidden.state(true);\n            }), this.vgAutohideTime * 1000);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscriptions.forEach((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => s.unsubscribe()));\n    }\n}\nVgControlsComponent.ɵfac = function VgControlsComponent_Factory(t) { return new (t || VgControlsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgControlsHiddenService)); };\nVgControlsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgControlsComponent, selectors: [[\"vg-controls\"]], hostVars: 4, hostBindings: function VgControlsComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"pointer-events\", ctx.isAdsPlaying);\n        ɵngcc0.ɵɵclassProp(\"hide\", ctx.hideControls);\n    } }, inputs: { vgAutohide: \"vgAutohide\", vgAutohideTime: \"vgAutohideTime\", vgFor: \"vgFor\" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function VgControlsComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\"\\n      vg-controls {\\n        position: absolute;\\n        display: flex;\\n        width: 100%;\\n        height: 50px;\\n        z-index: 300;\\n        bottom: 0;\\n        background-color: rgba(0, 0, 0, 0.5);\\n        -webkit-transition: bottom 1s;\\n        -khtml-transition: bottom 1s;\\n        -moz-transition: bottom 1s;\\n        -ms-transition: bottom 1s;\\n        transition: bottom 1s;\\n      }\\n      vg-controls.hide {\\n        bottom: -50px;\\n      }\\n    \"], encapsulation: 2 });\n/** @nocollapse */\nVgControlsComponent.ctorParameters = () => [\n    { type: VgApiService },\n    { type: ElementRef },\n    { type: VgControlsHiddenService }\n];\nVgControlsComponent.propDecorators = {\n    isAdsPlaying: [{ type: HostBinding, args: ['style.pointer-events',] }],\n    hideControls: [{ type: HostBinding, args: ['class.hide',] }],\n    vgFor: [{ type: Input }],\n    vgAutohide: [{ type: Input }],\n    vgAutohideTime: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgControlsComponent, [{\n        type: Component,\n        args: [{\n                selector: 'vg-controls',\n                encapsulation: ViewEncapsulation.None,\n                template: `<ng-content></ng-content>`,\n                styles: [`\n      vg-controls {\n        position: absolute;\n        display: flex;\n        width: 100%;\n        height: 50px;\n        z-index: 300;\n        bottom: 0;\n        background-color: rgba(0, 0, 0, 0.5);\n        -webkit-transition: bottom 1s;\n        -khtml-transition: bottom 1s;\n        -moz-transition: bottom 1s;\n        -ms-transition: bottom 1s;\n        transition: bottom 1s;\n      }\n      vg-controls.hide {\n        bottom: -50px;\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc1.VgApiService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgControlsHiddenService }]; }, { isAdsPlaying: [{\n            type: HostBinding,\n            args: ['style.pointer-events']\n        }], hideControls: [{\n            type: HostBinding,\n            args: ['class.hide']\n        }], vgAutohide: [{\n            type: Input\n        }], vgAutohideTime: [{\n            type: Input\n        }], vgFor: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    VgControlsComponent.prototype.elem;\n    /** @type {?} */\n    VgControlsComponent.prototype.target;\n    /** @type {?} */\n    VgControlsComponent.prototype.isAdsPlaying;\n    /** @type {?} */\n    VgControlsComponent.prototype.hideControls;\n    /** @type {?} */\n    VgControlsComponent.prototype.vgFor;\n    /** @type {?} */\n    VgControlsComponent.prototype.vgAutohide;\n    /** @type {?} */\n    VgControlsComponent.prototype.vgAutohideTime;\n    /**\n     * @type {?}\n     * @private\n     */\n    VgControlsComponent.prototype.timer;\n    /** @type {?} */\n    VgControlsComponent.prototype.mouseMove$;\n    /** @type {?} */\n    VgControlsComponent.prototype.touchStart$;\n    /** @type {?} */\n    VgControlsComponent.prototype.subscriptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    VgControlsComponent.prototype.API;\n    /**\n     * @type {?}\n     * @private\n     */\n    VgControlsComponent.prototype.hidden;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/vg-volume/vg-volume.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgVolumeComponent {\n    /**\n     * @param {?} ref\n     * @param {?} API\n     */\n    constructor(ref, API) {\n        this.API = API;\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n        this.isDragging = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\n             * @return {?}\n             */\n            () => this.onPlayerReady())));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n        this.ariaValue = this.getVolume() * 100;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClick(event) {\n        this.setVolume(this.calculateVolume(event.clientX));\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onMouseDown(event) {\n        this.mouseDownPosX = event.clientX;\n        this.isDragging = true;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrag(event) {\n        if (this.isDragging) {\n            this.setVolume(this.calculateVolume(event.clientX));\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onStopDrag(event) {\n        if (this.isDragging) {\n            this.isDragging = false;\n            if (this.mouseDownPosX === event.clientX) {\n                this.setVolume(this.calculateVolume(event.clientX));\n            }\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    arrowAdjustVolume(event) {\n        if (event.keyCode === 38 || event.keyCode === 39) {\n            event.preventDefault();\n            this.setVolume(Math.max(0, Math.min(100, this.getVolume() * 100 + 10)));\n        }\n        else if (event.keyCode === 37 || event.keyCode === 40) {\n            event.preventDefault();\n            this.setVolume(Math.max(0, Math.min(100, this.getVolume() * 100 - 10)));\n        }\n    }\n    /**\n     * @param {?} mousePosX\n     * @return {?}\n     */\n    calculateVolume(mousePosX) {\n        /** @type {?} */\n        const recObj = this.volumeBarRef.nativeElement.getBoundingClientRect();\n        /** @type {?} */\n        const volumeBarOffsetLeft = recObj.left;\n        /** @type {?} */\n        const volumeBarWidth = recObj.width;\n        return ((mousePosX - volumeBarOffsetLeft) / volumeBarWidth) * 100;\n    }\n    /**\n     * @param {?} vol\n     * @return {?}\n     */\n    setVolume(vol) {\n        this.target.volume = Math.max(0, Math.min(1, vol / 100));\n        this.ariaValue = this.target.volume * 100;\n    }\n    /**\n     * @return {?}\n     */\n    getVolume() {\n        return this.target ? this.target.volume : 0;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscriptions.forEach((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => s.unsubscribe()));\n    }\n}\nVgVolumeComponent.ɵfac = function VgVolumeComponent_Factory(t) { return new (t || VgVolumeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\nVgVolumeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgVolumeComponent, selectors: [[\"vg-volume\"]], viewQuery: function VgVolumeComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.volumeBarRef = _t.first);\n    } }, hostBindings: function VgVolumeComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousemove\", function VgVolumeComponent_mousemove_HostBindingHandler($event) { return ctx.onDrag($event); }, false, ɵngcc0.ɵɵresolveDocument)(\"mouseup\", function VgVolumeComponent_mouseup_HostBindingHandler($event) { return ctx.onStopDrag($event); }, false, ɵngcc0.ɵɵresolveDocument)(\"keydown\", function VgVolumeComponent_keydown_HostBindingHandler($event) { return ctx.arrowAdjustVolume($event); });\n    } }, inputs: { vgFor: \"vgFor\" }, decls: 5, vars: 9, consts: [[\"tabindex\", \"0\", \"role\", \"slider\", \"aria-label\", \"volume level\", \"aria-level\", \"polite\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"aria-orientation\", \"horizontal\", 1, \"volumeBar\", 3, \"click\", \"mousedown\"], [\"volumeBar\", \"\"], [1, \"volumeBackground\", 3, \"ngClass\"], [1, \"volumeValue\"], [1, \"volumeKnob\"]], template: function VgVolumeComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function VgVolumeComponent_Template_div_click_0_listener($event) { return ctx.onClick($event); })(\"mousedown\", function VgVolumeComponent_Template_div_mousedown_0_listener($event) { return ctx.onMouseDown($event); });\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.ariaValue)(\"aria-valuetext\", ctx.ariaValue + \"%\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(7, _c2, ctx.isDragging));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.getVolume() * (100 - 15) + \"%\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵstyleProp(\"left\", ctx.getVolume() * (100 - 15) + \"%\");\n    } }, directives: [ɵngcc2.NgClass], styles: [\"\\n      vg-volume {\\n        -webkit-touch-callout: none;\\n        -webkit-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        user-select: none;\\n        display: flex;\\n        justify-content: center;\\n        height: 50px;\\n        width: 100px;\\n        cursor: pointer;\\n        color: white;\\n        line-height: 50px;\\n      }\\n      vg-volume .volumeBar {\\n        position: relative;\\n        display: flex;\\n        flex-grow: 1;\\n        align-items: center;\\n      }\\n      vg-volume .volumeBackground {\\n        display: flex;\\n        flex-grow: 1;\\n        height: 5px;\\n        pointer-events: none;\\n        background-color: #333;\\n      }\\n      vg-volume .volumeValue {\\n        display: flex;\\n        height: 5px;\\n        pointer-events: none;\\n        background-color: #fff;\\n        transition: all 0.2s ease-out;\\n      }\\n      vg-volume .volumeKnob {\\n        position: absolute;\\n        width: 15px;\\n        height: 15px;\\n        left: 0;\\n        top: 50%;\\n        transform: translateY(-50%);\\n        border-radius: 15px;\\n        pointer-events: none;\\n        background-color: #fff;\\n        transition: all 0.2s ease-out;\\n      }\\n      vg-volume .volumeBackground.dragging .volumeValue,\\n      vg-volume .volumeBackground.dragging .volumeKnob {\\n        transition: none;\\n      }\\n    \"], encapsulation: 2 });\n/** @nocollapse */\nVgVolumeComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: VgApiService }\n];\nVgVolumeComponent.propDecorators = {\n    vgFor: [{ type: Input }],\n    volumeBarRef: [{ type: ViewChild, args: ['volumeBar', { static: true },] }],\n    onDrag: [{ type: HostListener, args: ['document:mousemove', ['$event'],] }],\n    onStopDrag: [{ type: HostListener, args: ['document:mouseup', ['$event'],] }],\n    arrowAdjustVolume: [{ type: HostListener, args: ['keydown', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgVolumeComponent, [{\n        type: Component,\n        args: [{\n                selector: 'vg-volume',\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <div\n      #volumeBar\n      class=\"volumeBar\"\n      tabindex=\"0\"\n      role=\"slider\"\n      aria-label=\"volume level\"\n      aria-level=\"polite\"\n      [attr.aria-valuenow]=\"ariaValue\"\n      aria-valuemin=\"0\"\n      aria-valuemax=\"100\"\n      aria-orientation=\"horizontal\"\n      [attr.aria-valuetext]=\"ariaValue + '%'\"\n      (click)=\"onClick($event)\"\n      (mousedown)=\"onMouseDown($event)\"\n    >\n      <div class=\"volumeBackground\" [ngClass]=\"{ dragging: isDragging }\">\n        <div\n          class=\"volumeValue\"\n          [style.width]=\"getVolume() * (100 - 15) + '%'\"\n        ></div>\n        <div\n          class=\"volumeKnob\"\n          [style.left]=\"getVolume() * (100 - 15) + '%'\"\n        ></div>\n      </div>\n    </div>\n  `,\n                styles: [`\n      vg-volume {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        height: 50px;\n        width: 100px;\n        cursor: pointer;\n        color: white;\n        line-height: 50px;\n      }\n      vg-volume .volumeBar {\n        position: relative;\n        display: flex;\n        flex-grow: 1;\n        align-items: center;\n      }\n      vg-volume .volumeBackground {\n        display: flex;\n        flex-grow: 1;\n        height: 5px;\n        pointer-events: none;\n        background-color: #333;\n      }\n      vg-volume .volumeValue {\n        display: flex;\n        height: 5px;\n        pointer-events: none;\n        background-color: #fff;\n        transition: all 0.2s ease-out;\n      }\n      vg-volume .volumeKnob {\n        position: absolute;\n        width: 15px;\n        height: 15px;\n        left: 0;\n        top: 50%;\n        transform: translateY(-50%);\n        border-radius: 15px;\n        pointer-events: none;\n        background-color: #fff;\n        transition: all 0.2s ease-out;\n      }\n      vg-volume .volumeBackground.dragging .volumeValue,\n      vg-volume .volumeBackground.dragging .volumeKnob {\n        transition: none;\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrag: [{\n            type: HostListener,\n            args: ['document:mousemove', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onStopDrag: [{\n            type: HostListener,\n            args: ['document:mouseup', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    arrowAdjustVolume: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }], vgFor: [{\n            type: Input\n        }], volumeBarRef: [{\n            type: ViewChild,\n            args: ['volumeBar', { static: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    VgVolumeComponent.prototype.vgFor;\n    /** @type {?} */\n    VgVolumeComponent.prototype.volumeBarRef;\n    /** @type {?} */\n    VgVolumeComponent.prototype.elem;\n    /** @type {?} */\n    VgVolumeComponent.prototype.target;\n    /** @type {?} */\n    VgVolumeComponent.prototype.isDragging;\n    /** @type {?} */\n    VgVolumeComponent.prototype.mouseDownPosX;\n    /** @type {?} */\n    VgVolumeComponent.prototype.ariaValue;\n    /** @type {?} */\n    VgVolumeComponent.prototype.subscriptions;\n    /** @type {?} */\n    VgVolumeComponent.prototype.API;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/vg-track-selector/vg-track-selector.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction Option() { }\nif (false) {\n    /** @type {?} */\n    Option.prototype.id;\n    /** @type {?} */\n    Option.prototype.label;\n    /** @type {?} */\n    Option.prototype.selected;\n}\nclass VgTrackSelectorComponent {\n    /**\n     * @param {?} ref\n     * @param {?} API\n     */\n    constructor(ref, API) {\n        this.API = API;\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\n             * @return {?}\n             */\n            () => this.onPlayerReady())));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n        /** @type {?} */\n        const subs = Array.from(((/** @type {?} */ (this.API.getMasterMedia().elem))).children)\n            .filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.tagName === 'TRACK'))\n            .filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.kind === 'subtitles'))\n            .map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => ({\n            label: item.label,\n            selected: item.default === true,\n            id: item.srclang,\n        })));\n        this.tracks = [\n            ...subs,\n            {\n                id: null,\n                label: 'Off',\n                selected: subs.every((/**\n                 * @param {?} item\n                 * @return {?}\n                 */\n                (item) => item.selected === false)),\n            },\n        ];\n        /** @type {?} */\n        const track = this.tracks.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.selected === true))[0];\n        this.trackSelected = track.id;\n        this.ariaValue = track.label;\n    }\n    /**\n     * @param {?} trackId\n     * @return {?}\n     */\n    selectTrack(trackId) {\n        this.trackSelected = trackId === 'null' ? null : trackId;\n        this.ariaValue = 'No track selected';\n        Array.from(((/** @type {?} */ (this.API.getMasterMedia().elem))).textTracks).forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => {\n            if (item.language === trackId) {\n                this.ariaValue = item.label;\n                item.mode = 'showing';\n            }\n            else {\n                item.mode = 'hidden';\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscriptions.forEach((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => s.unsubscribe()));\n    }\n}\nVgTrackSelectorComponent.ɵfac = function VgTrackSelectorComponent_Factory(t) { return new (t || VgTrackSelectorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\nVgTrackSelectorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgTrackSelectorComponent, selectors: [[\"vg-track-selector\"]], inputs: { vgFor: \"vgFor\" }, decls: 5, vars: 5, consts: [[1, \"container\"], [1, \"track-selected\"], [\"tabindex\", \"0\", \"aria-label\", \"track selector\", 1, \"trackSelector\", 3, \"change\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"selected\"]], template: function VgTrackSelectorComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"select\", 2);\n        ɵngcc0.ɵɵlistener(\"change\", function VgTrackSelectorComponent_Template_select_change_3_listener($event) { return ctx.selectTrack($event.target.value); });\n        ɵngcc0.ɵɵtemplate(4, VgTrackSelectorComponent_option_4_Template, 2, 3, \"option\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"vg-icon-closed_caption\", !ctx.trackSelected);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.trackSelected || \"\", \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"aria-valuetext\", ctx.ariaValue);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.tracks);\n    } }, directives: [ɵngcc2.NgForOf], styles: [\"\\n      vg-track-selector {\\n        -webkit-touch-callout: none;\\n        -webkit-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        user-select: none;\\n        display: flex;\\n        justify-content: center;\\n        width: 50px;\\n        height: 50px;\\n        cursor: pointer;\\n        color: white;\\n        line-height: 50px;\\n      }\\n      vg-track-selector .container {\\n        position: relative;\\n        display: flex;\\n        flex-grow: 1;\\n        align-items: center;\\n        padding: 0;\\n        margin: 5px;\\n      }\\n      vg-track-selector select.trackSelector {\\n        width: 50px;\\n        padding: 5px 8px;\\n        border: none;\\n        background: none;\\n        -webkit-appearance: none;\\n        -moz-appearance: none;\\n        appearance: none;\\n        color: transparent;\\n        font-size: 16px;\\n      }\\n      vg-track-selector select.trackSelector::-ms-expand {\\n        display: none;\\n      }\\n      vg-track-selector select.trackSelector option {\\n        color: #000;\\n      }\\n      vg-track-selector .track-selected {\\n        position: absolute;\\n        width: 100%;\\n        height: 50px;\\n        top: -6px;\\n        text-align: center;\\n        text-transform: uppercase;\\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\\n        padding-top: 2px;\\n        pointer-events: none;\\n      }\\n      vg-track-selector .vg-icon-closed_caption:before {\\n        width: 100%;\\n      }\\n    \"], encapsulation: 2 });\n/** @nocollapse */\nVgTrackSelectorComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: VgApiService }\n];\nVgTrackSelectorComponent.propDecorators = {\n    vgFor: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgTrackSelectorComponent, [{\n        type: Component,\n        args: [{\n                selector: 'vg-track-selector',\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <div class=\"container\">\n      <div\n        class=\"track-selected\"\n        [class.vg-icon-closed_caption]=\"!trackSelected\"\n      >\n        {{ trackSelected || '' }}\n      </div>\n      <select\n        class=\"trackSelector\"\n        (change)=\"selectTrack($event.target.value)\"\n        tabindex=\"0\"\n        aria-label=\"track selector\"\n        [attr.aria-valuetext]=\"ariaValue\"\n      >\n        <option\n          *ngFor=\"let track of tracks\"\n          [value]=\"track.id\"\n          [selected]=\"track.selected === true\"\n        >\n          {{ track.label }}\n        </option>\n      </select>\n    </div>\n  `,\n                styles: [`\n      vg-track-selector {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        width: 50px;\n        height: 50px;\n        cursor: pointer;\n        color: white;\n        line-height: 50px;\n      }\n      vg-track-selector .container {\n        position: relative;\n        display: flex;\n        flex-grow: 1;\n        align-items: center;\n        padding: 0;\n        margin: 5px;\n      }\n      vg-track-selector select.trackSelector {\n        width: 50px;\n        padding: 5px 8px;\n        border: none;\n        background: none;\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        color: transparent;\n        font-size: 16px;\n      }\n      vg-track-selector select.trackSelector::-ms-expand {\n        display: none;\n      }\n      vg-track-selector select.trackSelector option {\n        color: #000;\n      }\n      vg-track-selector .track-selected {\n        position: absolute;\n        width: 100%;\n        height: 50px;\n        top: -6px;\n        text-align: center;\n        text-transform: uppercase;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        padding-top: 2px;\n        pointer-events: none;\n      }\n      vg-track-selector .vg-icon-closed_caption:before {\n        width: 100%;\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { vgFor: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    VgTrackSelectorComponent.prototype.vgFor;\n    /** @type {?} */\n    VgTrackSelectorComponent.prototype.elem;\n    /** @type {?} */\n    VgTrackSelectorComponent.prototype.target;\n    /** @type {?} */\n    VgTrackSelectorComponent.prototype.tracks;\n    /** @type {?} */\n    VgTrackSelectorComponent.prototype.trackSelected;\n    /** @type {?} */\n    VgTrackSelectorComponent.prototype.subscriptions;\n    /** @type {?} */\n    VgTrackSelectorComponent.prototype.ariaValue;\n    /** @type {?} */\n    VgTrackSelectorComponent.prototype.API;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/vg-time-display/vg-time-display.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Workaround until we can use UTC with Angular Date Pipe\nclass VgUtcPipe {\n    /**\n     * @param {?} value\n     * @param {?} format\n     * @return {?}\n     */\n    transform(value, format) {\n        /** @type {?} */\n        let date = new Date(value);\n        /** @type {?} */\n        let result = format;\n        /** @type {?} */\n        let ss = date.getUTCSeconds();\n        /** @type {?} */\n        let mm = date.getUTCMinutes();\n        /** @type {?} */\n        let hh = date.getUTCHours();\n        if (ss < 10) {\n            ss = '0' + ss;\n        }\n        if (mm < 10) {\n            mm = '0' + mm;\n        }\n        if (hh < 10) {\n            hh = '0' + hh;\n        }\n        result = result.replace(/ss/g, (/** @type {?} */ (ss)));\n        result = result.replace(/mm/g, (/** @type {?} */ (mm)));\n        result = result.replace(/hh/g, (/** @type {?} */ (hh)));\n        return result;\n    }\n}\nVgUtcPipe.ɵfac = function VgUtcPipe_Factory(t) { return new (t || VgUtcPipe)(); };\nVgUtcPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"vgUtc\", type: VgUtcPipe, pure: true });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgUtcPipe, [{\n        type: Pipe,\n        args: [{ name: 'vgUtc' }]\n    }], null, null); })();\nclass VgTimeDisplayComponent {\n    /**\n     * @param {?} ref\n     * @param {?} API\n     */\n    constructor(ref, API) {\n        this.API = API;\n        this.vgProperty = 'current';\n        this.vgFormat = 'mm:ss';\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\n             * @return {?}\n             */\n            () => this.onPlayerReady())));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n    }\n    /**\n     * @return {?}\n     */\n    getTime() {\n        /** @type {?} */\n        let t = 0;\n        if (this.target) {\n            t = Math.round(this.target.time[this.vgProperty]);\n            t = isNaN(t) || this.target.isLive ? 0 : t;\n        }\n        return t;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscriptions.forEach((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => s.unsubscribe()));\n    }\n}\nVgTimeDisplayComponent.ɵfac = function VgTimeDisplayComponent_Factory(t) { return new (t || VgTimeDisplayComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\nVgTimeDisplayComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgTimeDisplayComponent, selectors: [[\"vg-time-display\"]], inputs: { vgProperty: \"vgProperty\", vgFormat: \"vgFormat\", vgFor: \"vgFor\" }, ngContentSelectors: _c0, decls: 3, vars: 2, consts: [[4, \"ngIf\"]], template: function VgTimeDisplayComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, VgTimeDisplayComponent_span_0_Template, 2, 0, \"span\", 0);\n        ɵngcc0.ɵɵtemplate(1, VgTimeDisplayComponent_span_1_Template, 3, 4, \"span\", 0);\n        ɵngcc0.ɵɵprojection(2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.target == null ? null : ctx.target.isLive);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !(ctx.target == null ? null : ctx.target.isLive));\n    } }, directives: [ɵngcc2.NgIf], pipes: [VgUtcPipe], styles: [\"\\n      vg-time-display {\\n        -webkit-touch-callout: none;\\n        -webkit-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        user-select: none;\\n        display: flex;\\n        justify-content: center;\\n        height: 50px;\\n        width: 60px;\\n        cursor: pointer;\\n        color: white;\\n        line-height: 50px;\\n        pointer-events: none;\\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\\n      }\\n    \"], encapsulation: 2 });\n/** @nocollapse */\nVgTimeDisplayComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: VgApiService }\n];\nVgTimeDisplayComponent.propDecorators = {\n    vgFor: [{ type: Input }],\n    vgProperty: [{ type: Input }],\n    vgFormat: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgTimeDisplayComponent, [{\n        type: Component,\n        args: [{\n                selector: 'vg-time-display',\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <span *ngIf=\"target?.isLive\">LIVE</span>\n    <span *ngIf=\"!target?.isLive\">{{ getTime() | vgUtc: vgFormat }}</span>\n    <ng-content></ng-content>\n  `,\n                styles: [`\n      vg-time-display {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        height: 50px;\n        width: 60px;\n        cursor: pointer;\n        color: white;\n        line-height: 50px;\n        pointer-events: none;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { vgProperty: [{\n            type: Input\n        }], vgFormat: [{\n            type: Input\n        }], vgFor: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    VgTimeDisplayComponent.prototype.vgFor;\n    /** @type {?} */\n    VgTimeDisplayComponent.prototype.vgProperty;\n    /** @type {?} */\n    VgTimeDisplayComponent.prototype.vgFormat;\n    /** @type {?} */\n    VgTimeDisplayComponent.prototype.elem;\n    /** @type {?} */\n    VgTimeDisplayComponent.prototype.target;\n    /** @type {?} */\n    VgTimeDisplayComponent.prototype.subscriptions;\n    /** @type {?} */\n    VgTimeDisplayComponent.prototype.API;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/vg-scrub-bar/vg-scrub-bar.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgScrubBarComponent {\n    /**\n     * @param {?} ref\n     * @param {?} API\n     * @param {?} vgControlsHiddenState\n     */\n    constructor(ref, API, vgControlsHiddenState) {\n        this.API = API;\n        this.hideScrubBar = false;\n        this.vgSlider = true;\n        this.isSeeking = false;\n        this.wasPlaying = false;\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n        this.subscriptions.push(vgControlsHiddenState.isHidden.subscribe((/**\n         * @param {?} hide\n         * @return {?}\n         */\n        (hide) => this.onHideScrubBar(hide))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\n             * @return {?}\n             */\n            () => this.onPlayerReady())));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    seekStart() {\n        if (this.target.canPlay) {\n            this.isSeeking = true;\n            if (this.target.state === VgStates.VG_PLAYING) {\n                this.wasPlaying = true;\n            }\n            this.target.pause();\n        }\n    }\n    /**\n     * @protected\n     * @param {?} offset\n     * @return {?}\n     */\n    seekMove(offset) {\n        if (this.isSeeking) {\n            /** @type {?} */\n            const percentage = Math.max(Math.min((offset * 100) / this.elem.scrollWidth, 99.9), 0);\n            this.target.time.current = (percentage * this.target.time.total) / 100;\n            this.target.seekTime(percentage, true);\n        }\n    }\n    /**\n     * @protected\n     * @param {?} offset\n     * @return {?}\n     */\n    seekEnd(offset) {\n        this.isSeeking = false;\n        if (this.target.canPlay) {\n            /** @type {?} */\n            const percentage = Math.max(Math.min((offset * 100) / this.elem.scrollWidth, 99.9), 0);\n            this.target.seekTime(percentage, true);\n            if (this.wasPlaying) {\n                this.wasPlaying = false;\n                this.target.play();\n            }\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    touchEnd() {\n        this.isSeeking = false;\n        if (this.wasPlaying) {\n            this.wasPlaying = false;\n            this.target.play();\n        }\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    getTouchOffset(event) {\n        /** @type {?} */\n        let offsetLeft = 0;\n        /** @type {?} */\n        let element = event.target;\n        while (element) {\n            offsetLeft += element.offsetLeft;\n            element = element.offsetParent;\n        }\n        return event.touches[0].pageX - offsetLeft;\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onMouseDownScrubBar($event) {\n        if (this.target) {\n            if (!this.target.isLive) {\n                if (!this.vgSlider) {\n                    this.seekEnd($event.offsetX);\n                }\n                else {\n                    this.seekStart();\n                }\n            }\n        }\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onMouseMoveScrubBar($event) {\n        if (this.target) {\n            if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n                this.seekMove($event.offsetX);\n            }\n        }\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onMouseUpScrubBar($event) {\n        if (this.target) {\n            if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n                this.seekEnd($event.offsetX);\n            }\n        }\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onTouchStartScrubBar($event) {\n        if (this.target) {\n            if (!this.target.isLive) {\n                if (!this.vgSlider) {\n                    this.seekEnd(this.getTouchOffset($event));\n                }\n                else {\n                    this.seekStart();\n                }\n            }\n        }\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onTouchMoveScrubBar($event) {\n        if (this.target) {\n            if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n                this.seekMove(this.getTouchOffset($event));\n            }\n        }\n    }\n    // @ts-ignore\n    /**\n     * @param {?} _$event\n     * @return {?}\n     */\n    onTouchCancelScrubBar(_$event) {\n        if (this.target) {\n            if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n                this.touchEnd();\n            }\n        }\n    }\n    // @ts-ignore\n    /**\n     * @param {?} _$event\n     * @return {?}\n     */\n    onTouchEndScrubBar(_$event) {\n        if (this.target) {\n            if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n                this.touchEnd();\n            }\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    arrowAdjustVolume(event) {\n        if (this.target) {\n            if (event.keyCode === 38 || event.keyCode === 39) {\n                event.preventDefault();\n                this.target.seekTime((this.target.time.current + 5000) / 1000, false);\n            }\n            else if (event.keyCode === 37 || event.keyCode === 40) {\n                event.preventDefault();\n                this.target.seekTime((this.target.time.current - 5000) / 1000, false);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getPercentage() {\n        return this.target\n            ? Math.round((this.target.time.current * 100) / this.target.time.total) + '%'\n            : '0%';\n    }\n    /**\n     * @param {?} hide\n     * @return {?}\n     */\n    onHideScrubBar(hide) {\n        this.hideScrubBar = hide;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscriptions.forEach((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => s.unsubscribe()));\n    }\n}\nVgScrubBarComponent.ɵfac = function VgScrubBarComponent_Factory(t) { return new (t || VgScrubBarComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgControlsHiddenService)); };\nVgScrubBarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgScrubBarComponent, selectors: [[\"vg-scrub-bar\"]], hostVars: 2, hostBindings: function VgScrubBarComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function VgScrubBarComponent_mousedown_HostBindingHandler($event) { return ctx.onMouseDownScrubBar($event); })(\"mousemove\", function VgScrubBarComponent_mousemove_HostBindingHandler($event) { return ctx.onMouseMoveScrubBar($event); }, false, ɵngcc0.ɵɵresolveDocument)(\"mouseup\", function VgScrubBarComponent_mouseup_HostBindingHandler($event) { return ctx.onMouseUpScrubBar($event); }, false, ɵngcc0.ɵɵresolveDocument)(\"touchstart\", function VgScrubBarComponent_touchstart_HostBindingHandler($event) { return ctx.onTouchStartScrubBar($event); })(\"touchmove\", function VgScrubBarComponent_touchmove_HostBindingHandler($event) { return ctx.onTouchMoveScrubBar($event); }, false, ɵngcc0.ɵɵresolveDocument)(\"touchcancel\", function VgScrubBarComponent_touchcancel_HostBindingHandler($event) { return ctx.onTouchCancelScrubBar($event); }, false, ɵngcc0.ɵɵresolveDocument)(\"touchend\", function VgScrubBarComponent_touchend_HostBindingHandler($event) { return ctx.onTouchEndScrubBar($event); }, false, ɵngcc0.ɵɵresolveDocument)(\"keydown\", function VgScrubBarComponent_keydown_HostBindingHandler($event) { return ctx.arrowAdjustVolume($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"hide\", ctx.hideScrubBar);\n    } }, inputs: { vgSlider: \"vgSlider\", vgFor: \"vgFor\" }, ngContentSelectors: _c0, decls: 2, vars: 2, consts: [[\"tabindex\", \"0\", \"role\", \"slider\", \"aria-label\", \"scrub bar\", \"aria-level\", \"polite\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"scrubBar\"]], template: function VgScrubBarComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.getPercentage())(\"aria-valuetext\", ctx.getPercentage());\n    } }, styles: [\"\\n      vg-scrub-bar {\\n        -webkit-touch-callout: none;\\n        -webkit-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        user-select: none;\\n        position: absolute;\\n        width: 100%;\\n        height: 5px;\\n        bottom: 50px;\\n        margin: 0;\\n        cursor: pointer;\\n        align-items: center;\\n        background: rgba(0, 0, 0, 0.75);\\n        z-index: 250;\\n        -webkit-transition: bottom 1s, opacity 0.5s;\\n        -khtml-transition: bottom 1s, opacity 0.5s;\\n        -moz-transition: bottom 1s, opacity 0.5s;\\n        -ms-transition: bottom 1s, opacity 0.5s;\\n        transition: bottom 1s, opacity 0.5s;\\n      }\\n      vg-scrub-bar .scrubBar {\\n        position: relative;\\n        display: flex;\\n        flex-grow: 1;\\n        align-items: center;\\n        height: 100%;\\n      }\\n      vg-controls vg-scrub-bar {\\n        position: relative;\\n        bottom: 0;\\n        background: transparent;\\n        height: 50px;\\n        flex-grow: 1;\\n        flex-basis: 0;\\n        margin: 0 10px;\\n        -webkit-transition: initial;\\n        -khtml-transition: initial;\\n        -moz-transition: initial;\\n        -ms-transition: initial;\\n        transition: initial;\\n      }\\n      vg-scrub-bar.hide {\\n        bottom: 0;\\n        opacity: 0;\\n      }\\n      vg-controls vg-scrub-bar.hide {\\n        bottom: initial;\\n        opacity: initial;\\n      }\\n    \"], encapsulation: 2 });\n/** @nocollapse */\nVgScrubBarComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: VgApiService },\n    { type: VgControlsHiddenService }\n];\nVgScrubBarComponent.propDecorators = {\n    hideScrubBar: [{ type: HostBinding, args: ['class.hide',] }],\n    vgFor: [{ type: Input }],\n    vgSlider: [{ type: Input }],\n    onMouseDownScrubBar: [{ type: HostListener, args: ['mousedown', ['$event'],] }],\n    onMouseMoveScrubBar: [{ type: HostListener, args: ['document:mousemove', ['$event'],] }],\n    onMouseUpScrubBar: [{ type: HostListener, args: ['document:mouseup', ['$event'],] }],\n    onTouchStartScrubBar: [{ type: HostListener, args: ['touchstart', ['$event'],] }],\n    onTouchMoveScrubBar: [{ type: HostListener, args: ['document:touchmove', ['$event'],] }],\n    onTouchCancelScrubBar: [{ type: HostListener, args: ['document:touchcancel', ['$event'],] }],\n    onTouchEndScrubBar: [{ type: HostListener, args: ['document:touchend', ['$event'],] }],\n    arrowAdjustVolume: [{ type: HostListener, args: ['keydown', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgScrubBarComponent, [{\n        type: Component,\n        args: [{\n                selector: 'vg-scrub-bar',\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <div\n      class=\"scrubBar\"\n      tabindex=\"0\"\n      role=\"slider\"\n      aria-label=\"scrub bar\"\n      aria-level=\"polite\"\n      [attr.aria-valuenow]=\"getPercentage()\"\n      aria-valuemin=\"0\"\n      aria-valuemax=\"100\"\n      [attr.aria-valuetext]=\"getPercentage()\"\n    >\n      <ng-content></ng-content>\n    </div>\n  `,\n                styles: [`\n      vg-scrub-bar {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        position: absolute;\n        width: 100%;\n        height: 5px;\n        bottom: 50px;\n        margin: 0;\n        cursor: pointer;\n        align-items: center;\n        background: rgba(0, 0, 0, 0.75);\n        z-index: 250;\n        -webkit-transition: bottom 1s, opacity 0.5s;\n        -khtml-transition: bottom 1s, opacity 0.5s;\n        -moz-transition: bottom 1s, opacity 0.5s;\n        -ms-transition: bottom 1s, opacity 0.5s;\n        transition: bottom 1s, opacity 0.5s;\n      }\n      vg-scrub-bar .scrubBar {\n        position: relative;\n        display: flex;\n        flex-grow: 1;\n        align-items: center;\n        height: 100%;\n      }\n      vg-controls vg-scrub-bar {\n        position: relative;\n        bottom: 0;\n        background: transparent;\n        height: 50px;\n        flex-grow: 1;\n        flex-basis: 0;\n        margin: 0 10px;\n        -webkit-transition: initial;\n        -khtml-transition: initial;\n        -moz-transition: initial;\n        -ms-transition: initial;\n        transition: initial;\n      }\n      vg-scrub-bar.hide {\n        bottom: 0;\n        opacity: 0;\n      }\n      vg-controls vg-scrub-bar.hide {\n        bottom: initial;\n        opacity: initial;\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }, { type: ɵngcc1.VgControlsHiddenService }]; }, { hideScrubBar: [{\n            type: HostBinding,\n            args: ['class.hide']\n        }], vgSlider: [{\n            type: Input\n        }], \n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onMouseDownScrubBar: [{\n            type: HostListener,\n            args: ['mousedown', ['$event']]\n        }], \n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onMouseMoveScrubBar: [{\n            type: HostListener,\n            args: ['document:mousemove', ['$event']]\n        }], \n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onMouseUpScrubBar: [{\n            type: HostListener,\n            args: ['document:mouseup', ['$event']]\n        }], \n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onTouchStartScrubBar: [{\n            type: HostListener,\n            args: ['touchstart', ['$event']]\n        }], \n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onTouchMoveScrubBar: [{\n            type: HostListener,\n            args: ['document:touchmove', ['$event']]\n        }], \n    // @ts-ignore\n    /**\n     * @param {?} _$event\n     * @return {?}\n     */\n    onTouchCancelScrubBar: [{\n            type: HostListener,\n            args: ['document:touchcancel', ['$event']]\n        }], \n    // @ts-ignore\n    /**\n     * @param {?} _$event\n     * @return {?}\n     */\n    onTouchEndScrubBar: [{\n            type: HostListener,\n            args: ['document:touchend', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    arrowAdjustVolume: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }], vgFor: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    VgScrubBarComponent.prototype.hideScrubBar;\n    /** @type {?} */\n    VgScrubBarComponent.prototype.vgFor;\n    /** @type {?} */\n    VgScrubBarComponent.prototype.vgSlider;\n    /** @type {?} */\n    VgScrubBarComponent.prototype.elem;\n    /** @type {?} */\n    VgScrubBarComponent.prototype.target;\n    /** @type {?} */\n    VgScrubBarComponent.prototype.isSeeking;\n    /** @type {?} */\n    VgScrubBarComponent.prototype.wasPlaying;\n    /** @type {?} */\n    VgScrubBarComponent.prototype.subscriptions;\n    /** @type {?} */\n    VgScrubBarComponent.prototype.API;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/vg-quality-selector/vg-quality-selector.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgQualitySelectorComponent {\n    /**\n     * @param {?} ref\n     * @param {?} API\n     */\n    constructor(ref, API) {\n        this.API = API;\n        this.onBitrateChange = new EventEmitter();\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() { }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.bitrates.currentValue && changes.bitrates.currentValue.length) {\n            this.bitrates.forEach((/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => (item.label =\n                item.label || Math.round(item.bitrate / 1000).toString())));\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    selectBitrate(index) {\n        this.bitrateSelected = this.bitrates[index];\n        this.onBitrateChange.emit(this.bitrates[index]);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscriptions.forEach((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => s.unsubscribe()));\n    }\n}\nVgQualitySelectorComponent.ɵfac = function VgQualitySelectorComponent_Factory(t) { return new (t || VgQualitySelectorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\nVgQualitySelectorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgQualitySelectorComponent, selectors: [[\"vg-quality-selector\"]], inputs: { bitrates: \"bitrates\" }, outputs: { onBitrateChange: \"onBitrateChange\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 5, vars: 5, consts: [[1, \"container\"], [1, \"quality-selected\"], [\"tabindex\", \"0\", \"aria-label\", \"quality selector\", 1, \"quality-selector\", 3, \"change\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"selected\"]], template: function VgQualitySelectorComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"select\", 2);\n        ɵngcc0.ɵɵlistener(\"change\", function VgQualitySelectorComponent_Template_select_change_3_listener($event) { return ctx.selectBitrate($event.target.value); });\n        ɵngcc0.ɵɵtemplate(4, VgQualitySelectorComponent_option_4_Template, 2, 3, \"option\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"vg-icon-hd\", !ctx.bitrateSelected);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.bitrateSelected == null ? null : ctx.bitrateSelected.label, \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"aria-valuetext\", ctx.ariaValue);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.bitrates);\n    } }, directives: [ɵngcc2.NgForOf], styles: [\"\\n      vg-quality-selector {\\n        -webkit-touch-callout: none;\\n        -webkit-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        user-select: none;\\n        display: flex;\\n        justify-content: center;\\n        width: 50px;\\n        height: 50px;\\n        cursor: pointer;\\n        color: white;\\n        line-height: 50px;\\n      }\\n      vg-quality-selector .container {\\n        position: relative;\\n        display: flex;\\n        flex-grow: 1;\\n        align-items: center;\\n        padding: 0;\\n        margin: 5px;\\n      }\\n      vg-quality-selector select.quality-selector {\\n        width: 50px;\\n        padding: 5px 8px;\\n        border: none;\\n        background: none;\\n        -webkit-appearance: none;\\n        -moz-appearance: none;\\n        appearance: none;\\n        color: transparent;\\n        font-size: 16px;\\n      }\\n      vg-quality-selector select.quality-selector::-ms-expand {\\n        display: none;\\n      }\\n      vg-quality-selector select.quality-selector option {\\n        color: #000;\\n      }\\n      vg-quality-selector .quality-selected {\\n        position: absolute;\\n        width: 100%;\\n        height: 50px;\\n        top: -6px;\\n        text-align: center;\\n        text-transform: uppercase;\\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\\n        padding-top: 2px;\\n        pointer-events: none;\\n      }\\n      vg-quality-selector .vg-icon-closed_caption:before {\\n        width: 100%;\\n      }\\n    \"], encapsulation: 2 });\n/** @nocollapse */\nVgQualitySelectorComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: VgApiService }\n];\nVgQualitySelectorComponent.propDecorators = {\n    bitrates: [{ type: Input }],\n    onBitrateChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgQualitySelectorComponent, [{\n        type: Component,\n        args: [{\n                selector: 'vg-quality-selector',\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <div class=\"container\">\n      <div class=\"quality-selected\" [class.vg-icon-hd]=\"!bitrateSelected\">\n        {{ bitrateSelected?.label }}\n      </div>\n      <select\n        class=\"quality-selector\"\n        (change)=\"selectBitrate($event.target.value)\"\n        tabindex=\"0\"\n        aria-label=\"quality selector\"\n        [attr.aria-valuetext]=\"ariaValue\"\n      >\n        <option\n          *ngFor=\"let bitrate of bitrates\"\n          [value]=\"bitrate.qualityIndex\"\n          [selected]=\"bitrate.qualityIndex === bitrateSelected?.qualityIndex\"\n        >\n          {{ bitrate.label }}\n        </option>\n      </select>\n    </div>\n  `,\n                styles: [`\n      vg-quality-selector {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        width: 50px;\n        height: 50px;\n        cursor: pointer;\n        color: white;\n        line-height: 50px;\n      }\n      vg-quality-selector .container {\n        position: relative;\n        display: flex;\n        flex-grow: 1;\n        align-items: center;\n        padding: 0;\n        margin: 5px;\n      }\n      vg-quality-selector select.quality-selector {\n        width: 50px;\n        padding: 5px 8px;\n        border: none;\n        background: none;\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        color: transparent;\n        font-size: 16px;\n      }\n      vg-quality-selector select.quality-selector::-ms-expand {\n        display: none;\n      }\n      vg-quality-selector select.quality-selector option {\n        color: #000;\n      }\n      vg-quality-selector .quality-selected {\n        position: absolute;\n        width: 100%;\n        height: 50px;\n        top: -6px;\n        text-align: center;\n        text-transform: uppercase;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        padding-top: 2px;\n        pointer-events: none;\n      }\n      vg-quality-selector .vg-icon-closed_caption:before {\n        width: 100%;\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { onBitrateChange: [{\n            type: Output\n        }], bitrates: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    VgQualitySelectorComponent.prototype.bitrates;\n    /** @type {?} */\n    VgQualitySelectorComponent.prototype.onBitrateChange;\n    /** @type {?} */\n    VgQualitySelectorComponent.prototype.bitrateSelected;\n    /** @type {?} */\n    VgQualitySelectorComponent.prototype.elem;\n    /** @type {?} */\n    VgQualitySelectorComponent.prototype.target;\n    /** @type {?} */\n    VgQualitySelectorComponent.prototype.subscriptions;\n    /** @type {?} */\n    VgQualitySelectorComponent.prototype.ariaValue;\n    /** @type {?} */\n    VgQualitySelectorComponent.prototype.API;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/vg-playback-button/vg-playback-button.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgPlaybackButtonComponent {\n    /**\n     * @param {?} ref\n     * @param {?} API\n     * @param {?} cdr\n     */\n    constructor(ref, API, cdr) {\n        this.API = API;\n        this.cdr = cdr;\n        this.subscriptions = [];\n        this.ariaValue = 1;\n        this.elem = ref.nativeElement;\n        this.playbackValues = ['0.5', '1.0', '1.5', '2.0'];\n        this.playbackIndex = 1;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\n             * @return {?}\n             */\n            () => this.onPlayerReady())));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n    }\n    /**\n     * @return {?}\n     */\n    onClick() {\n        this.updatePlaybackSpeed();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown(event) {\n        // On press Enter (13) or Space (32)\n        if (event.keyCode === 13 || event.keyCode === 32) {\n            event.preventDefault();\n            this.updatePlaybackSpeed();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updatePlaybackSpeed() {\n        this.playbackIndex = ++this.playbackIndex % this.playbackValues.length;\n        if (this.target instanceof VgApiService) {\n            this.target.playbackRate = this.playbackValues[this.playbackIndex];\n        }\n        else {\n            this.target.playbackRate[this.vgFor] = this.playbackValues[this.playbackIndex];\n        }\n        this.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    getPlaybackRate() {\n        this.ariaValue = this.target ? this.target.playbackRate : 1.0;\n        return this.ariaValue;\n    }\n    /**\n     * @return {?}\n     */\n    detectChanges() {\n        try {\n            this.cdr.detectChanges();\n        }\n        catch (e) {\n            console.warn(e);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscriptions.forEach((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => s.unsubscribe()));\n    }\n}\nVgPlaybackButtonComponent.ɵfac = function VgPlaybackButtonComponent_Factory(t) { return new (t || VgPlaybackButtonComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nVgPlaybackButtonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgPlaybackButtonComponent, selectors: [[\"vg-playback-button\"]], hostBindings: function VgPlaybackButtonComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function VgPlaybackButtonComponent_click_HostBindingHandler() { return ctx.onClick(); })(\"keydown\", function VgPlaybackButtonComponent_keydown_HostBindingHandler($event) { return ctx.onKeyDown($event); });\n    } }, inputs: { playbackValues: \"playbackValues\", vgFor: \"vgFor\" }, decls: 2, vars: 2, consts: [[\"tabindex\", \"0\", \"role\", \"button\", \"aria-label\", \"playback speed button\", 1, \"button\"]], template: function VgPlaybackButtonComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuetext\", ctx.ariaValue);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.getPlaybackRate(), \"x \");\n    } }, styles: [\"\\n      vg-playback-button {\\n        -webkit-touch-callout: none;\\n        -webkit-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        user-select: none;\\n        display: flex;\\n        justify-content: center;\\n        height: 50px;\\n        width: 50px;\\n        cursor: pointer;\\n        color: white;\\n        line-height: 50px;\\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\\n      }\\n      vg-playback-button .button {\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        width: 50px;\\n      }\\n    \"], encapsulation: 2 });\n/** @nocollapse */\nVgPlaybackButtonComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: VgApiService },\n    { type: ChangeDetectorRef }\n];\nVgPlaybackButtonComponent.propDecorators = {\n    vgFor: [{ type: Input }],\n    playbackValues: [{ type: Input }],\n    onClick: [{ type: HostListener, args: ['click',] }],\n    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgPlaybackButtonComponent, [{\n        type: Component,\n        args: [{\n                selector: 'vg-playback-button',\n                encapsulation: ViewEncapsulation.None,\n                template: ` <span\n    class=\"button\"\n    tabindex=\"0\"\n    role=\"button\"\n    aria-label=\"playback speed button\"\n    [attr.aria-valuetext]=\"ariaValue\"\n  >\n    {{ getPlaybackRate() }}x\n  </span>`,\n                styles: [`\n      vg-playback-button {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        height: 50px;\n        width: 50px;\n        cursor: pointer;\n        color: white;\n        line-height: 50px;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n      }\n      vg-playback-button .button {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 50px;\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }, { type: ɵngcc0.ChangeDetectorRef }]; }, { playbackValues: [{\n            type: Input\n        }], \n    /**\n     * @return {?}\n     */\n    onClick: [{\n            type: HostListener,\n            args: ['click']\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }], vgFor: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    VgPlaybackButtonComponent.prototype.vgFor;\n    /** @type {?} */\n    VgPlaybackButtonComponent.prototype.elem;\n    /** @type {?} */\n    VgPlaybackButtonComponent.prototype.target;\n    /** @type {?} */\n    VgPlaybackButtonComponent.prototype.playbackValues;\n    /** @type {?} */\n    VgPlaybackButtonComponent.prototype.playbackIndex;\n    /** @type {?} */\n    VgPlaybackButtonComponent.prototype.subscriptions;\n    /** @type {?} */\n    VgPlaybackButtonComponent.prototype.ariaValue;\n    /** @type {?} */\n    VgPlaybackButtonComponent.prototype.API;\n    /** @type {?} */\n    VgPlaybackButtonComponent.prototype.cdr;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/vg-play-pause/vg-play-pause.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgPlayPauseComponent {\n    /**\n     * @param {?} ref\n     * @param {?} API\n     */\n    constructor(ref, API) {\n        this.API = API;\n        this.subscriptions = [];\n        this.ariaValue = VgStates.VG_PAUSED;\n        this.elem = ref.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\n             * @return {?}\n             */\n            () => this.onPlayerReady())));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n    }\n    /**\n     * @return {?}\n     */\n    onClick() {\n        this.playPause();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown(event) {\n        // On press Enter (13) or Space (32)\n        if (event.keyCode === 13 || event.keyCode === 32) {\n            event.preventDefault();\n            this.playPause();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    playPause() {\n        /** @type {?} */\n        const state = this.getState();\n        switch (state) {\n            case VgStates.VG_PLAYING:\n                this.target.pause();\n                break;\n            case VgStates.VG_PAUSED:\n            case VgStates.VG_ENDED:\n                this.target.play();\n                break;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getState() {\n        this.ariaValue = this.target ? this.target.state : VgStates.VG_PAUSED;\n        return this.ariaValue;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscriptions.forEach((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => s.unsubscribe()));\n    }\n}\nVgPlayPauseComponent.ɵfac = function VgPlayPauseComponent_Factory(t) { return new (t || VgPlayPauseComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\nVgPlayPauseComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgPlayPauseComponent, selectors: [[\"vg-play-pause\"]], hostBindings: function VgPlayPauseComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function VgPlayPauseComponent_click_HostBindingHandler() { return ctx.onClick(); })(\"keydown\", function VgPlayPauseComponent_keydown_HostBindingHandler($event) { return ctx.onKeyDown($event); });\n    } }, inputs: { vgFor: \"vgFor\" }, decls: 1, vars: 6, consts: [[\"tabindex\", \"0\", \"role\", \"button\", 1, \"icon\"]], template: function VgPlayPauseComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"vg-icon-pause\", ctx.getState() === \"playing\")(\"vg-icon-play_arrow\", ctx.getState() === \"paused\" || ctx.getState() === \"ended\");\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.getState() === \"paused\" ? \"play\" : \"pause\")(\"aria-valuetext\", ctx.ariaValue);\n    } }, styles: [\"\\n      vg-play-pause {\\n        -webkit-touch-callout: none;\\n        -webkit-user-select: none;\\n        -khtml-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        user-select: none;\\n        display: flex;\\n        justify-content: center;\\n        height: 50px;\\n        width: 50px;\\n        cursor: pointer;\\n        color: white;\\n        line-height: 50px;\\n      }\\n      vg-play-pause .icon {\\n        pointer-events: none;\\n      }\\n    \"], encapsulation: 2 });\n/** @nocollapse */\nVgPlayPauseComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: VgApiService }\n];\nVgPlayPauseComponent.propDecorators = {\n    vgFor: [{ type: Input }],\n    onClick: [{ type: HostListener, args: ['click',] }],\n    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgPlayPauseComponent, [{\n        type: Component,\n        args: [{\n                selector: 'vg-play-pause',\n                encapsulation: ViewEncapsulation.None,\n                template: ` <div\n    class=\"icon\"\n    [class.vg-icon-pause]=\"getState() === 'playing'\"\n    [class.vg-icon-play_arrow]=\"\n      getState() === 'paused' || getState() === 'ended'\n    \"\n    tabindex=\"0\"\n    role=\"button\"\n    [attr.aria-label]=\"getState() === 'paused' ? 'play' : 'pause'\"\n    [attr.aria-valuetext]=\"ariaValue\"\n  ></div>`,\n                styles: [`\n      vg-play-pause {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -khtml-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        height: 50px;\n        width: 50px;\n        cursor: pointer;\n        color: white;\n        line-height: 50px;\n      }\n      vg-play-pause .icon {\n        pointer-events: none;\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { \n    /**\n     * @return {?}\n     */\n    onClick: [{\n            type: HostListener,\n            args: ['click']\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }], vgFor: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    VgPlayPauseComponent.prototype.vgFor;\n    /** @type {?} */\n    VgPlayPauseComponent.prototype.elem;\n    /** @type {?} */\n    VgPlayPauseComponent.prototype.target;\n    /** @type {?} */\n    VgPlayPauseComponent.prototype.subscriptions;\n    /** @type {?} */\n    VgPlayPauseComponent.prototype.ariaValue;\n    /** @type {?} */\n    VgPlayPauseComponent.prototype.API;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/vg-mute/vg-mute.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgMuteComponent {\n    /**\n     * @param {?} ref\n     * @param {?} API\n     */\n    constructor(ref, API) {\n        this.API = API;\n        this.subscriptions = [];\n        this.ariaValue = 'unmuted';\n        this.elem = ref.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\n             * @return {?}\n             */\n            () => this.onPlayerReady())));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n        this.currentVolume = this.target.volume;\n    }\n    /**\n     * @return {?}\n     */\n    onClick() {\n        this.changeMuteState();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown(event) {\n        // On press Enter (13) or Space (32)\n        if (event.keyCode === 13 || event.keyCode === 32) {\n            event.preventDefault();\n            this.changeMuteState();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    changeMuteState() {\n        /** @type {?} */\n        const volume = this.getVolume();\n        if (volume === 0) {\n            if (this.target.volume === 0 && this.currentVolume === 0) {\n                this.currentVolume = 1;\n            }\n            this.target.volume = this.currentVolume;\n        }\n        else {\n            this.currentVolume = volume;\n            this.target.volume = 0;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getVolume() {\n        /** @type {?} */\n        const volume = this.target ? this.target.volume : 0;\n        this.ariaValue = volume ? 'unmuted' : 'muted';\n        return volume;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscriptions.forEach((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => s.unsubscribe()));\n    }\n}\nVgMuteComponent.ɵfac = function VgMuteComponent_Factory(t) { return new (t || VgMuteComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\nVgMuteComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgMuteComponent, selectors: [[\"vg-mute\"]], hostBindings: function VgMuteComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function VgMuteComponent_click_HostBindingHandler() { return ctx.onClick(); })(\"keydown\", function VgMuteComponent_keydown_HostBindingHandler($event) { return ctx.onKeyDown($event); });\n    } }, inputs: { vgFor: \"vgFor\" }, decls: 1, vars: 9, consts: [[\"tabindex\", \"0\", \"role\", \"button\", \"aria-label\", \"mute button\", 1, \"icon\"]], template: function VgMuteComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"vg-icon-volume_up\", ctx.getVolume() >= 0.75)(\"vg-icon-volume_down\", ctx.getVolume() >= 0.25 && ctx.getVolume() < 0.75)(\"vg-icon-volume_mute\", ctx.getVolume() > 0 && ctx.getVolume() < 0.25)(\"vg-icon-volume_off\", ctx.getVolume() === 0);\n        ɵngcc0.ɵɵattribute(\"aria-valuetext\", ctx.ariaValue);\n    } }, styles: [\"\\n      vg-mute {\\n        -webkit-touch-callout: none;\\n        -webkit-user-select: none;\\n        -khtml-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        user-select: none;\\n        display: flex;\\n        justify-content: center;\\n        height: 50px;\\n        width: 50px;\\n        cursor: pointer;\\n        color: white;\\n        line-height: 50px;\\n      }\\n      vg-mute .icon {\\n        pointer-events: none;\\n      }\\n    \"], encapsulation: 2 });\n/** @nocollapse */\nVgMuteComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: VgApiService }\n];\nVgMuteComponent.propDecorators = {\n    vgFor: [{ type: Input }],\n    onClick: [{ type: HostListener, args: ['click',] }],\n    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgMuteComponent, [{\n        type: Component,\n        args: [{\n                selector: 'vg-mute',\n                encapsulation: ViewEncapsulation.None,\n                template: ` <div\n    class=\"icon\"\n    [class.vg-icon-volume_up]=\"getVolume() >= 0.75\"\n    [class.vg-icon-volume_down]=\"getVolume() >= 0.25 && getVolume() < 0.75\"\n    [class.vg-icon-volume_mute]=\"getVolume() > 0 && getVolume() < 0.25\"\n    [class.vg-icon-volume_off]=\"getVolume() === 0\"\n    tabindex=\"0\"\n    role=\"button\"\n    aria-label=\"mute button\"\n    [attr.aria-valuetext]=\"ariaValue\"\n  ></div>`,\n                styles: [`\n      vg-mute {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -khtml-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        height: 50px;\n        width: 50px;\n        cursor: pointer;\n        color: white;\n        line-height: 50px;\n      }\n      vg-mute .icon {\n        pointer-events: none;\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { \n    /**\n     * @return {?}\n     */\n    onClick: [{\n            type: HostListener,\n            args: ['click']\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }], vgFor: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    VgMuteComponent.prototype.vgFor;\n    /** @type {?} */\n    VgMuteComponent.prototype.elem;\n    /** @type {?} */\n    VgMuteComponent.prototype.target;\n    /** @type {?} */\n    VgMuteComponent.prototype.currentVolume;\n    /** @type {?} */\n    VgMuteComponent.prototype.subscriptions;\n    /** @type {?} */\n    VgMuteComponent.prototype.ariaValue;\n    /** @type {?} */\n    VgMuteComponent.prototype.API;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/vg-fullscreen/vg-fullscreen.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgFullscreenComponent {\n    /**\n     * @param {?} ref\n     * @param {?} API\n     * @param {?} fsAPI\n     */\n    constructor(ref, API, fsAPI) {\n        this.API = API;\n        this.fsAPI = fsAPI;\n        this.isFullscreen = false;\n        this.subscriptions = [];\n        this.ariaValue = 'normal mode';\n        this.elem = ref.nativeElement;\n        this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\n             * @return {?}\n             */\n            () => this.onPlayerReady())));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n    }\n    /**\n     * @param {?} fsState\n     * @return {?}\n     */\n    onChangeFullscreen(fsState) {\n        this.ariaValue = fsState ? 'fullscreen mode' : 'normal mode';\n        this.isFullscreen = fsState;\n    }\n    /**\n     * @return {?}\n     */\n    onClick() {\n        this.changeFullscreenState();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown(event) {\n        // On press Enter (13) or Space (32)\n        if (event.keyCode === 13 || event.keyCode === 32) {\n            event.preventDefault();\n            this.changeFullscreenState();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    changeFullscreenState() {\n        /** @type {?} */\n        let element = this.target;\n        if (this.target instanceof VgApiService) {\n            element = null;\n        }\n        this.fsAPI.toggleFullscreen(element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscriptions.forEach((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => s.unsubscribe()));\n    }\n}\nVgFullscreenComponent.ɵfac = function VgFullscreenComponent_Factory(t) { return new (t || VgFullscreenComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgFullscreenApiService)); };\nVgFullscreenComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgFullscreenComponent, selectors: [[\"vg-fullscreen\"]], hostBindings: function VgFullscreenComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function VgFullscreenComponent_click_HostBindingHandler() { return ctx.onClick(); })(\"keydown\", function VgFullscreenComponent_keydown_HostBindingHandler($event) { return ctx.onKeyDown($event); });\n    } }, decls: 1, vars: 5, consts: [[\"tabindex\", \"0\", \"role\", \"button\", \"aria-label\", \"fullscreen button\", 1, \"icon\"]], template: function VgFullscreenComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"vg-icon-fullscreen\", !ctx.isFullscreen)(\"vg-icon-fullscreen_exit\", ctx.isFullscreen);\n        ɵngcc0.ɵɵattribute(\"aria-valuetext\", ctx.ariaValue);\n    } }, styles: [\"\\n      vg-fullscreen {\\n        -webkit-touch-callout: none;\\n        -webkit-user-select: none;\\n        -khtml-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        user-select: none;\\n        display: flex;\\n        justify-content: center;\\n        height: 50px;\\n        width: 50px;\\n        cursor: pointer;\\n        color: white;\\n        line-height: 50px;\\n      }\\n      vg-fullscreen .icon {\\n        pointer-events: none;\\n      }\\n    \"], encapsulation: 2 });\n/** @nocollapse */\nVgFullscreenComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: VgApiService },\n    { type: VgFullscreenApiService }\n];\nVgFullscreenComponent.propDecorators = {\n    onClick: [{ type: HostListener, args: ['click',] }],\n    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgFullscreenComponent, [{\n        type: Component,\n        args: [{\n                selector: 'vg-fullscreen',\n                encapsulation: ViewEncapsulation.None,\n                template: ` <div\n    class=\"icon\"\n    [class.vg-icon-fullscreen]=\"!isFullscreen\"\n    [class.vg-icon-fullscreen_exit]=\"isFullscreen\"\n    tabindex=\"0\"\n    role=\"button\"\n    aria-label=\"fullscreen button\"\n    [attr.aria-valuetext]=\"ariaValue\"\n  ></div>`,\n                styles: [`\n      vg-fullscreen {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -khtml-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        display: flex;\n        justify-content: center;\n        height: 50px;\n        width: 50px;\n        cursor: pointer;\n        color: white;\n        line-height: 50px;\n      }\n      vg-fullscreen .icon {\n        pointer-events: none;\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }, { type: ɵngcc1.VgFullscreenApiService }]; }, { \n    /**\n     * @return {?}\n     */\n    onClick: [{\n            type: HostListener,\n            args: ['click']\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    VgFullscreenComponent.prototype.elem;\n    /** @type {?} */\n    VgFullscreenComponent.prototype.vgFor;\n    /** @type {?} */\n    VgFullscreenComponent.prototype.target;\n    /** @type {?} */\n    VgFullscreenComponent.prototype.isFullscreen;\n    /** @type {?} */\n    VgFullscreenComponent.prototype.subscriptions;\n    /** @type {?} */\n    VgFullscreenComponent.prototype.ariaValue;\n    /** @type {?} */\n    VgFullscreenComponent.prototype.API;\n    /** @type {?} */\n    VgFullscreenComponent.prototype.fsAPI;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/vg-scrub-bar/vg-scrub-bar-buffering-time/vg-scrub-bar-buffering-time.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgScrubBarBufferingTimeComponent {\n    /**\n     * @param {?} ref\n     * @param {?} API\n     */\n    constructor(ref, API) {\n        this.API = API;\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\n             * @return {?}\n             */\n            () => this.onPlayerReady())));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n    }\n    /**\n     * @return {?}\n     */\n    getBufferTime() {\n        /** @type {?} */\n        let bufferTime = '0%';\n        if (this.target && this.target.buffer && this.target.buffered.length) {\n            if (this.target.time.total === 0) {\n                bufferTime = '0%';\n            }\n            else {\n                bufferTime =\n                    (this.target.buffer.end / this.target.time.total) * 100 + '%';\n            }\n        }\n        return bufferTime;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscriptions.forEach((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => s.unsubscribe()));\n    }\n}\nVgScrubBarBufferingTimeComponent.ɵfac = function VgScrubBarBufferingTimeComponent_Factory(t) { return new (t || VgScrubBarBufferingTimeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\nVgScrubBarBufferingTimeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgScrubBarBufferingTimeComponent, selectors: [[\"vg-scrub-bar-buffering-time\"]], inputs: { vgFor: \"vgFor\" }, decls: 1, vars: 2, consts: [[1, \"background\"]], template: function VgScrubBarBufferingTimeComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.getBufferTime());\n    } }, styles: [\"\\n      vg-scrub-bar-buffering-time {\\n        display: flex;\\n        width: 100%;\\n        height: 5px;\\n        pointer-events: none;\\n        position: absolute;\\n      }\\n      vg-scrub-bar-buffering-time .background {\\n        background-color: rgba(255, 255, 255, 0.3);\\n      }\\n      vg-controls vg-scrub-bar-buffering-time {\\n        position: absolute;\\n        top: calc(50% - 3px);\\n      }\\n      vg-controls vg-scrub-bar-buffering-time .background {\\n        -webkit-border-radius: 2px;\\n        -moz-border-radius: 2px;\\n        border-radius: 2px;\\n      }\\n    \"], encapsulation: 2 });\n/** @nocollapse */\nVgScrubBarBufferingTimeComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: VgApiService }\n];\nVgScrubBarBufferingTimeComponent.propDecorators = {\n    vgFor: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgScrubBarBufferingTimeComponent, [{\n        type: Component,\n        args: [{\n                selector: 'vg-scrub-bar-buffering-time',\n                encapsulation: ViewEncapsulation.None,\n                template: `<div class=\"background\" [style.width]=\"getBufferTime()\"></div>`,\n                styles: [`\n      vg-scrub-bar-buffering-time {\n        display: flex;\n        width: 100%;\n        height: 5px;\n        pointer-events: none;\n        position: absolute;\n      }\n      vg-scrub-bar-buffering-time .background {\n        background-color: rgba(255, 255, 255, 0.3);\n      }\n      vg-controls vg-scrub-bar-buffering-time {\n        position: absolute;\n        top: calc(50% - 3px);\n      }\n      vg-controls vg-scrub-bar-buffering-time .background {\n        -webkit-border-radius: 2px;\n        -moz-border-radius: 2px;\n        border-radius: 2px;\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { vgFor: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    VgScrubBarBufferingTimeComponent.prototype.vgFor;\n    /** @type {?} */\n    VgScrubBarBufferingTimeComponent.prototype.elem;\n    /** @type {?} */\n    VgScrubBarBufferingTimeComponent.prototype.target;\n    /** @type {?} */\n    VgScrubBarBufferingTimeComponent.prototype.subscriptions;\n    /** @type {?} */\n    VgScrubBarBufferingTimeComponent.prototype.API;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/vg-scrub-bar/vg-scrub-bar-cue-points/vg-scrub-bar-cue-points.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable-next-line: no-conflicting-lifecycle\nclass VgScrubBarCuePointsComponent {\n    /**\n     * @param {?} ref\n     * @param {?} API\n     */\n    constructor(ref, API) {\n        this.API = API;\n        this.onLoadedMetadataCalled = false;\n        this.cuePoints = [];\n        this.subscriptions = [];\n        this.totalCues = 0;\n        this.elem = ref.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\n             * @return {?}\n             */\n            () => this.onPlayerReady())));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n        /** @type {?} */\n        const onTimeUpdate = this.target.subscriptions.loadedMetadata;\n        this.subscriptions.push(onTimeUpdate.subscribe(this.onLoadedMetadata.bind(this)));\n        if (this.onLoadedMetadataCalled) {\n            this.onLoadedMetadata();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onLoadedMetadata() {\n        if (this.vgCuePoints) {\n            // We need to transform the TextTrackCueList to Array or it doesn't work on IE11/Edge.\n            // See: https://github.com/videogular/videogular2/issues/369\n            this.cuePoints = [];\n            for (let i = 0, l = this.vgCuePoints.length; i < l; i++) {\n                /** @type {?} */\n                const end = this.vgCuePoints[i].endTime >= 0\n                    ? this.vgCuePoints[i].endTime\n                    : this.vgCuePoints[i].startTime + 1;\n                /** @type {?} */\n                const cuePointDuration = (end - this.vgCuePoints[i].startTime) * 1000;\n                /** @type {?} */\n                let position = '0';\n                /** @type {?} */\n                let percentWidth = '0';\n                if (typeof cuePointDuration === 'number' && this.target.time.total) {\n                    percentWidth =\n                        (cuePointDuration * 100) / this.target.time.total + '%';\n                    position =\n                        (this.vgCuePoints[i].startTime * 100) /\n                            Math.round(this.target.time.total / 1000) +\n                            '%';\n                }\n                ((/** @type {?} */ (this.vgCuePoints[i]))).$$style = {\n                    width: percentWidth,\n                    left: position,\n                };\n                this.cuePoints.push(this.vgCuePoints[i]);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateCuePoints() {\n        if (!this.target) {\n            this.onLoadedMetadataCalled = true;\n            return;\n        }\n        this.onLoadedMetadata();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.vgCuePoints.currentValue) {\n            this.updateCuePoints();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.vgCuePoints) {\n            /** @type {?} */\n            const changes = this.totalCues !== this.vgCuePoints.length;\n            if (changes) {\n                this.totalCues = this.vgCuePoints.length;\n                this.updateCuePoints();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscriptions.forEach((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => s.unsubscribe()));\n    }\n}\nVgScrubBarCuePointsComponent.ɵfac = function VgScrubBarCuePointsComponent_Factory(t) { return new (t || VgScrubBarCuePointsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\nVgScrubBarCuePointsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgScrubBarCuePointsComponent, selectors: [[\"vg-scrub-bar-cue-points\"]], inputs: { vgCuePoints: \"vgCuePoints\", vgFor: \"vgFor\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 1, consts: [[1, \"cue-point-container\"], [\"class\", \"cue-point\", 3, \"width\", \"left\", 4, \"ngFor\", \"ngForOf\"], [1, \"cue-point\"]], template: function VgScrubBarCuePointsComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, VgScrubBarCuePointsComponent_span_1_Template, 1, 4, \"span\", 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.cuePoints);\n    } }, directives: [ɵngcc2.NgForOf], styles: [\"\\n      vg-scrub-bar-cue-points {\\n        display: flex;\\n        width: 100%;\\n        height: 5px;\\n        pointer-events: none;\\n        position: absolute;\\n      }\\n      vg-scrub-bar-cue-points .cue-point-container .cue-point {\\n        position: absolute;\\n        height: 5px;\\n        background-color: rgba(255, 204, 0, 0.7);\\n      }\\n      vg-controls vg-scrub-bar-cue-points {\\n        position: absolute;\\n        top: calc(50% - 3px);\\n      }\\n    \"], encapsulation: 2 });\n/** @nocollapse */\nVgScrubBarCuePointsComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: VgApiService }\n];\nVgScrubBarCuePointsComponent.propDecorators = {\n    vgCuePoints: [{ type: Input }],\n    vgFor: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgScrubBarCuePointsComponent, [{\n        type: Component,\n        args: [{\n                selector: 'vg-scrub-bar-cue-points',\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <div class=\"cue-point-container\">\n      <span\n        *ngFor=\"let cp of cuePoints\"\n        [style.width]=\"cp.$$style?.width\"\n        [style.left]=\"cp.$$style?.left\"\n        class=\"cue-point\"\n      ></span>\n    </div>\n  `,\n                styles: [`\n      vg-scrub-bar-cue-points {\n        display: flex;\n        width: 100%;\n        height: 5px;\n        pointer-events: none;\n        position: absolute;\n      }\n      vg-scrub-bar-cue-points .cue-point-container .cue-point {\n        position: absolute;\n        height: 5px;\n        background-color: rgba(255, 204, 0, 0.7);\n      }\n      vg-controls vg-scrub-bar-cue-points {\n        position: absolute;\n        top: calc(50% - 3px);\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { vgCuePoints: [{\n            type: Input\n        }], vgFor: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    VgScrubBarCuePointsComponent.prototype.vgCuePoints;\n    /** @type {?} */\n    VgScrubBarCuePointsComponent.prototype.vgFor;\n    /** @type {?} */\n    VgScrubBarCuePointsComponent.prototype.elem;\n    /** @type {?} */\n    VgScrubBarCuePointsComponent.prototype.target;\n    /** @type {?} */\n    VgScrubBarCuePointsComponent.prototype.onLoadedMetadataCalled;\n    /** @type {?} */\n    VgScrubBarCuePointsComponent.prototype.cuePoints;\n    /** @type {?} */\n    VgScrubBarCuePointsComponent.prototype.subscriptions;\n    /** @type {?} */\n    VgScrubBarCuePointsComponent.prototype.totalCues;\n    /** @type {?} */\n    VgScrubBarCuePointsComponent.prototype.API;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/vg-scrub-bar/vg-scrub-bar-current-time/vg-scrub-bar-current-time.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass VgScrubBarCurrentTimeComponent {\n    /**\n     * @param {?} ref\n     * @param {?} API\n     */\n    constructor(ref, API) {\n        this.API = API;\n        this.vgSlider = false;\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe((/**\n             * @return {?}\n             */\n            () => this.onPlayerReady())));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n    }\n    /**\n     * @return {?}\n     */\n    getPercentage() {\n        return this.target\n            ? Math.round((this.target.time.current * 100) / this.target.time.total) +\n                '%'\n            : '0%';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.subscriptions.forEach((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => s.unsubscribe()));\n    }\n}\nVgScrubBarCurrentTimeComponent.ɵfac = function VgScrubBarCurrentTimeComponent_Factory(t) { return new (t || VgScrubBarCurrentTimeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.VgApiService)); };\nVgScrubBarCurrentTimeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: VgScrubBarCurrentTimeComponent, selectors: [[\"vg-scrub-bar-current-time\"]], inputs: { vgSlider: \"vgSlider\", vgFor: \"vgFor\" }, decls: 2, vars: 3, consts: [[1, \"background\"], [\"class\", \"slider\", 4, \"ngIf\"], [1, \"slider\"]], template: function VgScrubBarCurrentTimeComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, VgScrubBarCurrentTimeComponent_span_1_Template, 1, 0, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.getPercentage());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.vgSlider);\n    } }, directives: [ɵngcc2.NgIf], styles: [\"\\n      vg-scrub-bar-current-time {\\n        display: flex;\\n        width: 100%;\\n        height: 5px;\\n        pointer-events: none;\\n        position: absolute;\\n      }\\n      vg-scrub-bar-current-time .background {\\n        background-color: white;\\n      }\\n      vg-controls vg-scrub-bar-current-time {\\n        position: absolute;\\n        top: calc(50% - 3px);\\n        -webkit-border-radius: 2px;\\n        -moz-border-radius: 2px;\\n        border-radius: 2px;\\n      }\\n      vg-controls vg-scrub-bar-current-time .background {\\n        border: 1px solid white;\\n        -webkit-border-radius: 2px;\\n        -moz-border-radius: 2px;\\n        border-radius: 2px;\\n      }\\n      vg-scrub-bar-current-time .slider {\\n        background: white;\\n        height: 15px;\\n        width: 15px;\\n        border-radius: 50%;\\n        box-shadow: 0px 0px 10px black;\\n        margin-top: -5px;\\n        margin-left: -10px;\\n      }\\n    \"], encapsulation: 2 });\n/** @nocollapse */\nVgScrubBarCurrentTimeComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: VgApiService }\n];\nVgScrubBarCurrentTimeComponent.propDecorators = {\n    vgFor: [{ type: Input }],\n    vgSlider: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgScrubBarCurrentTimeComponent, [{\n        type: Component,\n        args: [{\n                selector: 'vg-scrub-bar-current-time',\n                encapsulation: ViewEncapsulation.None,\n                template: `<div class=\"background\" [style.width]=\"getPercentage()\"></div>\n    <span class=\"slider\" *ngIf=\"vgSlider\"></span>`,\n                styles: [`\n      vg-scrub-bar-current-time {\n        display: flex;\n        width: 100%;\n        height: 5px;\n        pointer-events: none;\n        position: absolute;\n      }\n      vg-scrub-bar-current-time .background {\n        background-color: white;\n      }\n      vg-controls vg-scrub-bar-current-time {\n        position: absolute;\n        top: calc(50% - 3px);\n        -webkit-border-radius: 2px;\n        -moz-border-radius: 2px;\n        border-radius: 2px;\n      }\n      vg-controls vg-scrub-bar-current-time .background {\n        border: 1px solid white;\n        -webkit-border-radius: 2px;\n        -moz-border-radius: 2px;\n        border-radius: 2px;\n      }\n      vg-scrub-bar-current-time .slider {\n        background: white;\n        height: 15px;\n        width: 15px;\n        border-radius: 50%;\n        box-shadow: 0px 0px 10px black;\n        margin-top: -5px;\n        margin-left: -10px;\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.VgApiService }]; }, { vgSlider: [{\n            type: Input\n        }], vgFor: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    VgScrubBarCurrentTimeComponent.prototype.vgFor;\n    /** @type {?} */\n    VgScrubBarCurrentTimeComponent.prototype.vgSlider;\n    /** @type {?} */\n    VgScrubBarCurrentTimeComponent.prototype.elem;\n    /** @type {?} */\n    VgScrubBarCurrentTimeComponent.prototype.target;\n    /** @type {?} */\n    VgScrubBarCurrentTimeComponent.prototype.subscriptions;\n    /** @type {?} */\n    VgScrubBarCurrentTimeComponent.prototype.API;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/controls.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst components = [\n    VgControlsComponent,\n    VgVolumeComponent,\n    VgTrackSelectorComponent,\n    VgTimeDisplayComponent,\n    VgScrubBarComponent,\n    VgQualitySelectorComponent,\n    VgPlaybackButtonComponent,\n    VgPlayPauseComponent,\n    VgMuteComponent,\n    VgFullscreenComponent,\n    VgUtcPipe,\n    VgScrubBarBufferingTimeComponent,\n    VgScrubBarCuePointsComponent,\n    VgScrubBarCurrentTimeComponent\n];\nclass VgControlsModule {\n}\nVgControlsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: VgControlsModule });\nVgControlsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function VgControlsModule_Factory(t) { return new (t || VgControlsModule)(); }, imports: [[CommonModule, VgCoreModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(VgControlsModule, { declarations: function () { return [VgControlsComponent, VgVolumeComponent, VgTrackSelectorComponent, VgTimeDisplayComponent, VgScrubBarComponent, VgQualitySelectorComponent, VgPlaybackButtonComponent, VgPlayPauseComponent, VgMuteComponent, VgFullscreenComponent, VgUtcPipe, VgScrubBarBufferingTimeComponent, VgScrubBarCuePointsComponent, VgScrubBarCurrentTimeComponent]; }, imports: function () { return [CommonModule, VgCoreModule]; }, exports: function () { return [VgControlsComponent, VgVolumeComponent, VgTrackSelectorComponent, VgTimeDisplayComponent, VgScrubBarComponent, VgQualitySelectorComponent, VgPlaybackButtonComponent, VgPlayPauseComponent, VgMuteComponent, VgFullscreenComponent, VgUtcPipe, VgScrubBarBufferingTimeComponent, VgScrubBarCuePointsComponent, VgScrubBarCurrentTimeComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(VgControlsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, VgCoreModule],\n                declarations: [...components],\n                exports: [...components]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: videogular-ngx-videogular-controls.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { VgControlsComponent, VgControlsModule, VgFullscreenComponent, VgMuteComponent, VgPlayPauseComponent, VgPlaybackButtonComponent, VgQualitySelectorComponent, VgScrubBarBufferingTimeComponent, VgScrubBarComponent, VgScrubBarCuePointsComponent, VgScrubBarCurrentTimeComponent, VgTimeDisplayComponent, VgTrackSelectorComponent, VgUtcPipe, VgVolumeComponent };\n\n//# sourceMappingURL=videogular-ngx-videogular-controls.js.map"],"sourceRoot":"webpack:///"}