{"version":3,"sources":["./src/app/showcase/showcase.service.ts","./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking-resolvers.page.ts","./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking-resolvers.page.html","./src/app/showcase/route-resolvers-ux/route-resolvers-ux.module.ts","./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell.resolver.ts","./src/app/shell/data-store.ts","./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking.resolver.ts","./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking.resolver.ts","./src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.ts","./src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.html","./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking-resolvers.page.ts","./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking-resolvers.page.html","./src/app/showcase/showcase-shell.model.ts","./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell-resolvers.page.ts","./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell-resolvers.page.html"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACO;AAEmC;AACP;AAC9E,2CAA2C;AAC8K;AAC7J;;;AAKrD,MAAM,eAAe;IAI1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,mBAAc,GAAiD,IAAI,kDAAa,EAAiC,CAAC;IAElF,CAAC;IAElC,sBAAsB;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,0CAA0C,CAAC,CAAC,IAAI,CACvF,0DAAG,CAAC,GAAG,CAAC,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,sCAAsC;YACtC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACpC,CAAC,CAAC,EACF,4DAAK,CAAC,IAAI,CAAC,EACX,+DAAQ,CAAC,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACjC,sCAAsC;YACtC,OAAO,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAEM,mBAAmB;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,0CAA0C,CAAC,CAAC;IACvF,CAAC;IAEM,kBAAkB,CAAC,UAA0C;QAClE,yBAAyB;QACzB,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC3B,2DAA2D;YAC3D,MAAM,UAAU,GAAuB,IAAI,wEAAkB,EAAE,CAAC;YAChE,IAAI,CAAC,iBAAiB,GAAG,IAAI,2DAAS,CAAC,UAAU,CAAC,CAAC;YACnD,8DAA8D;YAC9D,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACzC;QACD,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAChC,CAAC;IAEM,iBAAiB;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1F,CAAC;IAEM,uBAAuB,CAAC,IAAY;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mCAAmC,GAAG,IAAI,CAAC,CAAC,IAAI,CACnE,0DAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAC7B,6DAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CACtC,CAAC;IACJ,CAAC;IAEM,sBAAsB;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,0CAA0C,CAAC,CAAC;IACvF,CAAC;IAEM,sBAAsB;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,2CAA2C,CAAC,CAAC;IAC3F,CAAC;IAEM,0BAA0B;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,8CAA8C,CAAC,CAAC;IAC5E,CAAC;IAED,2CAA2C;IACpC,kCAAkC,CAAC,mBAA+D;QACvG,OAAO,mBAAmB,CAAC,IAAI;QAC7B,iHAAiH;QACjH,6DAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAC7B,gEAAS,CAAC,IAAI,CAAC,EAAE;YACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,uDAAuD,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;QAC/F,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,MAAc;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,6CAA6C,GAAG,MAAM,CAAC,CAAC;IACnG,CAAC;IAED,qDAAqD;IACrD,iBAAiB,CAAC,MAAc;QAC9B,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,6CAA6C,GAAG,MAAM,CAAC,CAAC;QAEjH,OAAO,cAAc,CAAC,IAAI,CACxB,0DAAG,CAAC,CAAC,YAAY,EAAE,EAAE;YACnB,MAAM,YAAY,qBACb,YAAY,CAAC,OAAO,CACxB,CAAC;YACF,OAAO,YAAY,CAAC;QACtB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAA2B,4CAA4C,CAAC,CAAC;IAC/F,CAAC;IAED,+CAA+C;IACxC,8BAA8B;QACnC,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CACzB,gEAAS,CAAC,KAAK,CAAC,EAAE;YAChB,MAAM,gBAAgB,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBACxC,+EAA+E;gBAC/E,MAAM,QAAQ,GAAmC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAE3E,OAAO,0DAAa,CAAC;oBACnB,+CAAE,CAAC,IAAI,CAAC;oBACR,QAAQ;iBACT,CAAC,CAAC,IAAI,CACL,0DAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAA0C,EAAE,EAAE;oBAChE,OAAO,gCACF,QAAQ,KACX,IAAI,EAAE,IAAI,GACsB,CAAC;gBACrC,CAAC,CAAC,CACH,CAAC;YACJ,CAAC,CAAC,CAAC;YACH,OAAO,qDAAQ,CAAC,gBAAgB,CAAC,CAAC;QACpC,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEM,iBAAiB;QACtB,MAAM,aAAa,GAAG,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;QAEtD,OAAO,kDAAK,CACV,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,EAClC,aAAa,CACd,CAAC;IACJ,CAAC;IAEM,sBAAsB;QAC3B,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAE9C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC1C,CAAC;IAEM,0BAA0B;QAC/B,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAE9C,OAAO,+CAAE,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,4DAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7C,CAAC;IAEM,gBAAgB;QACrB,MAAM,OAAO,GAAG;YACd,UAAU,EAAE,SAAS;YACrB,SAAS,EAAE,SAAS;YACpB,MAAM,EAAE,0CAA0C;SACzB,CAAC;QAE5B,wDAAwD;QACxD,MAAM,OAAO,GAA0C,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE;YACtE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QAC/C,CAAC,CAAC;QAEF,wCAAwC;QACxC,OAAO,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;;8EAzJU,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU;;;;;;;;;;;;;;ACXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACD;;;;;;;;;AAU1C,MAAM,qBAAqB;IAIhC,YACU,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;IAC3B,CAAC;IAEL,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;QAExD,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;YACjC,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,4EAA4E,EAAE,cAAc,CAAC,CAAC;YAE1G,IAAI,cAAc,EAAE;gBAClB,cAAc,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE;oBACzC,MAAM,QAAQ,GAAuB,eAAe,CAAC,MAAM,CAAC,CAAC;oBAC7D,2CAA2C;oBAC3C,OAAO,CAAC,GAAG,CAAC,qGAAqG,GAAG,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,KAAK,EAAE,QAAQ,CAAC,CAAC;oBAC3L,IAAI,QAAQ,EAAE;wBACZ,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;qBAClC;gBACH,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,OAAO,CAAC,IAAI,CAAC,mDAAmD,CAAC,CAAC;aACnE;SACF;aAAM;YACL,OAAO,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;SACpD;IACH,CAAC;;0FA9BU,qBAAqB;qGAArB,qBAAqB;QCXlC,6EACE;QAAA,iFACE;QAAA,iFACE;QAAA,gFAA6E;QAC/E,4DAAc;QACd,4EACE;QAAA,uFACF;QAAA,4DAAY;QACd,4DAAc;QAChB,4DAAa;QAEb,iFACE;QAAA,6EACE;QAAA,oEACE;QAAA,kGAAsC;QAAA,qEAAG;QAAA,oEAAQ;QAAA,4DAAI;QAAC,wFACxD;QAAA,4DAAI;QACJ,8EACE;QAAA,8EACE;QAAA,0EACE;QAAA,uFACE;QAAA,yEAA2D;QAAA,2FAA+B;QAAA,4DAAK;QACjG,4DAAmB;QACrB,4DAAM;QACR,4DAAU;QACV,+EACE;QAAA,uFACE;QAAA,sEACF;QAAA,4DAAmB;QACrB,4DAAU;QACV,+EACE;QAAA,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,qEACE;QAAA,wDACF;QAAA,4DAAI;QACN,4DAAU;QACZ,4DAAU;QACZ,4DAAU;QACZ,4DAAc;;QArBD,2DAAwE;QAAxE,6NAAwE;QACzD,0DAAoB;QAApB,wIAAoB;QAMtB,0DAAoB;QAApB,wIAAoB;QAC/B,0DAA+B;QAA/B,8LAA+B;QAKpC,0DACF;QADE,4IACF;QAEE,0DACF;QADE,kJACF;;6FDxBK,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,iCAAiC;gBAC3C,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACF;AACU;AACV;AACyB;AAEL;AAC+B;AACX;AAC0B;AAErC;AACW;AACe;AAE9C;;;AAEtD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6EAAoB;KAChC;IACD;QACE,IAAI,EAAE,oBAAoB;QAC1B,SAAS,EAAE,iGAAqB;QAChC,OAAO,EAAE;YACP,IAAI,EAAE,uFAAgB;SACvB;KACF;IACD;QACE,IAAI,EAAE,wBAAwB;QAC9B,SAAS,EAAE,4GAAwB;QACnC,OAAO,EAAE;YACP,IAAI,EAAE,kGAAmB;SAC1B;KACF;IACD;QACE,IAAI,EAAE,6BAA6B;QACnC,SAAS,EAAE,2HAA6B;QACxC,OAAO,EAAE;YACP,IAAI,EAAE,iHAAwB;SAC/B;KACF;CACF,CAAC;AAuBK,MAAM,sBAAsB;;qGAAtB,sBAAsB;sKAAtB,sBAAsB,mBAPtB;QACT,uFAAgB;QAChB,kGAAmB;QACnB,iHAAwB;QACxB,kEAAe;KAChB,YAlBQ;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,8EAAgB;SACjB;mIAcU,sBAAsB,mBAZ/B,6EAAoB;QACpB,iGAAqB;QACrB,4GAAwB;QACxB,2HAA6B,aAV7B,4DAAY;QACZ,0DAAW;QACX,0DAAW,gEAEX,8EAAgB;6FAeP,sBAAsB;cArBlC,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAY;oBACZ,0DAAW;oBACX,0DAAW;oBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;oBAC7B,8EAAgB;iBACjB;gBACD,YAAY,EAAE;oBACZ,6EAAoB;oBACpB,iGAAqB;oBACrB,4GAAwB;oBACxB,2HAA6B;iBAC9B;gBACD,SAAS,EAAE;oBACT,uFAAgB;oBAChB,kGAAmB;oBACnB,iHAAwB;oBACxB,kEAAe;iBAChB;aACF;;;;;;;;;;;;;;AClED;AAAA;AAAA;AAAA;AAA2C;AAGc;;;AAMlD,MAAM,wBAAwB;IAEnC,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAG,CAAC;IAExD,OAAO;QACL,MAAM,UAAU,GAAmC,IAAI,CAAC,eAAe,CAAC,sBAAsB,EAAE,CAAC;QACjG,MAAM,SAAS,GAAkC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;QAErG,OAAO,SAAS,CAAC;IACnB,CAAC;;gGATU,wBAAwB;2GAAxB,wBAAwB,WAAxB,wBAAwB;6FAAxB,wBAAwB;cADpC,wDAAU;;;;;;;;;;;;;;ACRX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACb;AAEI;AAEpD,MAAM,UAAU;IAAvB;QACE,YAAO,GAAG,KAAK,CAAC;IAClB,CAAC;CAAA;AAEM,MAAM,SAAS;IAQpB,YAAoB,UAAa;QAAb,eAAU,GAAV,UAAU,CAAG;QAPjC,4GAA4G;QAC5G,8GAA8G;QAC9G,2CAA2C;QACnC,iBAAY,GAAG,CAAC,uEAAc,CAAC,QAAQ,IAAI,uEAAc,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,uEAAc,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAE5H,aAAQ,GAAkC,IAAI,kDAAa,CAAC,CAAC,CAAC,CAAC;IAElC,CAAC;IAEtC,gCAAgC;IAChC,sDAAsD;IACtD,6EAA6E;IACtE,MAAM,CAAC,WAAW,CAAI,cAA6B,EAAE,UAAa,EAAE,YAAY,GAAG,GAAG;QAC3F,MAAM,eAAe,GAAG,+CAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CACnC,4DAAK,CAAC,YAAY,CAAC,CACpB,CAAC;QAEF,gCAAgC;QAChC,wGAAwG;QACxG,OAAO,0DAAa,CAAC;YACnB,eAAe;YACf,cAAc;SACf,CAAC,CAAC,IAAI;QACL,iCAAiC;QACjC,0DAAG,CAAC,CAAC,CAAC,UAAU,EAAE,SAAS,CAAe,EAAoB,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;QAC5G,2CAA2C;QAC3C,gEAAS,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC,CACtD,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,oBAAmC,EAAE,YAAqB;QAC7D,gDAAgD;QAChD,MAAM,KAAK,GAAG,CAAC,OAAO,YAAY,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;QAEpF,IAAI,mBAAoC,CAAC;QAEzC,6CAA6C;QAC7C,IAAI,KAAK,KAAK,CAAC,EAAE;YACf,mBAAmB,GAAG,oBAAoB,CAAC;SAC5C;aAAM;YACL,mBAAmB,GAAG,SAAS,CAAC,WAAW,CAAC,oBAAoB,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SAC3F;QAED,mBAAmB;aAClB,SAAS,CAAC,CAAC,SAAyB,EAAE,EAAE;YACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAW,KAAK;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;IACtC,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;AC9D0C;AAEQ;AAEtB;AACa;AAEe;;;;AAGlD,MAAM,gBAAgB;IAG3B,YACU,eAAgC,EAChC,iBAAoC;QADpC,oBAAe,GAAf,eAAe,CAAiB;QAChC,sBAAiB,GAAjB,iBAAiB,CAAmB;IAC1C,CAAC;IAEC,aAAa;;YACjB,IAAI,CAAC,cAAc,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBACxD,OAAO,EAAE,aAAa;aACvB,CAAC,CAAC;YAEH,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;QACtC,CAAC;KAAA;IAEK,aAAa;;YACjB,IAAI,IAAI,CAAC,cAAc,EAAE;gBACvB,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;aACrC;QACH,CAAC;KAAA;IAED,OAAO;QACL,4BAA4B;QAE5B,2CAA2C;QAC3C,yDAAyD;QAEzD,kDAAkD;QAClD,yBAAyB;QAGzB,yBAAyB;QAEzB,2CAA2C;QAC3C,MAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,sBAAsB,EAAE,CAAC,IAAI,CACvE,+DAAQ,CAAC,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;YACtD,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,CAAC,CACH,CAAC;QAEF,MAAM,iBAAiB,GAAG,kDAAK,CAAC,GAAG,EAAE;YACnC,+CAA+C;YAC/C,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;YACpD,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,OAAO,cAAc,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,kDAAkD;QAClD,OAAO,iBAAiB,CAAC;IAC3B,CAAC;;gFAnDU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB;6FAAhB,gBAAgB;cAD5B,wDAAU;;;;;;;;;;;;;;ACTX;AAAA;AAAA;AAAA;AAA2C;AAGc;;;AAGlD,MAAM,mBAAmB;IAE9B,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAG,CAAC;IAExD,OAAO;QAEL,2CAA2C;QAC3C,MAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,sBAAsB,EAAE,CAAC;QAErE,yBAAyB;QAEzB,kFAAkF;QAClF,uCAAuC;QACvC,gCAAgC;QAChC,sBAAsB;QACtB,kBAAkB;QAElB,iFAAiF;QACjF,uDAAuD;QACvD,mCAAmC;QACnC,yBAAyB;QACzB,MAAM;QACN,qBAAqB;QAErB,6DAA6D;QAC7D,MAAM,iBAAiB,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACxD,OAAO,CAAC,cAAc,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;QACH,OAAO,iBAAiB,CAAC;IAC3B,CAAC;;sFA7BU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB;6FAAnB,mBAAmB;cAD/B,wDAAU;;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;;;;AAQnC,MAAM,oBAAoB;IAE/B,gBAAgB,CAAC;;wFAFN,oBAAoB;oGAApB,oBAAoB;QCRjC,6EACE;QAAA,iFACE;QAAA,iFACE;QAAA,6EAAmC;QACrC,4DAAc;QACd,4EACE;QAAA,uFACF;QAAA,4DAAY;QACd,4DAAc;QAChB,4DAAa;QAEb,iFACE;QAAA,6EACE;QAAA,oEACE;QAAA,8IACF;QAAA,4DAAI;QACJ,sEAAI;QAAA,oFAAwB;QAAA,4DAAK;QACjC,qEACE;QAAA,uKACF;QAAA,4DAAI;QACJ,qEACE;QAAA,8LACF;QAAA,4DAAI;QACJ,qEACE;QAAA,qEAAG;QAAA,8EAAkB;QAAA,4DAAI;QAAC,uJAC5B;QAAA,4DAAI;QACJ,iFAA8F;QAAA,8EAAkB;QAAA,4DAAa;QAC/H,4DAAU;QACV,8EACE;QAAA,sEAAI;QAAA,wFAA4B;QAAA,4DAAK;QACrC,qEACE;QAAA,uRACF;QAAA,4DAAI;QACJ,qEACE;QAAA,qEAAG;QAAA,8EAAkB;QAAA,4DAAI;QAAC,+LAC5B;QAAA,4DAAI;QACJ,iFAAkG;QAAA,kFAAsB;QAAA,4DAAa;QACvI,4DAAU;QACV,8EACE;QAAA,sEAAI;QAAA,uFAA2B;QAAA,4DAAK;QACpC,qEACE;QAAA,0EAAa;QAAA,wEAAM;QAAA,qEAAS;QAAA,4DAAO;QAAC,oLACtC;QAAA,4DAAI;QACJ,qEACE;QAAA,gIAAmE;QAAA,wEAAM;QAAA,qEAAS;QAAA,4DAAO;QAAC,sEAC5F;QAAA,4DAAI;QACJ,qEACE;QAAA,qEAAG;QAAA,8EAAkB;QAAA,4DAAI;QAAC,qMAC5B;QAAA,4DAAI;QACJ,iFAAuG;QAAA,uFAA2B;QAAA,4DAAa;QACjJ,4DAAU;QACZ,4DAAc;;QAzBiB,2DAAkE;QAAlE,6IAAkE;QAUlE,2DAAsE;QAAtE,6IAAsE;QAatE,2DAA2E;QAA3E,6IAA2E;;6FDzC7F,oBAAoB;cANhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,iCAAiC;gBAC3C,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACD;;;;;;;ICe7C,wEACE;IAAA,yEACE;IAAA,yEAA2B;IAC3B,oEACE;IAAA,oEAAG;IAAA,2HAAgE;IAAA,4DAAI;IACzE,4DAAI;IACN,4DAAM;IACR,qEAAe;;;;;;IACf,wEACE;IAAA,6EACE;IAAA,6EACE;IAAA,yEACE;IAAA,uFACE;IAAA,yEAA2D;IAAA,0FAA+B;IAAA,4DAAK;IACjG,4DAAmB;IACrB,4DAAM;IACR,4DAAU;IACV,8EACE;IAAA,uFACE;IAAA,qEACF;IAAA,4DAAmB;IACrB,4DAAU;IACV,+EACE;IAAA,0EACE;IAAA,wDACF;IAAA,4DAAK;IACL,qEACE;IAAA,wDACF;IAAA,4DAAI;IACN,4DAAU;IACZ,4DAAU;IACZ,qEAAe;;;IApBJ,0DAAwE;IAAxE,mOAAwE;IACzD,0DAAoB;IAApB,wIAAoB;IAMtB,0DAAoB;IAApB,wIAAoB;IAC/B,0DAA+B;IAA/B,oMAA+B;IAKpC,0DACF;IADE,kJACF;IAEE,0DACF;IADE,wJACF;;ADjCH,MAAM,wBAAwB;IAInC,YACU,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;IAC3B,CAAC;IAEL,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;QAE5D,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;YACjC,gDAAgD;YAChD,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YAC1C,OAAO,CAAC,GAAG,CAAC,mFAAmF,EAAE,iBAAiB,CAAC,CAAC;YAEpH,IAAI,iBAAiB,EAAE;gBACrB,iBAAiB,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;oBACzC,MAAM,cAAc,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;oBAC5C,OAAO,CAAC,GAAG,CAAC,sFAAsF,EAAE,cAAc,CAAC,CAAC;oBAEpH,IAAI,cAAc,EAAE;wBAClB,cAAc,CAAC,SAAS,CAAC,eAAe,CAAC,EAAE;4BACzC,MAAM,QAAQ,GAAuB,eAAe,CAAC;4BACrD,2CAA2C;4BAC3C,OAAO,CAAC,GAAG,CAAC,yGAAyG,GAAG,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,KAAK,EAAE,QAAQ,CAAC,CAAC;4BAC/L,IAAI,QAAQ,EAAE;gCACZ,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;6BAClC;wBACH,CAAC,CAAC,CAAC;qBACJ;yBAAM;wBACL,OAAO,CAAC,IAAI,CAAC,gEAAgE,CAAC,CAAC;qBAChF;gBACH,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,OAAO,CAAC,IAAI,CAAC,sDAAsD,CAAC,CAAC;aACtE;SACF;aAAM;YACL,OAAO,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;SACpD;IACH,CAAC;;gGAxCU,wBAAwB;wGAAxB,wBAAwB;QCXrC,6EACE;QAAA,iFACE;QAAA,iFACE;QAAA,gFAA6E;QAC/E,4DAAc;QACd,4EACE;QAAA,2FACF;QAAA,4DAAY;QACd,4DAAc;QAChB,4DAAa;QAEb,iFACE;QAAA,6EACE;QAAA,oEACE;QAAA,8OACF;QAAA,4DAAI;QACJ,wIACE;QAOF,0IACE;QAuBJ,4DAAU;QACZ,4DAAc;;QAjCI,2DAAyB;QAAzB,uFAAyB;QAQzB,0DAAwB;QAAxB,sFAAwB;;6FDb7B,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qCAAqC;gBAC/C,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AAE1C,MAAM,kBAAmB,SAAQ,4DAAU;IAMhD;QACE,KAAK,EAAE,CAAC;IACV,CAAC;CACF;AAEM,MAAM,sBAAuB,SAAQ,4DAAU;IAMpD;QACE,KAAK,EAAE,CAAC;IACV,CAAC;CACF;AAEM,MAAM,oBAAqB,SAAQ,4DAAU;IAMlD;QACE,KAAK,EAAE,CAAC;IACV,CAAC;CACF;AAEM,MAAM,iBAAkB,SAAQ,4DAAU;IAK/C;QACE,KAAK,EAAE,CAAC;IACV,CAAC;CACF;AAEM,MAAM,iBAAkB,SAAQ,4DAAU;IAM/C;QACE,KAAK,EAAE,CAAC;IACV,CAAC;CACF;AAEM,MAAM,kBAAmB,SAAQ,4DAAU;IAOhD;QACE,KAAK,EAAE,CAAC;IACV,CAAC;CACF;AAEM,MAAM,oBAAqB,SAAQ,4DAAU;IAKlD;QACE,KAAK,EAAE,CAAC;IACV,CAAC;CACF;AAEM,MAAM,6BAA8B,SAAQ,iBAAiB;IAGlE;QACE,KAAK,EAAE,CAAC;IACV,CAAC;CACF;;;;;;;;;;;;;ACpFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACD;AAIN;;;;;;;;;AAOpC,MAAM,6BAA6B;IAIxC,YAAoB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAE9C,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,mDAAmD,CAAC,CAAC;QAEjE,IAAI,CAAC,KAAK,CAAC,IAAI;aACd,IAAI;QACH,6BAA6B;QAC7B,gEAAS,CAAC,CAAC,iBAAiB,EAAE,EAAE,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAClE;aACA,SAAS,CAAC,CAAC,KAAU,EAAE,EAAE;YACxB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;;0GAjBU,6BAA6B;6GAA7B,6BAA6B;QCZ1C,6EACE;QAAA,iFACE;QAAA,iFACE;QAAA,gFAA6E;QAC/E,4DAAc;QACd,4EACE;QAAA,uFACF;QAAA,4DAAY;QACd,4DAAc;QAChB,4DAAa;QAEb,iFACE;QAAA,6EACE;QAAA,6EACE;QAAA,6EACE;QAAA,sFACE;QAAA,uFACE;QAAA,yEAA2D;QAAA,2FAA+B;QAAA,4DAAK;QACjG,4DAAmB;QACrB,4DAAkB;QACpB,4DAAU;QACV,+EACE;QAAA,uFACE;QAAA,kFAA8G;QAChH,4DAAmB;QACrB,4DAAU;QACV,+EACE;QAAA,0EACE;QAAA,iFAAkE;QACpE,4DAAK;QACL,qEACE;QAAA,iFAAuG;QACzG,4DAAI;QACN,4DAAU;QACZ,4DAAU;QACZ,4DAAU;QACZ,4DAAc;;QArBmD,2DAAmB;QAAnB,4EAAmB;QACxD,0DAAoB;QAApB,wIAAoB;QAMtB,0DAAoB;QAApB,yIAAoB;QACC,0DAA+B;QAA/B,iIAA+B;QAKpD,0DAAgC;QAAhC,kIAAgC;QAGD,0DAAsC;QAAtC,wIAAsC;;6FDnBlF,6BAA6B;cALzC,uDAAS;eAAC;gBACT,QAAQ,EAAE,0CAA0C;gBACpD,WAAW,EAAE,yCAAyC;gBACtD,SAAS,EAAE,CAAC,yCAAyC,CAAC;aACvD","file":"route-resolvers-ux-route-resolvers-ux-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, combineLatest, of, forkJoin, ReplaySubject, merge } from 'rxjs';\nimport { delay, finalize, tap, map, filter, concatMap } from 'rxjs/operators';\n// tslint:disable-next-line:max-line-length\nimport { ShowcaseShellModel, ShowcasePostModel, ShowcaseCommentModel, ShowcaseCombinedTaskUserModel, ShowcaseUser2Model, ShowcaseTaskModel, ShowcaseShellUserModel, ShowcaseCompanyModel } from './showcase-shell.model';\nimport { DataStore, ShellModel } from '../shell/data-store';\nimport { TravelListingModel } from '../travel/listing/travel-listing.model';\nimport { FashionListingModel } from '../fashion/listing/fashion-listing.model';\n\n@Injectable()\nexport class ShowcaseService {\n  private showcaseDataStore: DataStore<ShowcaseShellModel>;\n  private openDataStream: ReplaySubject<Array<ShowcaseShellUserModel>> = new ReplaySubject<Array<ShowcaseShellUserModel>>();\n\n  constructor(private http: HttpClient) { }\n\n  public getDataSourceWithDelay(): Observable<ShowcaseShellModel> {\n    return this.http.get<ShowcaseShellModel>('./assets/sample-data/showcase/shell.json').pipe(\n      tap(val => {\n        console.log('getData STARTED');\n        // tslint:disable-next-line:no-console\n        console.time('getData Roundtrip');\n      }),\n      delay(5000),\n      finalize(() => {\n        console.log('getData COMPLETED');\n        // tslint:disable-next-line:no-console\n        console.timeEnd('getData Roundtrip');\n      }));\n  }\n\n  public getSimpleDataSource(): Observable<ShowcaseShellModel> {\n    return this.http.get<ShowcaseShellModel>('./assets/sample-data/showcase/shell.json');\n  }\n\n  public getSimpleDataStore(dataSource: Observable<ShowcaseShellModel>): DataStore<ShowcaseShellModel> {\n    // Use cache if available\n    if (!this.showcaseDataStore) {\n      // Initialize the model specifying that it is a shell model\n      const shellModel: ShowcaseShellModel = new ShowcaseShellModel();\n      this.showcaseDataStore = new DataStore(shellModel);\n      // Trigger the loading mechanism (with shell) in the dataStore\n      this.showcaseDataStore.load(dataSource);\n    }\n    return this.showcaseDataStore;\n  }\n\n  public getListDataSource(): Observable<any> {\n    return this.http.get('https://reqres.in/api/users').pipe(map(result => result['data']));\n  }\n\n  public getPaginationDataSource(page: number): Observable<any> {\n    return this.http.get('https://reqres.in/api/users?page=' + page).pipe(\n      map(result => result['data']),\n      filter(results => results.length > 0)\n    );\n  }\n\n  public getMultipleDataSourceA(): Observable<TravelListingModel> {\n    return this.http.get<TravelListingModel>('./assets/sample-data/travel/listing.json');\n  }\n\n  public getMultipleDataSourceB(): Observable<FashionListingModel> {\n      return this.http.get<FashionListingModel>('./assets/sample-data/fashion/listing.json');\n  }\n\n  public getDependantDataSourcePost(): Observable<ShowcasePostModel> {\n    return this.http.get<any>('https://jsonplaceholder.typicode.com/posts/1');\n  }\n\n  // tslint:disable-next-line:max-line-length\n  public getDependantDataSourcePostComments(dependantDataSource: Observable<ShowcasePostModel & ShellModel>): Observable<Array<ShowcaseCommentModel>> {\n    return dependantDataSource.pipe(\n      // Filter user values that are not shells. We need to add this filter if using the combinedUserDataStore timeline\n      filter(post => !post.isShell),\n      concatMap(post => {\n        return this.http.get<any>('https://jsonplaceholder.typicode.com/comments?postId=' + post.id);\n      })\n    );\n  }\n\n  getUser(userId: number): Observable<ShowcaseUser2Model> {\n    return this.http.get<ShowcaseUser2Model>('https://jsonplaceholder.typicode.com/users/' + userId);\n  }\n\n  // get the company details, a subset of the user data\n  getUserSubsetData(userId: number): Observable<ShowcaseCompanyModel> {\n    const dataObservable = this.http.get<ShowcaseUser2Model>('https://jsonplaceholder.typicode.com/users/' + userId);\n\n    return dataObservable.pipe(\n      map((jsonResponse) => {\n        const filteredData: ShowcaseCompanyModel = {\n          ...jsonResponse.company\n        };\n        return filteredData;\n      })\n    );\n  }\n\n  getTasks(): Observable<Array<ShowcaseTaskModel>> {\n    return this.http.get<Array<ShowcaseTaskModel>>('https://jsonplaceholder.typicode.com/todos');\n  }\n\n  // Concat the task with the details of the user\n  public getCombinedTasksUserDataSource(): Observable<Array<ShowcaseCombinedTaskUserModel>> {\n    return this.getTasks().pipe(\n      concatMap(tasks => {\n        const completeTaskData = tasks.map(task => {\n          // for each task retrun a new observable with the ShowcaseCombinedTaskUserModel\n          const taskUser: Observable<ShowcaseUser2Model> = this.getUser(task.userId);\n\n          return combineLatest([\n            of(task),\n            taskUser\n          ]).pipe(\n            map(([taskData, user]: [ShowcaseTaskModel, ShowcaseUser2Model]) => {\n              return {\n                ...taskData,\n                user: user\n              } as ShowcaseCombinedTaskUserModel;\n            })\n          );\n        });\n        return forkJoin(completeTaskData);\n      })\n    );\n  }\n\n  public getOpenDataStream(): Observable<Array<ShowcaseShellUserModel>> {\n    const firstLoadData = this.getPaginationDataSource(1);\n\n    return merge(\n      this.openDataStream.asObservable(),\n      firstLoadData\n    );\n  }\n\n  public pushValuesToOpenStream(): void {\n    const stackedValues = this.getStackedValues();\n\n    this.openDataStream.next(stackedValues);\n  }\n\n  public getStackedValuesDataSource(): Observable<Array<ShowcaseShellUserModel>> {\n    const stackedValues = this.getStackedValues();\n\n    return of(stackedValues).pipe(delay(3000));\n  }\n\n  public getStackedValues(): Array<ShowcaseShellUserModel> {\n    const newUser = {\n      first_name: 'Agustin',\n      last_name: 'Nitsuga',\n      avatar: './assets/sample-images/user/person_1.jpg'\n    } as ShowcaseShellUserModel;\n\n    // Get a random integer between 1 (and only 1) and 'max'\n    const getRand: (max: number, min?: number) => number = (max, min = 1) => {\n      return Math.floor(Math.random() * max) + min;\n    };\n\n    // Randomly send one, two or three users\n    return Array(getRand(3)).fill(newUser);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// You can also use a Class object as a shell model\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\n\n@Component({\n  selector: 'app-showcase-blocking-resolvers',\n  templateUrl: './blocking-resolvers.page.html',\n  styleUrls: ['./blocking-resolvers.page.scss']\n})\nexport class BlockingResovlersPage implements OnInit {\n  // We will assign data coming from the Route Resolver to this property\n  routeResolveData: ShowcaseShellModel;\n\n  constructor(\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    console.log('Showcase Blocking Resovlers - ngOnInit()');\n\n    if (this.route && this.route.data) {\n      const dataObservable = this.route.data;\n      console.log('Showcase Blocking Resovlers - Route Resolve Observable => dataObservable: ', dataObservable);\n\n      if (dataObservable) {\n        dataObservable.subscribe(observableValue => {\n          const pageData: ShowcaseShellModel = observableValue['data'];\n          // tslint:disable-next-line:max-line-length\n          console.log('Showcase Blocking Resovlers - Subscribe to dataObservable (will emmit just one value) => PageData (' + ((pageData && pageData.isShell) ? 'SHELL' : 'REAL') + '): ', pageData);\n          if (pageData) {\n            this.routeResolveData = pageData;\n          }\n        });\n      } else {\n        console.warn('No dataObservable coming from Route Resolver data');\n      }\n    } else {\n      console.warn('No data coming from Route Resolver');\n    }\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"showcase/route-resolvers-ux\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      Blocking Resovler Showcase\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\">\n    <p>\n      Notice how the UX degrades when using <b>Blocking</b> Route Resolvers in Angular\n    </p>\n    <ion-row style=\"background-color: #FFF; padding: 10px;\">\n      <ion-col size=\"12\">\n        <div [ngStyle]=\"{'background-image': 'url(' + routeResolveData?.cover + ')'}\" style=\"background-size: cover; background-repeat: no-repeat;\">\n          <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\n            <h4 style=\"margin: 10px; text-align: center; color: #FFF;\">Heading on top of a cover image</h4>\n          </app-aspect-ratio>\n        </div>\n      </ion-col>\n      <ion-col size=\"4\">\n        <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n          <img [src]=\"routeResolveData?.image\" alt=\"Sample Image\" style=\"width: 100%; height: 100%;\"/>\n        </app-aspect-ratio>\n      </ion-col>\n      <ion-col size=\"8\">\n        <h3 style=\"margin-top: 0px;\">\n          {{ routeResolveData?.title }}\n        </h3>\n        <p>\n          {{ routeResolveData?.description }}\n        </p>\n      </ion-col>\n    </ion-row>\n  </section>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { RouteResovlersUXPage } from './route-resolvers-ux.page';\nimport { NonBlockingResolversPage } from './non-blocking-resolvers/non-blocking-resolvers.page';\nimport { BlockingResovlersPage } from './blocking-resolvers/blocking-resolvers.page';\nimport { ProgressiveShellResovlersPage } from './progressive-shell-resolvers/progressive-shell-resolvers.page';\n\nimport { BlockingResolver } from './blocking-resolvers/blocking.resolver';\nimport { NonBlockingResolver } from './non-blocking-resolvers/non-blocking.resolver';\nimport { ProgressiveShellResolver } from './progressive-shell-resolvers/progressive-shell.resolver';\n\nimport { ShowcaseService } from '../showcase.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RouteResovlersUXPage\n  },\n  {\n    path: 'blocking-resolvers',\n    component: BlockingResovlersPage,\n    resolve: {\n      data: BlockingResolver\n    }\n  },\n  {\n    path: 'non-blocking-resolvers',\n    component: NonBlockingResolversPage,\n    resolve: {\n      data: NonBlockingResolver\n    }\n  },\n  {\n    path: 'progressive-shell-resolvers',\n    component: ProgressiveShellResovlersPage,\n    resolve: {\n      data: ProgressiveShellResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule\n  ],\n  declarations: [\n    RouteResovlersUXPage,\n    BlockingResovlersPage,\n    NonBlockingResolversPage,\n    ProgressiveShellResovlersPage\n  ],\n  providers: [\n    BlockingResolver,\n    NonBlockingResolver,\n    ProgressiveShellResolver,\n    ShowcaseService\n  ]\n})\nexport class RouteResolversUXModule {}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { ShowcaseService } from '../../showcase.service';\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\nimport { Observable } from 'rxjs';\nimport { DataStore } from '../../../shell/data-store';\n\n@Injectable()\nexport class ProgressiveShellResolver implements Resolve<any> {\n\n  constructor(private showcaseService: ShowcaseService) {}\n\n  resolve() {\n    const dataSource: Observable<ShowcaseShellModel> = this.showcaseService.getDataSourceWithDelay();\n    const dataStore: DataStore<ShowcaseShellModel> = this.showcaseService.getSimpleDataStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { Observable, of, combineLatest, ReplaySubject } from 'rxjs';\nimport { delay, map, startWith } from 'rxjs/operators';\n\nimport { AppShellConfig } from './config/app-shell.config';\n\nexport class ShellModel {\n  isShell = false;\n}\n\nexport class DataStore<T> {\n  // We wait on purpose 2 secs on local environment when fetching from json to simulate the backend roundtrip.\n  // However, in production you should set this delay to 0 in the assets/config/app-shell.config.prod.json file.\n  // tslint:disable-next-line:max-line-length\n  private networkDelay = (AppShellConfig.settings && AppShellConfig.settings.networkDelay) ? AppShellConfig.settings.networkDelay : 0;\n\n  private timeline: ReplaySubject<T & ShellModel> = new ReplaySubject(1);\n\n  constructor(private shellModel: T) { }\n\n  // Static function with generics\n  // (ref: https://stackoverflow.com/a/24293088/1116959)\n  // Append a shell (T & ShellModel) to every value (T) emmited to the timeline\n  public static AppendShell<T>(dataObservable: Observable<T>, shellModel: T, networkDelay = 400): Observable<T & ShellModel> {\n    const delayObservable = of(true).pipe(\n      delay(networkDelay)\n    );\n\n    // Assign shell flag accordingly\n    // (ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n    return combineLatest([\n      delayObservable,\n      dataObservable\n    ]).pipe(\n      // Dismiss unnecessary delayValue\n      map(([delayValue, dataValue]: [boolean, T]): (T & ShellModel) => Object.assign(dataValue, {isShell: false})),\n      // Set the shell model as the initial value\n      startWith(Object.assign(shellModel, {isShell: true}))\n    );\n  }\n\n  load(dataSourceObservable: Observable<T>, networkDelay?: number): void {\n    // tslint:disable-next-line:no-shadowed-variable\n    const delay = (typeof networkDelay === 'number') ? networkDelay : this.networkDelay;\n\n    let processedDataSource: Observable<any>;\n\n    // If no network delay, then don't show shell\n    if (delay === 0) {\n      processedDataSource = dataSourceObservable;\n    } else {\n      processedDataSource = DataStore.AppendShell(dataSourceObservable, this.shellModel, delay);\n    }\n\n    processedDataSource\n    .subscribe((dataValue: T & ShellModel) => {\n      this.timeline.next(dataValue);\n    });\n  }\n\n  public get state(): Observable<T & ShellModel> {\n    return this.timeline.asObservable();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\n\nimport { defer } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { ShowcaseService } from '../../showcase.service';\n\n@Injectable()\nexport class BlockingResolver implements Resolve<any> {\n  private loadingElement: any;\n\n  constructor(\n    private showcaseService: ShowcaseService,\n    private loadingController: LoadingController\n  ) { }\n\n  async presentLoader() {\n    this.loadingElement = await this.loadingController.create({\n      message: 'Loading ...'\n    });\n\n    await this.loadingElement.present();\n  }\n\n  async dismissLoader() {\n    if (this.loadingElement) {\n      await this.loadingElement.dismiss();\n    }\n  }\n\n  resolve() {\n    // WITHOUT LOADING INDICATOR\n\n    // Base Observable (where we get data from)\n    // const dataObservable = this.showcaseService.getData();\n\n    // Basic Resolver that returns the base Observable\n    // return dataObservable;\n\n\n    // WITH LOADING INDICATOR\n\n    // Base Observable (where we get data from)\n    const dataObservable = this.showcaseService.getDataSourceWithDelay().pipe(\n      finalize(() => {\n        console.log('dataObservable COMPLETED - HIDE LOADER');\n        this.dismissLoader();\n      })\n    );\n\n    const deferedObservable = defer(() => {\n      // Will be logged at the moment of subscription\n      console.log('dataObservable STARTED - SHOW LOADER');\n      this.presentLoader();\n      return dataObservable;\n    });\n\n    // Basic Resolver that returns the base Observable\n    return deferedObservable;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { ShowcaseService } from '../../showcase.service';\n\n@Injectable()\nexport class NonBlockingResolver implements Resolve<any> {\n\n  constructor(private showcaseService: ShowcaseService) {}\n\n  resolve() {\n\n    // Base Observable (where we get data from)\n    const dataObservable = this.showcaseService.getDataSourceWithDelay();\n\n    // NON-BLOCKING RESOLVERS\n\n    // Resolver using a ReplySubject that emits the base Observable and then completes\n    // const subject = new ReplaySubject();\n    // subject.next(dataObservable);\n    // subject.complete();\n    // return subject;\n\n    // Resolver using an Observable that emits the base Observable and then completes\n    // const observable = Observable.create((observer) => {\n    //   observer.next(dataObservable);\n    //   observer.complete();\n    // });\n    // return observable;\n\n    // Resolver using a Promise that resolves the base Observable\n    const observablePromise = new Promise((resolve, reject) => {\n      resolve(dataObservable);\n    });\n    return observablePromise;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-showcase-route-resolvers-ux',\n  templateUrl: './route-resolvers-ux.page.html',\n  styleUrls: ['./route-resolvers-ux.page.scss']\n})\n\nexport class RouteResovlersUXPage {\n\n  constructor() { }\n\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>\n      Improve Route Resolvers UX\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\">\n    <p>\n      Lets see the difference between the different implementations of Route Resolvers.\n    </p>\n    <h5>Blocking Route Resolvers</h5>\n    <p>\n      By default, Angular Route Resolvers won't transition to the page until the Resolver Observable completes.\n    </p>\n    <p>\n      Let's suppose the backend is slow and takes 5 seconds to fetch data and return it to the client, this is what's going to happen.\n    </p>\n    <p>\n      <b>Expected behavior:</b> Page transition will be delayed 5 seconds until the server sends data back to the client.\n    </p>\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/blocking-resolvers']\">Blocking Resolvers</ion-button>\n  </section>\n  <section class=\"showcase-section\">\n    <h5>NON-Blocking Route Resolvers</h5>\n    <p>\n      To avoid waiting for the Observable to complete, we can wrap the base Observable (the one we are getting data from) with a dummy Observable, Subject or Promise that emits the base Observable and immediately completes.\n    </p>\n    <p>\n      <b>Expected behavior:</b> Page transition will be instant and the transitioned page will show a blank state while the server sends data back to the client.\n    </p>\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/non-blocking-resolvers']\">Non-Blocking Resolvers</ion-button>\n  </section>\n  <section class=\"showcase-section\">\n    <h5>Progressive Shell Resolvers</h5>\n    <p>\n      By using the <code>DataStore</code> utility in conjunction with Angular Route Resolvers, we can solve this UX problem and make page transitions immediate.\n    </p>\n    <p>\n      This approach uses a non-blocking Resolver in conjunction with the <code>DataStore</code> utility.\n    </p>\n    <p>\n      <b>Expected behavior:</b> Page transition will be instant and the transitioned page will show some shell elements while the server sends data back to the client.\n    </p>\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/progressive-shell-resolvers']\">Progressive Shell Resolvers</ion-button>\n  </section>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// You can also use a Class object as a shell model\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\n\n@Component({\n  selector: 'app-showcase-non-blocking-resolvers',\n  templateUrl: './non-blocking-resolvers.page.html',\n  styleUrls: ['./non-blocking-resolvers.page.scss']\n})\nexport class NonBlockingResolversPage implements OnInit {\n  // We will assign data coming from the Route Resolver to this property\n  routeResolveData: ShowcaseShellModel;\n\n  constructor(\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    console.log('Showcase NON Blocking Resovlers - ngOnInit()');\n\n    if (this.route && this.route.data) {\n      // We resolved a promise for the data Observable\n      const promiseObservable = this.route.data;\n      console.log('Showcase NON Blocking Resovlers - Route Resolve Observable => promiseObservable: ', promiseObservable);\n\n      if (promiseObservable) {\n        promiseObservable.subscribe(promiseValue => {\n          const dataObservable = promiseValue['data'];\n          console.log('Showcase NON Blocking Resovlers - Subscribe to promiseObservable => dataObservable: ', dataObservable);\n\n          if (dataObservable) {\n            dataObservable.subscribe(observableValue => {\n              const pageData: ShowcaseShellModel = observableValue;\n              // tslint:disable-next-line:max-line-length\n              console.log('Showcase NON Blocking Resovlers - Subscribe to dataObservable (will emmit just one value) => PageData (' + ((pageData && pageData.isShell) ? 'SHELL' : 'REAL') + '): ', pageData);\n              if (pageData) {\n                this.routeResolveData = pageData;\n              }\n            });\n          } else {\n            console.warn('No dataObservable coming from Route Resolver promiseObservable');\n          }\n        });\n      } else {\n        console.warn('No promiseObservable coming from Route Resolver data');\n      }\n    } else {\n      console.warn('No data coming from Route Resolver');\n    }\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"showcase/route-resolvers-ux\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      NON Blocking Resovler Showcase\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\">\n    <p>\n      With Non-Blocking Resolvers, page transition is immediate. However UX degrades because you are showing a static loading indicator while the server sends data back to the client.\n    </p>\n    <ng-container *ngIf=\"!routeResolveData\">\n      <div style=\"margin: 20px 40px; text-align: center;\">\n        <ion-spinner></ion-spinner>\n        <p>\n          <b>You can show a static shell while fetching data from the backend</b>\n        </p>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"routeResolveData\">\n      <ion-row style=\"background-color: #FFF; padding: 10px;\">\n        <ion-col size=\"12\">\n          <div [ngStyle]=\"{'background-image': 'url(' + routeResolveData?.cover + ')'}\" style=\"background-size: cover; background-repeat: no-repeat;\">\n            <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\n              <h4 style=\"margin: 10px; text-align: center; color: #FFF;\">Heading on top of a cover image</h4>\n            </app-aspect-ratio>\n          </div>\n        </ion-col>\n        <ion-col size=\"4\">\n          <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n            <img [src]=\"routeResolveData?.image\" alt=\"Sample Image\" style=\"width: 100%; height: 100%;\"/>\n          </app-aspect-ratio>\n        </ion-col>\n        <ion-col size=\"8\">\n          <h3 style=\"margin-top: 0px;\">\n            {{ routeResolveData?.title }}\n          </h3>\n          <p>\n            {{ routeResolveData?.description }}\n          </p>\n        </ion-col>\n      </ion-row>\n    </ng-container>\n  </section>\n</ion-content>\n","import { ShellModel } from '../shell/data-store';\n\nexport class ShowcaseShellModel extends ShellModel {\n  cover: string;\n  image: string;\n  title: string;\n  description: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseShellUserModel extends ShellModel {\n  email: string;\n  first_name: string;\n  last_name: string;\n  avatar: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseCommentModel extends ShellModel {\n  postId: number;\n  name: string;\n  email: string;\n  body: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcasePostModel extends ShellModel {\n  id: number;\n  title: string;\n  body: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseTaskModel extends ShellModel {\n  id: number;\n  userId: number;\n  title: string;\n  completed: boolean;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseUser2Model extends ShellModel {\n  id: number;\n  name: string;\n  email: string;\n  username: string;\n  company?: ShowcaseCompanyModel;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseCompanyModel extends ShellModel {\n  catchPhrase: string;\n  name: string;\n  bs: string;\n\n  constructor() {\n    super();\n  }\n}\n\nexport class ShowcaseCombinedTaskUserModel extends ShowcaseTaskModel {\n  user: ShowcaseUser2Model;\n\n  constructor() {\n    super();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// You can also use a Class object as a shell model\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-showcase-progressive-shell-resolvers',\n  templateUrl: './progressive-shell-resolvers.page.html',\n  styleUrls: ['./progressive-shell-resolvers.page.scss']\n})\nexport class ProgressiveShellResovlersPage implements OnInit {\n  // We will assign data coming from the Route Resolver to this property\n  routeResolveData: ShowcaseShellModel;\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    console.log('Showcase Progressive Shell Resovlers - ngOnInit()');\n\n    this.route.data\n    .pipe(\n      // Extract data for this page\n      switchMap((resolvedRouteData) => resolvedRouteData['data'].state)\n    )\n    .subscribe((state: any) => {\n      this.routeResolveData = state;\n    }, (error) => console.log(error));\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"showcase/route-resolvers-ux\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      Progressive Shell Showcase\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\">\n    <ion-row style=\"background-color: #FFF; padding: 10px;\">\n      <ion-col size=\"12\">\n        <app-image-shell class=\"add-overlay\" animation=\"spinner\" [display]=\"'cover'\" [src]=\"routeResolveData?.cover\" [alt]=\"'Sample Image Cover'\">\n          <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\n            <h4 style=\"margin: 10px; text-align: center; color: #FFF;\">Heading on top of a cover image</h4>\n          </app-aspect-ratio>\n        </app-image-shell>\n      </ion-col>\n      <ion-col size=\"4\">\n        <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n          <app-image-shell animation=\"spinner\" [src]=\"routeResolveData?.image\" [alt]=\"'Sample Image'\"></app-image-shell>\n        </app-aspect-ratio>\n      </ion-col>\n      <ion-col size=\"8\">\n        <h3 style=\"margin-top: 0px;\">\n          <app-text-shell [data]=\"routeResolveData?.title\"></app-text-shell>\n        </h3>\n        <p>\n          <app-text-shell animation=\"bouncing\" lines=\"3\" [data]=\"routeResolveData?.description\"></app-text-shell>\n        </p>\n      </ion-col>\n    </ion-row>\n  </section>\n</ion-content>\n"],"sourceRoot":"webpack:///"}