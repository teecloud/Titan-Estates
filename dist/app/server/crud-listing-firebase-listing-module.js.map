{"version":3,"sources":["./src/app/firebase/crud/listing/firebase-listing.module.ts","./src/app/firebase/crud/listing/firebase-listing.page.ts","./src/app/firebase/crud/listing/firebase-listing.page.html","./src/app/firebase/crud/listing/firebase-listing.resolver.ts"],"names":[],"mappings":"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","file":"crud-listing-firebase-listing-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { FirebaseListingPage } from './firebase-listing.page';\nimport { FirebaseListingResolver } from './firebase-listing.resolver';\nimport { ComponentsModule } from '../../../components/components.module';\nimport { FirebaseCrudService } from '../firebase-crud.service';\nimport { FirebaseCrudSharedModule } from '../firebase-crud-shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FirebaseListingPage,\n    resolve: {\n      data: FirebaseListingResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ComponentsModule,\n    RouterModule.forChild(routes),\n    FirebaseCrudSharedModule\n  ],\n  declarations: [\n    FirebaseListingPage\n  ],\n  providers: [\n    FirebaseCrudService,\n    FirebaseListingResolver\n  ]\n})\nexport class FirebaseListingPageModule {}\n","import { Component, OnInit, OnDestroy, HostBinding } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ModalController, IonRouterOutlet } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Observable, ReplaySubject, Subscription, merge } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\n\nimport { FirebaseListingItemModel } from './firebase-listing.model';\nimport { FirebaseCreateUserModal } from '../user/create/firebase-create-user.modal';\nimport { DataStore, ShellModel } from '../../../../app/shell/data-store';\nimport { FirebaseCrudService } from '../firebase-crud.service';\n\n\n@Component({\n  selector: 'app-firebase-listing',\n  templateUrl: './firebase-listing.page.html',\n  styleUrls: [\n    './styles/firebase-listing.page.scss',\n    './styles/firebase-listing.ios.scss',\n    './styles/firebase-listing.shell.scss'\n  ],\n})\nexport class FirebaseListingPage implements OnInit, OnDestroy {\n  rangeForm: FormGroup;\n  searchQuery: string;\n  showAgeFilter = false;\n\n  searchSubject: ReplaySubject<any> = new ReplaySubject<any>(1);\n  searchFiltersObservable: Observable<any> = this.searchSubject.asObservable();\n\n  listingDataStore: DataStore<Array<FirebaseListingItemModel>>;\n  stateSubscription: Subscription;\n\n  // Use Typescript intersection types to enable docorating the Array of firebase models with a shell model\n  // (ref: https://www.typescriptlang.org/docs/handbook/advanced-types.html#intersection-types)\n  items: Array<FirebaseListingItemModel> & ShellModel;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.items && this.items.isShell) ? true : false;\n  }\n\n  constructor(\n    public firebaseCrudService: FirebaseCrudService,\n    public modalController: ModalController,\n    private route: ActivatedRoute,\n    private routerOutlet: IonRouterOutlet\n  ) { }\n\n  ngOnDestroy(): void {\n    this.stateSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.searchQuery = '';\n\n    this.rangeForm = new FormGroup({\n      dual: new FormControl({lower: 1, upper: 100})\n    });\n\n    this.route.data.subscribe(\n      (resolvedRouteData) => {\n        this.listingDataStore = resolvedRouteData['data'];\n\n        // We need to avoid having multiple firebase subscriptions open at the same time to avoid memory leaks\n        // By using a switchMap to cancel previous subscription each time a new one arrives,\n        // we ensure having just one subscription (the latest)\n        const updateSearchObservable = this.searchFiltersObservable.pipe(\n          switchMap((filters) => {\n            const filteredDataSource = this.firebaseCrudService.searchUsersByAge(\n              filters.lower,\n              filters.upper\n            );\n            // Send a shell until we have filtered data from Firebase\n            const searchingShellModel = [\n              new FirebaseListingItemModel(),\n              new FirebaseListingItemModel()\n            ];\n            // Wait on purpose some time to ensure the shell animation gets shown while loading filtered data\n            const searchingDelay = 400;\n\n            const dataSourceWithShellObservable = DataStore.AppendShell(filteredDataSource, searchingShellModel, searchingDelay);\n\n            return dataSourceWithShellObservable.pipe(\n              map(filteredItems => {\n                // Just filter items by name if there is a search query and they are not shell values\n                if (filters.query !== '' && !filteredItems.isShell) {\n                  const queryFilteredItems = filteredItems.filter(item =>\n                    item.name.toLowerCase().includes(filters.query.toLowerCase()\n                  ));\n                  // While filtering we strip out the isShell property, add it again\n                  return Object.assign(queryFilteredItems, {isShell: filteredItems.isShell});\n                } else {\n                  return filteredItems;\n                }\n              })\n            );\n          })\n        );\n\n        // Keep track of the subscription to unsubscribe onDestroy\n        // Merge filteredData with the original dataStore state\n        this.stateSubscription = merge(\n          this.listingDataStore.state,\n          updateSearchObservable\n        ).subscribe(\n          (state) => {\n            this.items = state;\n          },\n          (error) => console.log(error),\n          () => console.log('stateSubscription completed')\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  async openFirebaseCreateModal() {\n    const modal = await this.modalController.create({\n      component: FirebaseCreateUserModal,\n      swipeToClose: true,\n      presentingElement: this.routerOutlet.nativeEl\n    });\n    await modal.present();\n  }\n\n  searchList() {\n    this.searchSubject.next({\n      lower: this.rangeForm.controls.dual.value.lower,\n      upper: this.rangeForm.controls.dual.value.upper,\n      query: this.searchQuery\n    });\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button color=\"light\"></ion-menu-button>\n    </ion-buttons>\n    <ion-title>Firebase</ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"openFirebaseCreateModal()\">\n        <ion-icon slot=\"icon-only\" name=\"add\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n\n  <ion-toolbar class=\"filters-toolbar\">\n    <ion-row class=\"searchbar-row\" align-items-center>\n      <ion-col>\n        <ion-searchbar class=\"items-searchbar\" animated [(ngModel)]=\"searchQuery\" (ionChange)=\"searchList()\" placeholder=\"Filter by name...\"></ion-searchbar>\n      </ion-col>\n      <ion-col class=\"call-to-action-col\">\n        <ion-button fill=\"clear\" color=\"secondary\" class=\"filters-btn\" (click)=\"showAgeFilter = !showAgeFilter\">\n          <ion-icon slot=\"icon-only\" name=\"options\"></ion-icon>\n        </ion-button>\n      </ion-col>\n    </ion-row>\n    <form [formGroup]=\"rangeForm\" [hidden]=\"!showAgeFilter\">\n      <ion-row class=\"range-item-row\">\n        <ion-col size=\"12\">\n          <div class=\"range-header\">\n            <span class=\"range-value\">{{ rangeForm.controls.dual.value.lower }}</span>\n            <span class=\"range-label\">Filter by age</span>\n            <span class=\"range-value\">{{ rangeForm.controls.dual.value.upper }}</span>\n          </div>\n        </ion-col>\n        <ion-col size=\"12\">\n          <ion-range class=\"range-control\" formControlName=\"dual\" color=\"secondary\" pin=\"true\" dualKnobs=\"true\" (ionChange)=\"searchList()\" min=\"1\" max=\"100\" step=\"1\" debounce=\"400\"></ion-range>\n        </ion-col>\n      </ion-row>\n    </form>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"firebase-listing-content\">\n  <ion-list class=\"items-list\" *ngIf=\"items?.length > 0\">\n    <ion-item class=\"list-item\" *ngFor=\"let item of items\" [routerLink]=\"['/firebase/crud/details', item.id]\">\n      <ion-row class=\"user-row\">\n        <ion-col size=\"3\" class=\"user-image-wrapper\">\n          <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n            <app-image-shell class=\"user-image\" animation=\"spinner\" [src]=\"item.avatar\" [alt]=\"'item image'\"></app-image-shell>\n          </app-aspect-ratio>\n        </ion-col>\n        <ion-col class=\"user-data-wrapper\">\n          <div class=\"user-info\">\n            <h3 class=\"user-name\">\n              <app-text-shell animation=\"bouncing\" [data]=\"item.name?.concat(' ').concat(item.lastname)\"></app-text-shell>\n            </h3>\n            <h5 class=\"user-age\">\n              <app-text-shell animation=\"bouncing\" [data]=\"item.age?.toString().concat(' years old')\"></app-text-shell>\n            </h5>\n          </div>\n        </ion-col>\n      </ion-row>\n    </ion-item>\n  </ion-list>\n  <h3 *ngIf=\"items?.length == 0\" class=\"empty-list-message\">\n    No users found for the selected filters.\n  </h3>\n</ion-content>\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { FirebaseListingItemModel } from './firebase-listing.model';\nimport { FirebaseCrudService } from '../firebase-crud.service';\nimport { DataStore } from '../../../shell/data-store';\n\n@Injectable()\nexport class FirebaseListingResolver implements Resolve<any> {\n\n  constructor(private firebaseCrudService: FirebaseCrudService) {}\n\n  resolve() {\n    const dataSource: Observable<Array<FirebaseListingItemModel>> = this.firebaseCrudService.getListingDataSource();\n\n    const dataStore: DataStore<Array<FirebaseListingItemModel>> = this.firebaseCrudService.getListingStore(dataSource);\n\n    return dataStore;\n  }\n}\n"],"sourceRoot":"webpack:///"}