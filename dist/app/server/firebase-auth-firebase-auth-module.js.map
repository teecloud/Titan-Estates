{"version":3,"sources":["./src/app/firebase/auth/firebase-auth.service.ts","./src/app/firebase/auth/profile/firebase-profile.model.ts","./src/app/firebase/auth/firebase-auth.module.ts","./src/app/shell/data-store.ts"],"names":[],"mappings":"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","file":"firebase-auth-firebase-auth-module.js","sourcesContent":["import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Observable, Subject, from} from 'rxjs';\nimport { DataStore } from '../../shell/data-store';\nimport { FirebaseProfileModel } from './profile/firebase-profile.model';\nimport { Platform } from '@ionic/angular';\nimport { filter, map } from 'rxjs/operators';\n\nimport { User, auth } from 'firebase/app';\nimport { cfaSignIn, cfaSignOut } from 'capacitor-firebase-auth';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class FirebaseAuthService {\n\n  currentUser: User;\n  userProviderAdditionalInfo: any;\n  profileDataStore: DataStore<FirebaseProfileModel>;\n  redirectResult: Subject<any> = new Subject<any>();\n\n  constructor(\n    public angularFire: AngularFireAuth,\n    public platform: Platform,\n    @Inject(PLATFORM_ID) private platformId: object\n  ) {\n    if (isPlatformBrowser(this.platformId)) {\n      this.angularFire.onAuthStateChanged((user) => {\n        if (user) {\n          // User is signed in.\n          this.currentUser = user;\n        } else {\n          // No user is signed in.\n          this.currentUser = null;\n        }\n      });\n\n      if (!this.platform.is('capacitor')) {\n        // when using signInWithRedirect, this listens for the redirect results\n        this.angularFire.getRedirectResult()\n        .then((result) => {\n          // result.credential.accessToken gives you the Provider Access Token. You can use it to access the Provider API.\n          if (result.user) {\n            this.userProviderAdditionalInfo = result.additionalUserInfo.profile;\n            this.redirectResult.next(result);\n          }\n        }, (error) => {\n          this.redirectResult.next({error: error.code});\n        });\n      }\n    }\n  }\n\n  getRedirectResult(): Observable<any> {\n    return this.redirectResult.asObservable();\n  }\n\n  getPhotoURL(signInProviderId: string, photoURL: string): string {\n    // Default imgs are too small and our app needs a bigger image\n    switch (signInProviderId) {\n      case 'facebook.com':\n        return photoURL + '?height=400';\n      case 'password':\n        return 'https://s3-us-west-2.amazonaws.com/ionicthemes/otros/avatar-placeholder.png';\n      case 'twitter.com':\n        return photoURL.replace('_normal', '_400x400');\n      case 'google.com':\n        return photoURL.split('=')[0];\n      default:\n        return photoURL;\n    }\n  }\n\n  // Get the currently signed-in user\n  getLoggedInUser() {\n    return this.currentUser;\n  }\n\n  signOut(): Observable<any> {\n    if (this.platform.is('capacitor')) {\n      return cfaSignOut();\n    } else {\n      return from(this.angularFire.signOut());\n    }\n  }\n\n  signInWithEmail(email: string, password: string): Promise<auth.UserCredential> {\n    return this.angularFire.signInWithEmailAndPassword(email, password);\n  }\n\n  signUpWithEmail(email: string, password: string): Promise<auth.UserCredential> {\n    return this.angularFire.createUserWithEmailAndPassword(email, password);\n  }\n\n  socialSignIn(providerName: string, scopes?: Array<string>): Observable<any> {\n    if (this.platform.is('capacitor')) {\n      return cfaSignIn(providerName);\n    } else {\n      const provider = new auth.OAuthProvider(providerName);\n\n      if (scopes) {\n        scopes.forEach(scope => {\n          provider.addScope(scope);\n        });\n      }\n\n      if (this.platform.is('desktop')) {\n        return from(this.angularFire.signInWithPopup(provider));\n      } else {\n        // web but not desktop, for example mobile PWA\n        return from(this.angularFire.signInWithRedirect(provider));\n      }\n    }\n  }\n\n  signInWithFacebook() {\n    const provider = new auth.FacebookAuthProvider();\n    return this.socialSignIn(provider.providerId);\n  }\n\n  signInWithGoogle() {\n    const provider = new auth.GoogleAuthProvider();\n    const scopes = ['profile', 'email'];\n    return this.socialSignIn(provider.providerId, scopes);\n  }\n\n  signInWithTwitter() {\n    const provider = new auth.TwitterAuthProvider();\n    return this.socialSignIn(provider.providerId);\n  }\n\n  public getProfileDataSource(): Observable<FirebaseProfileModel> {\n    return this.angularFire.user\n    .pipe(\n      filter((user: User) => user != null),\n      map((user: User) => {\n        const userModel = new FirebaseProfileModel();\n        const provierData = this.currentUser.providerData[0];\n\n        const userData = this.userProviderAdditionalInfo ? this.userProviderAdditionalInfo : provierData;\n\n        userModel.image = this.getPhotoURL(provierData.providerId, provierData.photoURL);\n        userModel.name = userData.name || userData.displayName || 'What\\'s your name?';\n        userModel.role = 'How would you describe yourself?';\n        userModel.description = userData.description || 'Anything else you would like to share with the world?';\n        userModel.phoneNumber = userData.phoneNumber || 'Is there a number where I can reach you?';\n        userModel.email = userData.email || 'Where can I send you emails?';\n        userModel.provider = (provierData.providerId !== 'password') ? provierData.providerId : 'Credentials';\n\n        return userModel;\n      })\n    );\n  }\n\n  public getProfileStore(dataSource: Observable<FirebaseProfileModel>): DataStore<FirebaseProfileModel> {\n    // Initialize the model specifying that it is a shell model\n    const shellModel: FirebaseProfileModel = new FirebaseProfileModel();\n    this.profileDataStore = new DataStore(shellModel);\n    // Trigger the loading mechanism (with shell) in the dataStore\n    this.profileDataStore.load(dataSource);\n    return this.profileDataStore;\n  }\n}\n","import { ShellModel } from '../../../shell/data-store';\n\nexport class FirebaseProfileModel extends ShellModel {\n  image: string;\n  name: string;\n  role: string;\n  description: string;\n  email: string;\n  provider: string;\n  phoneNumber: string;\n\n  constructor() {\n    super();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentsModule } from '../../components/components.module';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireModule } from '@angular/fire';\nimport { environment } from '../../../environments/environment';\nimport { FirebaseAuthService } from './firebase-auth.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      // /firebase/auth redirect\n      {\n        path: '',\n        redirectTo: 'sign-in',\n        pathMatch: 'full',\n      },\n      {\n        path: 'sign-in',\n        loadChildren: () => import('./sign-in/firebase-sign-in.module').then(m => m.FirebaseSignInPageModule)\n      },\n      {\n        path: 'sign-up',\n        loadChildren: () => import('./sign-up/firebase-sign-up.module').then(m => m.FirebaseSignUpPageModule)\n      },\n      {\n        path: 'profile',\n        loadChildren: () => import('./profile/firebase-profile.module').then(m => m.FirebaseProfilePageModule)\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    ComponentsModule,\n    RouterModule.forChild(routes),\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule\n  ],\n  providers: [FirebaseAuthService]\n})\nexport class FirebaseAuthModule {}\n","import { Observable, of, combineLatest, ReplaySubject } from 'rxjs';\nimport { delay, map, startWith } from 'rxjs/operators';\n\nimport { AppShellConfig } from './config/app-shell.config';\n\nexport class ShellModel {\n  isShell = false;\n}\n\nexport class DataStore<T> {\n  // We wait on purpose 2 secs on local environment when fetching from json to simulate the backend roundtrip.\n  // However, in production you should set this delay to 0 in the assets/config/app-shell.config.prod.json file.\n  // tslint:disable-next-line:max-line-length\n  private networkDelay = (AppShellConfig.settings && AppShellConfig.settings.networkDelay) ? AppShellConfig.settings.networkDelay : 0;\n\n  private timeline: ReplaySubject<T & ShellModel> = new ReplaySubject(1);\n\n  constructor(private shellModel: T) { }\n\n  // Static function with generics\n  // (ref: https://stackoverflow.com/a/24293088/1116959)\n  // Append a shell (T & ShellModel) to every value (T) emmited to the timeline\n  public static AppendShell<T>(dataObservable: Observable<T>, shellModel: T, networkDelay = 400): Observable<T & ShellModel> {\n    const delayObservable = of(true).pipe(\n      delay(networkDelay)\n    );\n\n    // Assign shell flag accordingly\n    // (ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n    return combineLatest([\n      delayObservable,\n      dataObservable\n    ]).pipe(\n      // Dismiss unnecessary delayValue\n      map(([delayValue, dataValue]: [boolean, T]): (T & ShellModel) => Object.assign(dataValue, {isShell: false})),\n      // Set the shell model as the initial value\n      startWith(Object.assign(shellModel, {isShell: true}))\n    );\n  }\n\n  load(dataSourceObservable: Observable<T>, networkDelay?: number): void {\n    // tslint:disable-next-line:no-shadowed-variable\n    const delay = (typeof networkDelay === 'number') ? networkDelay : this.networkDelay;\n\n    let processedDataSource: Observable<any>;\n\n    // If no network delay, then don't show shell\n    if (delay === 0) {\n      processedDataSource = dataSourceObservable;\n    } else {\n      processedDataSource = DataStore.AppendShell(dataSourceObservable, this.shellModel, delay);\n    }\n\n    processedDataSource\n    .subscribe((dataValue: T & ShellModel) => {\n      this.timeline.next(dataValue);\n    });\n  }\n\n  public get state(): Observable<T & ShellModel> {\n    return this.timeline.asObservable();\n  }\n}\n"],"sourceRoot":"webpack:///"}