{"version":3,"sources":["./src/app/notifications/notifications.resolver.ts","./src/app/notifications/notifications.page.ts","./src/app/notifications/notifications.page.html","./src/app/notifications/notifications.module.ts","./src/app/notifications/notifications.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA2C;AAIoB;;;AAGxD,MAAM,qBAAqB;IAEhC,YAAoB,oBAA0C;QAA1C,yBAAoB,GAApB,oBAAoB,CAAsB;IAAI,CAAC;IAEnE,OAAO;QACL,2CAA2C;QAC3C,MAAM,cAAc,GAAoB,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC;QAE5E,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC;IACpC,CAAC;;0FATU,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB;6FAArB,qBAAqB;cADjC,wDAAU;;;;;;;;;;;;;;ACNX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACD;AAEN;;;;;;;;;ICcrC,8EACE;IAAA,6EACE;IAAA,6EACE;IAAA,sFACE;IAAA,iFAA8G;IAChH,4DAAmB;IACrB,4DAAU;IACV,8EACE;IAAA,yEAAyB;IAAA,uDAAuB;IAAA,4DAAK;IACrD,wEAA+B;IAAA,uDAA0B;IAAA,4DAAI;IAC/D,4DAAU;IACV,+EACE;IAAA,0EAA8B;IAAA,wDAAuB;IAAA,4DAAK;IAC5D,4DAAU;IACZ,4DAAU;IACZ,4DAAW;;;IAZa,0DAAsB;IAAtB,wIAAsB;IACM,0DAA0B;IAA1B,sFAA0B;IAI/C,0DAAuB;IAAvB,qFAAuB;IACjB,0DAA0B;IAA1B,wFAA0B;IAG3B,0DAAuB;IAAvB,qFAAuB;;;IAS3D,8EACE;IAAA,6EACE;IAAA,6EACE;IAAA,sFACE;IAAA,iFAA8G;IAChH,4DAAmB;IACrB,4DAAU;IACV,8EACE;IAAA,yEAAyB;IAAA,uDAAuB;IAAA,4DAAK;IACrD,wEAA+B;IAAA,uDAA0B;IAAA,4DAAI;IAC/D,4DAAU;IACV,+EACE;IAAA,0EAA8B;IAAA,wDAAuB;IAAA,4DAAK;IAC5D,4DAAU;IACZ,4DAAU;IACZ,4DAAW;;;IAZa,0DAAsB;IAAtB,wIAAsB;IACM,0DAA0B;IAA1B,sFAA0B;IAI/C,0DAAuB;IAAvB,qFAAuB;IACjB,0DAA0B;IAA1B,wFAA0B;IAG3B,0DAAuB;IAAvB,qFAAuB;;;IAtC/D,wEACE;IAAA,iFACE;IAAA,sFACE;IAAA,4EAAW;IAAA,gEAAK;IAAA,4DAAY;IAC9B,4DAAmB;IACnB,uIACE;IAeJ,4DAAiB;IACjB,iFACE;IAAA,sFACE;IAAA,4EAAW;IAAA,oEAAS;IAAA,4DAAY;IAClC,4DAAmB;IACnB,yIACE;IAeJ,4DAAiB;IACnB,qEAAe;;;IAtCsC,0DAAgD;IAAhD,+FAAgD;IAqBhD,0DAAoD;IAApD,mGAAoD;;ADzBpG,MAAM,iBAAiB;IAM5B,YAAoB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAE9C,QAAQ;QACN,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI;aACnC,IAAI;QACH,6BAA6B;QAC7B,gEAAS,CAAC,CAAC,iBAA4C,EAAE,EAAE;YACzD,OAAO,iBAAiB,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;QAC1C,CAAC,CAAC,CACH;aACA,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACtB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;QAChC,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IAGD,uFAAuF;IACvF,0HAA0H;IAC1H,gBAAgB;QACd,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;;kFA1BU,iBAAiB;iGAAjB,iBAAiB;QCb9B,6EACE;QAAA,iFACE;QAAA,iFACE;QAAA,6EAAmC;QACrC,4DAAc;QACd,4EACE;QAAA,0EACF;QAAA,4DAAY;QACd,4DAAc;QAChB,4DAAa;QAEb,iFACE;QAAA,gIACE;QA2CJ,4DAAc;;QA5CE,0DAAqB;QAArB,mFAAqB;;6FDCxB,iBAAiB;cAR7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE;oBACT,kCAAkC;oBAClC,mCAAmC;iBACpC;aACF;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACE;AACN;AACM;AAEoB;AAEV;AACuB;AACF;;;AAuBvE,MAAM,uBAAuB;;sGAAvB,uBAAuB;wKAAvB,uBAAuB,mBALvB;QACT,2FAAqB;QACrB,yFAAoB;KACrB,YAlBQ;YACP,0DAAW;YACX,4DAAY;YACZ,8EAAgB;YAChB,4DAAY,CAAC,QAAQ,CAAC;gBACpB;oBACE,IAAI,EAAE,EAAE;oBACR,SAAS,EAAE,qEAAiB;oBAC5B,OAAO,EAAE;wBACP,IAAI,EAAE,2FAAqB;qBAC5B;iBACF;aACF,CAAC;SACH;mIAOU,uBAAuB,mBANlB,qEAAiB,aAb/B,0DAAW;QACX,4DAAY;QACZ,8EAAgB;6FAiBP,uBAAuB;cArBnC,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,0DAAW;oBACX,4DAAY;oBACZ,8EAAgB;oBAChB,4DAAY,CAAC,QAAQ,CAAC;wBACpB;4BACE,IAAI,EAAE,EAAE;4BACR,SAAS,EAAE,qEAAiB;4BAC5B,OAAO,EAAE;gCACP,IAAI,EAAE,2FAAqB;6BAC5B;yBACF;qBACF,CAAC;iBACH;gBACD,YAAY,EAAE,CAAE,qEAAiB,CAAE;gBACnC,SAAS,EAAE;oBACT,2FAAqB;oBACrB,yFAAoB;iBACrB;aACF;;;;;;;;;;;;;;AC/BD;AAAA;AAAA;AAAA;AAA2C;AACO;;;AAI3C,MAAM,oBAAoB;IAC/B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAElC,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,yCAAyC,CAAC,CAAC;IACvE,CAAC;;wFALU,oBAAoB;uGAApB,oBAAoB,WAApB,oBAAoB;6FAApB,oBAAoB;cADhC,wDAAU","file":"notifications-notifications-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { NotificationsService } from './notifications.service';\n\n@Injectable()\nexport class NotificationsResolver implements Resolve<any> {\n\n  constructor(private notificationsService: NotificationsService) { }\n\n  resolve() {\n    // Base Observable (where we get data from)\n    const dataObservable: Observable<any> = this.notificationsService.getData();\n\n    return { source: dataObservable };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.page.html',\n  styleUrls: [\n    './styles/notifications.page.scss',\n    './styles/notifications.shell.scss'\n  ]\n})\nexport class NotificationsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  notifications: any;\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.subscriptions = this.route.data\n    .pipe(\n      // Extract data for this page\n      switchMap((resolvedRouteData: {source: Observable<any>}) => {\n        return resolvedRouteData['data'].source;\n      })\n    )\n    .subscribe((pageData) => {\n      this.notifications = pageData;\n    }, (error) => console.log(error));\n  }\n\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>\n      Notifications\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"notifications-content\">\n  <ng-container *ngIf=\"notifications\">\n    <ion-item-group>\n      <ion-item-divider sticky>\n        <ion-label>Today</ion-label>\n      </ion-item-divider>\n      <ion-item class=\"notification-item\" lines=\"none\" *ngFor=\"let notification of notifications.today\">\n        <ion-row class=\"notification-item-wrapper\">\n          <ion-col size=\"2\">\n            <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n              <app-image-shell class=\"notification-image\" [src]=\"notification.image\" [alt]=\"'user image'\"></app-image-shell>\n            </app-aspect-ratio>\n          </ion-col>\n          <ion-col class=\"details-wrapper\">\n            <h2 class=\"details-name\">{{ notification.name }}</h2>\n            <p class=\"details-description\">{{ notification.message }}</p>\n          </ion-col>\n          <ion-col size=\"2\" class=\"date-wrapper\">\n            <h3 class=\"notification-date\">{{ notification.date }}</h3>\n          </ion-col>\n        </ion-row>\n      </ion-item>\n    </ion-item-group>\n    <ion-item-group>\n      <ion-item-divider sticky>\n        <ion-label>Yesterday</ion-label>\n      </ion-item-divider>\n      <ion-item class=\"notification-item\" lines=\"none\" *ngFor=\"let notification of notifications.yesterday\">\n        <ion-row class=\"notification-item-wrapper\">\n          <ion-col size=\"2\">\n            <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n              <app-image-shell class=\"notification-image\" [src]=\"notification.image\" [alt]=\"'user image'\"></app-image-shell>\n            </app-aspect-ratio>\n          </ion-col>\n          <ion-col class=\"details-wrapper\">\n            <h2 class=\"details-name\">{{ notification.name }}</h2>\n            <p class=\"details-description\">{{ notification.message }}</p>\n          </ion-col>\n          <ion-col size=\"2\" class=\"date-wrapper\">\n            <h3 class=\"notification-date\">{{ notification.date }}</h3>\n          </ion-col>\n        </ion-row>\n      </ion-item>\n    </ion-item-group>\n  </ng-container>\n</ion-content>\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComponentsModule } from '../components/components.module';\n\nimport { NotificationsPage } from './notifications.page';\nimport { NotificationsResolver } from '../notifications/notifications.resolver';\nimport { NotificationsService } from '../notifications/notifications.service';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    ComponentsModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: NotificationsPage,\n        resolve: {\n          data: NotificationsResolver\n        }\n      }\n    ])\n  ],\n  declarations: [ NotificationsPage ],\n  providers: [\n    NotificationsResolver,\n    NotificationsService\n  ]\n})\nexport class NotificationsPageModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class NotificationsService {\n  constructor(private http: HttpClient) { }\n\n  public getData(): Observable<any> {\n    return this.http.get<any>('./assets/sample-data/notifications.json');\n  }\n}\n"],"sourceRoot":"webpack:///"}