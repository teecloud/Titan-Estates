{"version":3,"sources":["./src/app/food/listing/food-listing.module.ts","./src/app/food/listing/food-listing.resolver.ts","./src/app/food/listing/food-listing.page.ts","./src/app/food/listing/food-listing.page.html"],"names":[],"mappings":"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","file":"food-listing-food-listing-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { FoodService } from '../food.service';\nimport { FoodListingPage } from './food-listing.page';\nimport { FoodListingResolver } from './food-listing.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FoodListingPage,\n    resolve: {\n      data: FoodListingResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule\n  ],\n  declarations: [\n    FoodListingPage\n  ],\n  providers: [\n    FoodListingResolver,\n    FoodService\n  ]\n})\nexport class FoodListingPageModule {}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { FoodService } from '../food.service';\nimport { FoodListingModel } from './food-listing.model';\n\n@Injectable()\nexport class FoodListingResolver implements Resolve<DataStore<FoodListingModel>> {\n\n  constructor(private foodService: FoodService) {}\n\n  resolve(): DataStore<FoodListingModel> {\n    const dataSource: Observable<FoodListingModel> = this.foodService.getListingDataSource();\n    const dataStore: DataStore<FoodListingModel> = this.foodService.getListingStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { FoodListingModel } from './food-listing.model';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-food-listing',\n  templateUrl: './food-listing.page.html',\n  styleUrls: [\n    './styles/food-listing.page.scss',\n    './styles/food-listing.shell.scss'\n  ]\n})\nexport class FoodListingPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  listing: FoodListingModel;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.listing && this.listing.isShell) ? true : false;\n  }\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.subscriptions = this.route.data\n    .pipe(\n      // Extract data for this page\n      switchMap((resolvedRouteData: IResolvedRouteData<FoodListingModel>) => {\n        return ResolverHelper.extractData<FoodListingModel>(resolvedRouteData.data, FoodListingModel);\n      })\n    )\n    .subscribe((state) => {\n      this.listing = state;\n    }, (error) => console.log(error));\n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>Food Listing</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"food-listing-content\">\n  <ng-container *ngIf=\"listing?.items\">\n    <div class=\"listing-item\" *ngFor=\"let item of listing?.items\">\n      <div class=\"cover-wrapper\">\n        <a class=\"cover-anchor\" [routerLink]=\"['/app/categories/food/', item.slug]\">\n          <app-image-shell class=\"cover-image add-overlay\" animation=\"spinner\" [display]=\"'cover'\" [src]=\"item.image\">\n            <app-aspect-ratio [ratio]=\"{w:35, h:15}\">\n              <div class=\"cover-icon-wrapper\">\n                <app-aspect-ratio [ratio]=\"{w: 20, h: 7}\">\n                  <app-image-shell class=\"item-icon\" [src]=\"item.icon\"></app-image-shell>\n                </app-aspect-ratio>\n              </div>\n            </app-aspect-ratio>\n          </app-image-shell>\n        </a>\n      </div>\n      <ion-row class=\"info-row\">\n        <ion-col class=\"description-col\">\n          <ion-row class=\"description-wrapper\">\n            <h3 class=\"item-name\">\n              <a class=\"name-anchor\" [routerLink]=\"['/app/categories/food/', item.slug]\">\n                <app-text-shell [data]=\"item.name\"></app-text-shell>\n              </a>\n            </h3>\n            <p class=\"item-address\">\n              <app-text-shell [data]=\"item.address\"></app-text-shell>\n            </p>\n            <ion-row class=\"item-tags\">\n              <ion-col class=\"tag-wrapper\" *ngFor=\"let tag of item.tags\">\n                <span class=\"item-tag\">\n                  <app-text-shell [data]=\"tag\"></app-text-shell>\n                </span>\n              </ion-col>\n            </ion-row>\n          </ion-row>\n        </ion-col>\n        <ion-col class=\"stats-col\">\n          <span class=\"item-rating\" [attr.ratingBase]=\"item.rating | floor\">\n            <app-text-shell [data]=\"item.rating\"></app-text-shell>\n          </span>\n          <div class=\"item-price-range\">\n            <span class=\"price\" *ngFor=\"let price of [].constructor(item.priceRange)\">$</span>\n            <span class=\"no-price\" *ngFor=\"let price of [].constructor(5 - (item.priceRange || 1))\">$</span>\n          </div>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"pictures-row\">\n        <ion-col class=\"picture-wrapper\" *ngFor=\"let picture of item.pictures.slice(0, 5); let i = index\">\n          <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n            <app-image-shell class=\"picture-image\" [src]=\"picture\" [alt]=\"'food image'\"></app-image-shell>\n          </app-aspect-ratio>\n          <a class=\"has-more-pictures\" [routerLink]=\"['/app/categories/food/', item.slug]\" *ngIf=\"i == 4 && item.pictures.length > 5\">\n            <span class=\"pictures-count\">{{ item.pictures.length - 5 }}</span>\n          </a>\n        </ion-col>\n      </ion-row>\n    </div>\n  </ng-container>\n</ion-content>\n"],"sourceRoot":"webpack:///"}