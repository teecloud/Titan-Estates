{"version":3,"sources":["./src/app/firebase/crud/user/update/firebase-update-user.modal.ts","./src/app/firebase/crud/user/update/firebase-update-user.modal.html","./src/app/firebase/crud/user/firebase-user-details.module.ts","./src/app/firebase/crud/user/details/firebase-user-details.page.ts","./src/app/firebase/crud/user/details/firebase-user-details.page.html","./src/app/firebase/crud/user/firebase-user-details.resolver.ts"],"names":[],"mappings":"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","file":"crud-user-firebase-user-details-module.js","sourcesContent":["import { Component, OnInit, Input, NgZone } from '@angular/core';\nimport { ModalController, AlertController } from '@ionic/angular';\nimport { Validators, FormGroup, FormControl, FormArray } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport * as dayjs from 'dayjs';\n\nimport { CheckboxCheckedValidator } from '../../../../validators/checkbox-checked.validator';\n\nimport { FirebaseUserModel } from '../firebase-user.model';\nimport { SelectUserImageModal } from '../select-image/select-user-image.modal';\nimport { FirebaseCrudService } from '../../firebase-crud.service';\n\n@Component({\n  selector: 'app-firebase-update-user',\n  templateUrl: './firebase-update-user.modal.html',\n  styleUrls: [\n    './styles/firebase-update-user.modal.scss',\n    './styles/firebase-update-user.shell.scss'\n  ],\n})\nexport class FirebaseUpdateUserModal implements OnInit {\n  // \"user\" is passed in firebase-details.page\n  @Input() user: FirebaseUserModel;\n\n  updateUserForm: FormGroup;\n  selectedAvatar: string;\n  skills = [];\n\n  constructor(\n    private modalController: ModalController,\n    public alertController: AlertController,\n    public firebaseCrudService: FirebaseCrudService,\n    public router: Router,\n    private ngZone: NgZone\n  ) { }\n\n  ngOnInit() {\n    this.selectedAvatar = this.user.avatar;\n\n    this.updateUserForm = new FormGroup({\n      name: new FormControl(this.user.name, Validators.required),\n      lastname: new FormControl(this.user.lastname, Validators.required),\n      email: new FormControl(this.user.email, Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      phone: new FormControl(this.user.phone, Validators.required),\n      birthdate: new FormControl(dayjs.unix(this.user.birthdate).format('DD/MMMM/YYYY'), Validators.required),\n      skills: new FormArray([], CheckboxCheckedValidator.minSelectedCheckboxes(1)),\n      spanish: new FormControl(this.user.languages.spanish),\n      english: new FormControl(this.user.languages.english),\n      french: new FormControl(this.user.languages.french)\n    });\n\n    this.firebaseCrudService.getSkills().subscribe(skills => {\n      this.skills = skills;\n      // create skill checkboxes\n      this.skills.map((skill) => {\n        let userSkillsIds = [];\n        if (this.user.skills) {\n          userSkillsIds = this.user.skills.map(function(skillId) {\n            return skillId['id'];\n          });\n        }\n        // set the control value to 'true' if the user already has this skill\n        const control = new FormControl(userSkillsIds.includes(skill.id));\n        (this.updateUserForm.controls.skills as FormArray).push(control);\n      });\n    });\n  }\n\n  get skillsFormArray() { return <FormArray>this.updateUserForm.get('skills'); }\n\n  changeLangValue(value): string {\n    switch (true) {\n      case (value <= 3 ):\n        return 'Novice';\n      case (value > 3 && value <= 6 ):\n        return 'Competent';\n      case (value > 6 ):\n        return 'Expert';\n    }\n  }\n\n  dismissModal() {\n   this.modalController.dismiss();\n  }\n\n  async deleteUser() {\n    const alert = await this.alertController.create({\n      header: 'Confirm',\n      message: 'Do you want to delete ' + this.user.name + '?',\n      buttons: [\n        {\n          text: 'No',\n          role: 'cancel',\n          handler: () => {}\n        },\n        {\n          text: 'Yes',\n          handler: () => {\n            this.firebaseCrudService.deleteUser(this.user.id)\n            .then(\n              () => {\n                this.dismissModal();\n                this.ngZone.run(() => this.router.navigate(['firebase/crud/listing'])).then();\n              },\n              err => console.log(err)\n            );\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  updateUser() {\n    this.user.avatar = this.selectedAvatar;\n    this.user.name = this.updateUserForm.value.name;\n    this.user.lastname = this.updateUserForm.value.lastname;\n    this.user.birthdate = dayjs(this.updateUserForm.value.birthdate).unix(); // save it in timestamp\n    this.user.phone = this.updateUserForm.value.phone;\n    this.user.email = this.updateUserForm.value.email;\n    this.user.languages.spanish = this.updateUserForm.value.spanish;\n    this.user.languages.english = this.updateUserForm.value.english;\n    this.user.languages.french = this.updateUserForm.value.french;\n\n    // get the ids of the selected skills\n    const selectedSkills = [];\n\n    this.updateUserForm.value.skills\n    .map((value: any, index: number) => {\n      if (value) {\n        selectedSkills.push(this.skills[index].id);\n      }\n    });\n    this.user.skills = selectedSkills;\n\n    const {age, ...userData} = this.user; // we don't want to save the age in the DB because is something that changes over time\n\n    this.firebaseCrudService.updateUser(userData)\n    .then(\n      () => this.modalController.dismiss(),\n      err => console.log(err)\n    );\n  }\n\n  async changeUserImage() {\n    const modal = await this.modalController.create({\n      component: SelectUserImageModal,\n      swipeToClose: true,\n      presentingElement: await this.modalController.getTop()\n    });\n\n    modal.onDidDismiss().then(avatar => {\n      if (avatar.data != null) {\n        this.selectedAvatar = avatar.data.link;\n      }\n    });\n    await modal.present();\n  }\n}\n","<!-- This is the proper way if you have submit button outside your ion-content form (typically in the ion-header or ion-footer) -->\n<!-- (ref: https://github.com/ionic-team/ionic/issues/16661) -->\n<form class=\"update-user-form ion-page\" [formGroup]=\"updateUserForm\" (ngSubmit)=\"updateUser()\">\n  <ion-header>\n    <ion-toolbar color=\"primary\">\n      <ion-buttons slot=\"end\">\n        <ion-button (click)=\"dismissModal()\">\n          <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n        </ion-button>\n      </ion-buttons>\n      <ion-title>Update User</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-content class=\"update-user-content\">\n    <ion-row class=\"select-user-image-row\">\n      <ion-col class=\"user-image-col\" size=\"5\">\n        <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n          <app-image-shell [display]=\"'cover'\" class=\"user-image\" animation=\"spinner\" [src]=\"selectedAvatar\" [alt]=\"'user image'\"></app-image-shell>\n        </app-aspect-ratio>\n        <ion-button class=\"change-image-btn\" color=\"secondary\" (click)=\"changeUserImage()\">\n          <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"camera\"></ion-icon>\n        </ion-button>\n      </ion-col>\n    </ion-row>\n\n    <section class=\"user-details-fields fields-section\">\n      <ion-list class=\"inputs-list\" lines=\"full\">\n        <ion-item class=\"input-item\">\n          <ion-label color=\"secondary\" position=\"floating\">Name</ion-label>\n          <ion-input type=\"text\" formControlName=\"name\" required></ion-input>\n        </ion-item>\n        <ion-item class=\"input-item\">\n          <ion-label color=\"secondary\" position=\"floating\">Last name</ion-label>\n          <ion-input type=\"text\" formControlName=\"lastname\" required></ion-input>\n        </ion-item>\n        <ion-item class=\"input-item\">\n          <ion-label color=\"secondary\" position=\"floating\">Date of Birth</ion-label>\n          <ion-datetime display-format=\"DD/MM/YYYY\" picker-format=\"DD MMMM YYYY\" formControlName=\"birthdate\" required></ion-datetime>\n        </ion-item>\n        <ion-item class=\"input-item\">\n          <ion-label color=\"secondary\" position=\"floating\">Phone number</ion-label>\n          <ion-input type=\"tel\" formControlName=\"phone\" required></ion-input>\n        </ion-item>\n        <ion-item class=\"input-item\">\n          <ion-label color=\"secondary\" position=\"floating\">Email</ion-label>\n          <ion-input type=\"email\" formControlName=\"email\" required></ion-input>\n        </ion-item>\n      </ion-list>\n    </section>\n\n    <section class=\"user-experience-fields fields-section\">\n      <h5 class=\"section-header\">Experience in</h5>\n      <ion-row class=\"checkbox-tags rounded-checkbox-tags\">\n        <ion-item formArrayName=\"skills\" lines=\"none\" class=\"checkbox-tag rounded-tag\" *ngFor=\"let skill of skillsFormArray.controls; let i = index;\">\n          <ion-label class=\"tag-label\">{{skills[i].name}}</ion-label>\n          <ion-checkbox [formControlName]=\"i\"></ion-checkbox>\n        </ion-item>\n      </ion-row>\n    </section>\n\n    <section class=\"user-languages-fields fields-section\">\n      <h5 class=\"section-header\">Languages</h5>\n      <ion-row class=\"range-item-row\">\n        <ion-col size=\"12\">\n          <div class=\"range-header\">\n            <span class=\"range-label\">English</span>\n            <span class=\"range-value\">{{ changeLangValue(updateUserForm.controls.english.value) }}</span>\n          </div>\n        </ion-col>\n        <ion-col size=\"12\">\n          <ion-range class=\"range-control\" formControlName=\"english\" color=\"secondary\" min=\"1\" max=\"10\" step=\"1\"></ion-range>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"range-item-row\">\n        <ion-col size=\"12\">\n          <div class=\"range-header\">\n            <span class=\"range-label\">Spanish</span>\n            <span class=\"range-value\">{{ changeLangValue(updateUserForm.controls.spanish.value) }}</span>\n          </div>\n        </ion-col>\n        <ion-col size=\"12\">\n          <ion-range class=\"range-control\" formControlName=\"spanish\" color=\"secondary\" min=\"1\" max=\"10\" step=\"1\"></ion-range>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"range-item-row\">\n        <ion-col size=\"12\">\n          <div class=\"range-header\">\n            <span class=\"range-label\">French</span>\n            <span class=\"range-value\">{{ changeLangValue(updateUserForm.controls.french.value) }}</span>\n          </div>\n        </ion-col>\n        <ion-col size=\"12\">\n          <ion-range class=\"range-control\" formControlName=\"french\" color=\"secondary\" min=\"1\" max=\"10\" step=\"1\"></ion-range>\n        </ion-col>\n      </ion-row>\n    </section>\n  </ion-content>\n\n  <ion-footer>\n    <ion-row class=\"form-actions-wrapper\">\n      <ion-col>\n        <ion-button class=\"delete-btn\" expand=\"block\" color=\"primary\" fill=\"outline\" (click)=\"deleteUser()\">DELETE</ion-button>\n      </ion-col>\n      <ion-col>\n        <ion-button class=\"submit-btn\" expand=\"block\" color=\"secondary\" type=\"submit\" fill=\"solid\" [disabled]=\"!updateUserForm.valid\">UPDATE</ion-button>\n      </ion-col>\n    </ion-row>\n  </ion-footer>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentsModule } from '../../../components/components.module';\nimport { FirebaseUserDetailsPage } from './details/firebase-user-details.page';\nimport { FirebaseUserDetailsResolver } from './firebase-user-details.resolver';\nimport { FirebaseUpdateUserModal } from './update/firebase-update-user.modal';\nimport { FirebaseCrudService } from '../firebase-crud.service';\nimport { FirebaseCrudSharedModule } from '../firebase-crud-shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FirebaseUserDetailsPage,\n    resolve: {\n      data: FirebaseUserDetailsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    FirebaseCrudSharedModule\n  ],\n  declarations: [\n    FirebaseUserDetailsPage,\n    FirebaseUpdateUserModal\n  ],\n  providers: [\n    FirebaseCrudService,\n    FirebaseUserDetailsResolver\n  ]\n})\nexport class FirebaseUserDetailsPageModule {}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ModalController, IonRouterOutlet } from '@ionic/angular';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { FirebaseCombinedUserModel } from '../firebase-user.model';\nimport { FirebaseListingItemModel } from '../../listing/firebase-listing.model';\nimport { FirebaseUpdateUserModal } from '../update/firebase-update-user.modal';\n\nimport { DataStore, ShellModel } from '../../../../shell/data-store';\nimport { FirebaseCrudService } from '../../firebase-crud.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-firebase-user-details',\n  templateUrl: './firebase-user-details.page.html',\n  styleUrls: [\n    './styles/firebase-user-details.page.scss',\n    './styles/firebase-user-details.shell.scss'\n  ],\n})\nexport class FirebaseUserDetailsPage implements OnInit {\n  user: FirebaseCombinedUserModel;\n  // Use Typescript intersection types to enable docorating the Array of firebase models with a shell model\n  // (ref: https://www.typescriptlang.org/docs/handbook/advanced-types.html#intersection-types)\n  relatedUsers: Array<FirebaseListingItemModel> & ShellModel;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return ((this.user && this.user.isShell) || (this.relatedUsers && this.relatedUsers.isShell)) ? true : false;\n  }\n\n  constructor(\n    public firebaseCrudService: FirebaseCrudService,\n    public modalController: ModalController,\n    public router: Router,\n    private route: ActivatedRoute,\n    private routerOutlet: IonRouterOutlet\n  ) { }\n\n  ngOnInit() {\n\n    this.route.data\n    .pipe(\n      map((resolvedRouteData) => {\n        const resolvedDataStores = resolvedRouteData['data'];\n        const combinedDataStore: DataStore<FirebaseCombinedUserModel> = resolvedDataStores.user;\n        const relatedUsersDataStore: DataStore<Array<FirebaseListingItemModel>> = resolvedDataStores.relatedUsers;\n\n        combinedDataStore.state.subscribe(\n          (state) => this.user = state\n        );\n\n        relatedUsersDataStore.state.subscribe(\n          (state) => this.relatedUsers = state\n        );\n      })\n    ).subscribe();\n  }\n\n  async openFirebaseUpdateModal() {\n    const modal = await this.modalController.create({\n      component: FirebaseUpdateUserModal,\n      componentProps: {\n        'user': this.user\n      },\n      swipeToClose: true,\n      presentingElement: this.routerOutlet.nativeEl\n    });\n\n    await modal.present();\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"firebase/crud/listing\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>User Details</ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"openFirebaseUpdateModal()\">\n        Edit\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"user-content\">\n  <ion-row class=\"user-info-row\">\n    <ion-col class=\"user-image-col\" size=\"5\">\n      <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n        <app-image-shell [display]=\"'cover'\" class=\"user-image\" animation=\"spinner\" [src]=\"user?.avatar\" [alt]=\"'item image'\">\n        </app-image-shell>\n      </app-aspect-ratio>\n    </ion-col>\n    <ion-col class=\"user-details-col\" size=\"12\">\n      <h2 class=\"user-name\">\n        <app-text-shell animation=\"bouncing\" [data]=\"user?.name?.concat(' ').concat(user?.lastname)\"></app-text-shell>\n      </h2>\n      <span class=\"user-age\">\n        <app-text-shell animation=\"bouncing\" [data]=\"user?.age?.toString().concat(' years young')\"></app-text-shell>\n      </span>\n    </ion-col>\n    <ion-col class=\"actions-col\" size=\"12\">\n      <ion-row>\n        <ion-col size=\"3\">\n          <ion-button class=\"action-btn\" color=\"secondary\">\n            <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"mail\"></ion-icon>\n          </ion-button>\n        </ion-col>\n        <ion-col size=\"3\">\n          <ion-button class=\"action-btn\" color=\"secondary\">\n            <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"call\"></ion-icon>\n          </ion-button>\n        </ion-col>\n        <ion-col size=\"3\">\n          <ion-button class=\"action-btn\" color=\"secondary\">\n            <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"videocam\"></ion-icon>\n          </ion-button>\n        </ion-col>\n        <ion-col size=\"3\">\n          <ion-button class=\"action-btn\" color=\"secondary\">\n            <ion-icon class=\"btn-icon\" slot=\"icon-only\" name=\"text\"></ion-icon>\n          </ion-button>\n        </ion-col>\n      </ion-row>\n    </ion-col>\n  </ion-row>\n\n  <section class=\"content-section user-languages-wrapper\">\n    <h5 class=\"section-header\">Languages</h5>\n    <ion-row class=\"language-item-row\">\n      <ion-col class=\"language-item\">\n        <span class=\"language-name\">English</span>\n        <ion-progress-bar class=\"language-score\" type=\"determinate\" [value]=\"(user?.languages?.english / 10)\"></ion-progress-bar>\n      </ion-col>\n    </ion-row>\n    <ion-row class=\"language-item-row\">\n      <ion-col class=\"language-item\">\n        <span class=\"language-name\">Spanish</span>\n        <ion-progress-bar class=\"language-score\" type=\"determinate\" [value]=\"(user?.languages?.spanish / 10)\"></ion-progress-bar>\n      </ion-col>\n    </ion-row>\n    <ion-row class=\"language-item-row\">\n      <ion-col class=\"language-item\">\n        <span class=\"language-name\">French</span>\n        <ion-progress-bar class=\"language-score\" type=\"determinate\" [value]=\"(user?.languages?.french / 10)\"></ion-progress-bar>\n      </ion-col>\n    </ion-row>\n  </section>\n\n  <section class=\"content-section user-experience-wrapper\">\n    <h5 class=\"section-header\">Skills</h5>\n    <ion-list class=\"experience-list\" lines=\"none\">\n      <ion-item class=\"experience-item\" *ngFor=\"let skill of user?.skills\">\n        <label class=\"experience-label\">\n          <app-text-shell animation=\"bouncing\" [data]=\"skill?.name\"></app-text-shell>\n        </label>\n        <ion-icon class=\"experience-list-icon\" slot=\"start\" name=\"checkmark\" color=\"secondary\"></ion-icon>\n      </ion-item>\n    </ion-list>\n  </section>\n\n  <section class=\"content-section related-users-wrapper\" *ngIf=\"relatedUsers?.length > 0\">\n    <h5 class=\"section-header\">Users with similar skills</h5>\n    <ion-row class=\"related-users-row\">\n      <ion-col class=\"related-user-item\" *ngFor=\"let user of relatedUsers\">\n        <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n          <app-image-shell [display]=\"'cover'\" class=\"related-user-picture\" [src]=\"user.avatar\" [routerLink]=\"['/firebase/crud/details', user.id]\"></app-image-shell>\n        </app-aspect-ratio>\n        <span class=\"related-user-name\">\n          <app-text-shell [data]=\"user.name\"></app-text-shell>\n        </span>\n      </ion-col>\n    </ion-row>\n  </section>\n</ion-content>\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { FirebaseCombinedUserModel } from './firebase-user.model';\nimport { FirebaseListingItemModel } from '../listing/firebase-listing.model';\n\nimport { DataStore } from '../../../shell/data-store';\nimport { FirebaseCrudService } from '../firebase-crud.service';\n\n@Injectable()\nexport class FirebaseUserDetailsResolver implements Resolve<any> {\n\n  constructor(private firebaseCrudService: FirebaseCrudService) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const userId = route.paramMap.get('id');\n\n    // We created a FirebaseCombinedUserModel to combine the userData with the details of the userSkills (from the skills collection).\n    // They are 2 different collections and we need to combine them into 1 dataSource.\n\n    const combinedUserDataSource: Observable<FirebaseCombinedUserModel> = this.firebaseCrudService\n    .getCombinedUserDataSource(userId);\n\n    const combinedUserDataStore: DataStore<FirebaseCombinedUserModel> = this.firebaseCrudService\n    .getCombinedUserStore(combinedUserDataSource);\n\n\n    // The user details page has a section with related users, showing users with the same skills\n    // For this we created another datastore which depends on the combinedUser data store\n    // The DataStore subscribes to the DataSource, to avoid creating two subscribers to the combinedUserDataSource,\n    // use the combinedUserDataStore timeline instead. (The timeline is a Subject, and is intended to have many subscribers)\n    // Using, and thus subscribing to the timeline won't trigger two requests to the firebase endpoint\n    const relatedUsersDataSource: Observable<Array<FirebaseListingItemModel>> = this.firebaseCrudService\n    .getRelatedUsersDataSource(combinedUserDataStore.state, userId);\n\n    const relatedUsersDataStore: DataStore<Array<FirebaseListingItemModel>> = this.firebaseCrudService\n    .getRelatedUsersStore(relatedUsersDataSource);\n\n    return {user: combinedUserDataStore, relatedUsers: relatedUsersDataStore};\n  }\n}\n"],"sourceRoot":"webpack:///"}