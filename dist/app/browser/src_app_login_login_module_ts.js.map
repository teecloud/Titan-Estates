{"version":3,"file":"src_app_login_login_module_ts.js","mappings":"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","sources":["./src/app/login/login.module.ts","./src/app/login/login.page.ts","./src/app/login/login.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../components/components.module';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component } from '@angular/core';\nimport { Validators, UntypedFormGroup, UntypedFormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MenuController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: [\n    './styles/login.page.scss'\n  ]\n})\nexport class LoginPage {\n  loginForm: UntypedFormGroup;\n\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Enter a valid email.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 5 characters long.' }\n    ]\n  };\n\n  constructor(\n    public router: Router,\n    public menu: MenuController\n  ) {\n    this.loginForm = new UntypedFormGroup({\n      'email': new UntypedFormControl('test@test.com', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      'password': new UntypedFormControl('', Validators.compose([\n        Validators.minLength(5),\n        Validators.required\n      ]))\n    });\n  }\n\n  // Disable side menu for this page\n  ionViewDidEnter(): void {\n    this.menu.enable(false);\n  }\n\n  // Restore to default when leaving this page\n  ionViewDidLeave(): void {\n    this.menu.enable(true);\n  }\n\n  doLogin(): void {\n    console.log('do Log In');\n    this.router.navigate(['app/categories']);\n  }\n\n  goToForgotPassword(): void {\n    console.log('redirect to forgot-password page');\n  }\n\n  doFacebookLogin(): void {\n    console.log('facebook login');\n    this.router.navigate(['app/categories']);\n  }\n\n  doGoogleLogin(): void {\n    console.log('google login');\n    this.router.navigate(['app/categories']);\n  }\n\n  doTwitterLogin(): void {\n    console.log('twitter login');\n    this.router.navigate(['app/categories']);\n  }\n\n  doAppleLogin(): void {\n    console.log('apple login');\n    this.router.navigate(['app/categories']);\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>Log In</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"login-content\">\n  <h2 class=\"auth-title\">\n    Titan Estates\n    <br/>\n   \n  </h2>\n \n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"doLogin()\">\n    <ion-list class=\"inputs-list\" lines=\"full\">\n      <ion-item class=\"input-item\">\n        <ion-input type=\"email\" placeholder=\"Email\" formControlName=\"email\" clearInput autocapitalize=\"off\" inputmode=\"email\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.email\">\n          <div class=\"error-message\" *ngIf=\"loginForm.get('email').hasError(validation.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n\n      <ion-item class=\"input-item\">\n        <app-show-hide-password>\n          <ion-input type=\"password\" placeholder=\"Password\" formControlName=\"password\"></ion-input>\n        </app-show-hide-password>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.password\">\n          <div class=\"error-message\" *ngIf=\"loginForm.get('password').hasError(validation.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n    </ion-list>\n\n    <ion-button class=\"login-btn\" type=\"submit\" expand=\"block\" [disabled]=\"!loginForm.valid\">Log In</ion-button>\n    <ion-row class=\"other-auth-options-row\">\n      <ion-button class=\"forgot-btn\" fill=\"clear\" [routerLink]=\"['/auth/forgot-password']\">\n        Forgot Password?\n      </ion-button>\n      <ion-button class=\"signup-btn\" fill=\"clear\" [routerLink]=\"['/auth/signup']\">\n        Sign Up!\n      </ion-button>\n    </ion-row>\n  </form>\n\n  <div class=\"social-auth-options\">\n    <p class=\"options-divider\">Or</p>\n    <ion-button class=\"social-auth-btn facebook-auth-btn\" expand=\"block\" color=\"facebook\" (click)=\"doFacebookLogin()\">Log In with Facebook</ion-button>\n    <ion-button class=\"social-auth-btn google-auth-btn\" expand=\"block\" color=\"google\" (click)=\"doGoogleLogin()\">Log In with Google</ion-button>\n    <ion-button class=\"social-auth-btn twitter-auth-btn\" expand=\"block\" color=\"twitter\" (click)=\"doTwitterLogin()\">Log In with Twitter</ion-button>\n    <ion-button class=\"social-auth-btn apple-auth-btn\" expand=\"block\" color=\"dark\" (click)=\"doAppleLogin()\">Log In with Apple</ion-button>\n  </div>\n</ion-content>\n"],"names":["CommonModule","FormsModule","ReactiveFormsModule","RouterModule","IonicModule","ComponentsModule","LoginPage","routes","path","component","LoginPageModule","_","_2","_3","forChild","declarations","imports","i1","Validators","UntypedFormGroup","UntypedFormControl","Router","MenuController","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","validation_r2","message","ɵɵelementContainerStart","ɵɵtemplate","LoginPage_ng_container_15_div_1_Template","ɵɵelementContainerEnd","ɵɵproperty","ctx_r0","loginForm","get","hasError","type","dirty","touched","validation_r5","LoginPage_ng_container_20_div_1_Template","ctx_r1","constructor","router","menu","validation_messages","compose","required","pattern","minLength","ionViewDidEnter","enable","ionViewDidLeave","doLogin","console","log","navigate","goToForgotPassword","doFacebookLogin","doGoogleLogin","doTwitterLogin","doAppleLogin","ɵɵdirectiveInject","i2","selectors","decls","vars","consts","template","LoginPage_Template","rf","ctx","ɵɵlistener","LoginPage_Template_form_ngSubmit_10_listener","LoginPage_ng_container_15_Template","LoginPage_ng_container_20_Template","LoginPage_Template_ion_button_click_31_listener","LoginPage_Template_ion_button_click_33_listener","LoginPage_Template_ion_button_click_35_listener","LoginPage_Template_ion_button_click_37_listener","email","password","valid","ɵɵpureFunction0","_c0","_c1"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}