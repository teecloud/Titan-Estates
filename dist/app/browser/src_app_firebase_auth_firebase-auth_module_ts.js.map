{"version":3,"file":"src_app_firebase_auth_firebase-auth_module_ts.js","mappings":"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","sources":["./src/app/firebase/auth/firebase-auth-definitions.ts","./src/app/firebase/auth/firebase-auth.helper.ts","./src/app/firebase/auth/firebase-auth.module.ts","./src/app/firebase/auth/firebase-auth.service.ts","./src/app/firebase/auth/profile/firebase-profile.model.ts","./src/app/shell/data-store.ts","./node_modules/@capacitor-firebase/authentication/dist/esm/definitions.js","./node_modules/@capacitor-firebase/authentication/dist/esm/index.js"],"sourcesContent":["export enum SignInProvider {\n  apple = 'apple.com',\n  facebook = 'facebook.com',\n  google = 'google.com',\n  twitter = 'twitter.com'\n}\n","import { Injectable } from '@angular/core';\n\nimport { FacebookAuthProvider, getAdditionalUserInfo, GoogleAuthProvider, OAuthProvider, TwitterAuthProvider } from '@angular/fire/auth';\nimport {\n  AuthCredential as FirebaseAuthCredential,\n  AuthProvider as FirebaseAuthProvider,\n  CustomParameters as FirebaseCustomParameters,\n  OAuthCredential,\n  User as FirebaseUser,\n  UserCredential as FirebaseUserCredential\n} from '@angular/fire/auth';\n\nimport { AuthCredential, SignInResult, User, AdditionalUserInfo, SignInOptions } from '@capacitor-firebase/authentication';\n\n\n// * Aux methods inspired on the @capacitor-firebase/authentication library\n@Injectable()\nexport class FirebaseAuthHelper {\n\n  public applySignInOptions(options: SignInOptions, provider: OAuthProvider | GoogleAuthProvider | FacebookAuthProvider | TwitterAuthProvider) {\n    if (options.customParameters) {\n      const customParameters: FirebaseCustomParameters = {};\n      options.customParameters.map(parameter => {\n        customParameters[parameter.key] = parameter.value;\n      });\n      provider.setCustomParameters(customParameters);\n    }\n    if (options.scopes) {\n      for (const scope of options.scopes) {\n        provider.addScope(scope);\n      }\n    }\n  }\n\n  // ? (see: https://github.com/capawesome-team/capacitor-firebase/blob/9024eef856dbd25b2b6459e4b6bcee104ca89755/packages/authentication/src/web.ts#L594)\n  public createSignInResult(userCredential: FirebaseUserCredential | null, authCredential: FirebaseAuthCredential | null): SignInResult {\n    const userResult = this.createUserResult(userCredential?.user || null);\n    const credentialResult = this.createCredentialResult(authCredential);\n    const additionalUserInfoResult = this.createAdditionalUserInfoResult(userCredential);\n    const result: SignInResult = {\n      user: userResult,\n      credential: credentialResult,\n      additionalUserInfo: additionalUserInfoResult\n    };\n    return result;\n  }\n\n  // ? (see: https://github.com/capawesome-team/capacitor-firebase/blob/9024eef856dbd25b2b6459e4b6bcee104ca89755/packages/authentication/src/web.ts#L627)\n  public createUserResult(user: FirebaseUser | null): User | null {\n    if (!user) {\n      return null;\n    }\n    const result: User = {\n      displayName: user.displayName,\n      email: user.email,\n      emailVerified: user.emailVerified,\n      isAnonymous: user.isAnonymous,\n      phoneNumber: user.phoneNumber,\n      photoUrl: user.providerData[0].photoURL,\n      providerId: user.providerData[0].providerId,\n      tenantId: user.tenantId,\n      uid: user.uid\n    };\n    return result;\n  }\n\n  // ? (see: https://github.com/capawesome-team/capacitor-firebase/blob/9024eef856dbd25b2b6459e4b6bcee104ca89755/packages/authentication/src/web.ts#L610)\n  private createCredentialResult(credential: FirebaseAuthCredential | null): AuthCredential | null {\n    if (!credential) {\n      return null;\n    }\n    const result: AuthCredential = {\n      providerId: credential.providerId\n    };\n    if (credential instanceof OAuthCredential) {\n      result.accessToken = credential.accessToken;\n      result.idToken = credential.idToken;\n      result.secret = credential.secret;\n    }\n    return result;\n  }\n\n  // ? (see: https://github.com/capawesome-team/capacitor-firebase/blob/9024eef856dbd25b2b6459e4b6bcee104ca89755/packages/authentication/src/web.ts#L645)\n  private createAdditionalUserInfoResult(credential: FirebaseUserCredential | null): AdditionalUserInfo | null {\n    if (!credential) {\n      return null;\n    }\n    const additionalUserInfo = getAdditionalUserInfo(credential);\n    if (!additionalUserInfo) {\n      return null;\n    }\n    const { isNewUser, profile, providerId, username } = additionalUserInfo;\n    const result: AdditionalUserInfo = {\n      isNewUser\n    };\n    if (providerId !== null) {\n      result.providerId = providerId;\n    }\n    if (profile !== null) {\n      result.profile = profile as { [key: string]: unknown };\n    }\n    if (username !== null && username !== undefined) {\n      result.username = username;\n    }\n    return result;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\n\nimport { Capacitor } from '@capacitor/core';\n\nimport { getApp, initializeApp, provideFirebaseApp } from '@angular/fire/app';\nimport { provideAuth, getAuth, initializeAuth, indexedDBLocalPersistence } from '@angular/fire/auth';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { environment } from '../../../environments/environment';\nimport { FirebaseAuthService } from './firebase-auth.service';\nimport { FirebaseAuthHelper } from './firebase-auth.helper';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      // ? /firebase/auth redirect\n      {\n        path: '',\n        redirectTo: 'sign-in',\n        pathMatch: 'full',\n      },\n      {\n        path: 'sign-in',\n        loadChildren: () => import('./sign-in/firebase-sign-in.module').then(m => m.FirebaseSignInPageModule)\n      },\n      {\n        path: 'sign-up',\n        loadChildren: () => import('./sign-up/firebase-sign-up.module').then(m => m.FirebaseSignUpPageModule)\n      },\n      {\n        path: 'profile',\n        loadChildren: () => import('./profile/firebase-profile.module').then(m => m.FirebaseProfilePageModule)\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    ComponentsModule,\n    RouterModule.forChild(routes),\n    // ? Correct way to initialize Firebase using the Capacitor Firebase plugin mixed with the Firebase JS SDK (@angular/fire)\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideAuth(() => {\n      if (Capacitor.isNativePlatform()) {\n        return initializeAuth(getApp(), {\n          persistence: indexedDBLocalPersistence\n          // persistence: browserLocalPersistence\n          // popupRedirectResolver: browserPopupRedirectResolver\n        });\n      } else {\n        return getAuth();\n      }\n    })\n  ],\n  providers: [\n    FirebaseAuthService,\n    FirebaseAuthHelper\n  ]\n})\nexport class FirebaseAuthModule {}\n","import { Inject, Injectable, NgZone, OnDestroy, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser, Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoadingController, Platform } from '@ionic/angular';\n\nimport { Observable, Subject, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AuthProvider, FacebookAuthProvider, GoogleAuthProvider, TwitterAuthProvider, OAuthProvider, OAuthCredential, UserCredential, createUserWithEmailAndPassword, getAuth, getRedirectResult, signInWithCredential, signInWithEmailAndPassword, signInWithPopup, signInWithRedirect, signOut } from '@angular/fire/auth';\n\nimport type {\n  User as FirebaseUser\n} from '@angular/fire/auth';\n\nimport { AuthStateChange, FirebaseAuthentication, SignInResult, SignInWithOAuthOptions, User } from '@capacitor-firebase/authentication';\n\nimport { DataStore } from '../../shell/data-store';\nimport { FirebaseProfileModel } from './profile/firebase-profile.model';\nimport { SignInProvider } from './firebase-auth-definitions';\nimport { FirebaseAuthHelper } from './firebase-auth.helper';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseAuthService implements OnDestroy {\n  currentUser: User;\n  authLoader: HTMLIonLoadingElement;\n  profileDataStore: DataStore<FirebaseProfileModel>;\n  redirectResultSubject: Subject<any> = new Subject<any>();\n  authStateSubject: Subject<AuthStateChange> = new Subject<AuthStateChange>();\n\n  constructor(\n    public router: Router,\n    public route: ActivatedRoute,\n    public platform: Platform,\n    private ngZone: NgZone,\n    private firebaseAuthHelper: FirebaseAuthHelper,\n    public loadingController: LoadingController,\n    public location: Location,\n    @Inject(PLATFORM_ID) private platformId: object\n  ) {\n    if (isPlatformBrowser(this.platformId)) {\n      FirebaseAuthentication.removeAllListeners().then(() => {\n        FirebaseAuthentication.addListener('authStateChange', (change: AuthStateChange) => {\n          this.ngZone.run(() => {\n            this.authStateSubject.next(change);\n          });\n\n          if (change?.user) {\n            // ? User is signed in.\n            this.currentUser = change.user;\n          } else {\n            // ? No user is signed in.\n            this.currentUser = null;\n          }\n        });\n      });\n\n      // ? We should only listen for firebase auth redirect results when we have the flag 'auth-redirect' in the query params\n      this.route.queryParams.subscribe(params => {\n        const authProvider = params['auth-redirect'];\n\n        if (authProvider) {\n          // ? Show a loader while we receive the getRedirectResult notification\n          this.presentLoading(authProvider);\n\n          // ? When using signInWithRedirect, this listens for the redirect results\n          const auth = getAuth();\n          getRedirectResult(auth)\n          .then((result: UserCredential) => {\n            // ? result.credential.accessToken gives you the Provider Access Token. You can use it to access the Provider API.\n            // const credential = FacebookAuthProvider.credentialFromResult(result);\n            // const token = credential.accessToken;\n\n            let credential: any;\n\n            if (result && result !== null) {\n              switch (result.providerId) {\n                case SignInProvider.apple:\n                  credential = OAuthProvider.credentialFromResult(result);\n                  break;\n                case SignInProvider.facebook:\n                  credential = FacebookAuthProvider.credentialFromResult(result);\n                  break;\n                case SignInProvider.google:\n                  credential = GoogleAuthProvider.credentialFromResult(result);\n                  break;\n                case SignInProvider.twitter:\n                  credential = TwitterAuthProvider.credentialFromResult(result);\n                  break;\n              }\n\n              const signInResult = firebaseAuthHelper.createSignInResult(result, credential);\n\n              this.dismissLoading();\n\n              this.redirectResultSubject.next(signInResult);\n            } else {\n              throw new Error('Could not get user from redirect result');\n            }\n          }, (reason) => {\n            console.log('Promise rejected', reason);\n\n            // ? Clear redirection loading\n            this.clearAuthWithProvidersRedirection();\n          }).catch((error) => {\n            // ? Clear redirection loading\n            this.clearAuthWithProvidersRedirection();\n\n            // ? Handle Errors here\n            // const errorCode = error.code;\n            // const errorMessage = error.message;\n            // ? The email of the user's account used.\n            // const email = error.email;\n            // ?AuthCredential type that was used.\n            // const credential = FacebookAuthProvider.credentialFromError(error);\n\n            let errorResult = {error: 'undefined'};\n\n            if (error && (error.code || error.message)) {\n              errorResult = {error: (error.code ? error.code : error.message)};\n            }\n\n            this.redirectResultSubject.next(errorResult);\n          });\n        }\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.dismissLoading();\n  }\n\n  private prepareForAuthWithProvidersRedirection(authProviderId: string): void {\n    // ? Before invoking auth provider redirect flow, add a flag to the path.\n    // ? The presence of the flag in the path indicates we should wait for the auth redirect to complete\n    this.location.replaceState(this.location.path(), 'auth-redirect=' + authProviderId, this.location.getState());\n  }\n\n  private clearAuthWithProvidersRedirection(): void {\n    // ? Remove auth-redirect param from url\n    this.location.replaceState(this.router.url.split('?')[0], '');\n    this.dismissLoading();\n  }\n\n  private async presentLoading(authProviderId?: string): Promise<void> {\n    const authProviderCapitalized = authProviderId[0].toUpperCase() + authProviderId.slice(1);\n\n    this.loadingController.create({\n      message: authProviderId ? 'Signing in with ' + authProviderCapitalized : 'Signing in ...',\n      duration: 4000\n    }).then((loader) => {\n      this.authLoader = loader;\n      this.authLoader.present();\n    });\n  }\n\n  private async dismissLoading(): Promise<void> {\n    if (this.authLoader) {\n      await this.authLoader.dismiss();\n    }\n  }\n\n  public async signOut(): Promise<string> {\n    const signOutPromise = new Promise<string>((resolve, reject) => {\n      // * 1. Sign out on the native layer\n      FirebaseAuthentication.signOut()\n      .then((nativeResult) => {\n        // * 2. Sign out on the web layer\n        const auth = getAuth();\n        signOut(auth)\n        .then((webResult) => {\n          // ? Sign-out successful\n          resolve('Successfully sign out from native and web');\n        }).catch((webError) => {\n          // ? An error happened\n          reject(`Web auth sign out error: ${webError}`);\n        });\n      })\n      .catch((nativeError) => {\n        reject(`Native auth sign out error: ${nativeError}`);\n      });\n    });\n\n    return signOutPromise;\n  }\n\n  private async socialSignIn(provider: (OAuthProvider | GoogleAuthProvider | FacebookAuthProvider | TwitterAuthProvider), authOptions?: SignInWithOAuthOptions): Promise<SignInResult> {\n    this.presentLoading(provider.providerId);\n\n    let authResult: SignInResult = null;\n\n    if (this.platform.is('capacitor')) {\n      authResult = await this.nativeAuth(provider, authOptions);\n    } else {\n      authResult = await this.webAuth(provider, authOptions);\n    }\n\n    this.dismissLoading();\n\n    if (authResult !== null) {\n      return authResult;\n    } else {\n      return Promise.reject('Could not perform social sign in, authResult is null');\n    }\n  }\n\n  private async webAuth(provider: (OAuthProvider | GoogleAuthProvider | FacebookAuthProvider | TwitterAuthProvider), authOptions?: SignInWithOAuthOptions): Promise<SignInResult> {\n    const auth = getAuth();\n    let webAuthUserCredential: UserCredential = null;\n\n    this.firebaseAuthHelper.applySignInOptions(authOptions || {}, provider);\n\n    if (this.platform.is('desktop')) {\n      webAuthUserCredential = await signInWithPopup(auth, provider);\n    } else {\n      // ? Web but not desktop, for example mobile PWA\n      this.prepareForAuthWithProvidersRedirection(provider.providerId);\n      return signInWithRedirect(auth, provider);\n\n      // ? If you prefer to use signInWithPopup in every scenario, just un-comment this line\n      // webAuthUserCredential = await signInWithPopup(auth, provider);\n    }\n\n    if (webAuthUserCredential && webAuthUserCredential !== null) {\n      let webCredential: OAuthCredential = null;\n\n      switch (provider.providerId) {\n        case SignInProvider.apple:\n          webCredential = OAuthProvider.credentialFromResult(webAuthUserCredential);\n          break;\n        case SignInProvider.facebook:\n          webCredential = FacebookAuthProvider.credentialFromResult(webAuthUserCredential);\n          break;\n        case SignInProvider.google:\n          webCredential = GoogleAuthProvider.credentialFromResult(webAuthUserCredential);\n          break;\n        case SignInProvider.twitter:\n          webCredential = TwitterAuthProvider.credentialFromResult(webAuthUserCredential);\n          break;\n      }\n\n      return this.firebaseAuthHelper.createSignInResult(webAuthUserCredential, webCredential);\n    } else {\n      return Promise.reject('null webAuthUserCredential');\n    }\n  }\n\n  private async nativeAuth(provider: AuthProvider, authOptions?: SignInWithOAuthOptions): Promise<SignInResult> {\n    let nativeAuthResult: SignInResult = null;\n\n    // * 1. Sign in on the native layer\n    switch (provider.providerId) {\n      case SignInProvider.apple:\n        nativeAuthResult = await FirebaseAuthentication.signInWithApple(authOptions);\n        break;\n      case SignInProvider.facebook:\n        nativeAuthResult = await FirebaseAuthentication.signInWithFacebook(authOptions);\n        break;\n      case SignInProvider.google:\n        nativeAuthResult = await FirebaseAuthentication.signInWithGoogle(authOptions);\n        break;\n      case SignInProvider.twitter:\n        nativeAuthResult = await FirebaseAuthentication.signInWithTwitter(authOptions);\n        break;\n    }\n\n    // ? Once we have the user authenticated on the native layer, authenticate it in the web layer\n    if (nativeAuthResult && nativeAuthResult !== null) {\n      const auth = getAuth();\n      let nativeCredential: OAuthCredential = null;\n\n      switch (provider.providerId) {\n        case SignInProvider.apple:\n          const provider = new OAuthProvider(SignInProvider.apple);\n          nativeCredential = provider.credential({\n            idToken: nativeAuthResult.credential?.idToken,\n            rawNonce: nativeAuthResult.credential?.nonce\n          });\n          break;\n        case SignInProvider.facebook:\n          nativeCredential = FacebookAuthProvider.credential(\n            nativeAuthResult.credential?.accessToken\n          );\n          break;\n        case SignInProvider.google:\n          nativeCredential = GoogleAuthProvider.credential(\n            nativeAuthResult.credential?.idToken,\n            nativeAuthResult.credential?.accessToken\n          );\n          break;\n        case SignInProvider.twitter:\n          try {\n            nativeCredential = TwitterAuthProvider.credential(\n              nativeAuthResult.credential?.accessToken,\n              nativeAuthResult.credential?.secret\n            );\n            break;\n          } catch (error) {\n            console.error(error);\n          }\n      }\n\n      // * 2. Sign in on the web layer using the access token we got from the native sign in\n      const webAuthResult = await signInWithCredential(auth, nativeCredential);\n\n      return this.firebaseAuthHelper.createSignInResult(webAuthResult, nativeCredential);\n    } else {\n      return Promise.reject('null nativeAuthResult');\n    }\n  }\n\n  public async signInWithFacebook(): Promise<SignInResult> {\n    const provider = new FacebookAuthProvider();\n    const authOptions: SignInWithOAuthOptions = {\n      scopes: ['email', 'public_profile']\n    };\n\n    // ? When we use the redirect authentication flow, the code below the socialSignIn() invocation does not get executed as we leave the current page\n    return this.socialSignIn(provider, authOptions);\n  }\n\n  public async signInWithGoogle(): Promise<SignInResult> {\n    const provider = new GoogleAuthProvider();\n    const authOptions: SignInWithOAuthOptions = {\n      scopes: ['email', 'profile']\n    };\n\n    // ? When we use the redirect authentication flow, the code below the socialSignIn() invocation does not get executed as we leave the current page\n    return this.socialSignIn(provider, authOptions);\n  }\n\n  public async signInWithTwitter(): Promise<SignInResult> {\n    const provider = new TwitterAuthProvider();\n    const authOptions: SignInWithOAuthOptions = {\n      scopes: ['email', 'name']\n    };\n\n    // ? When we use the redirect authentication flow, the code below the socialSignIn() invocation does not get executed as we leave the current page\n    return this.socialSignIn(provider, authOptions);\n  }\n\n  public async signInWithApple(): Promise<SignInResult> {\n    const provider = new OAuthProvider('apple.com');\n    const authOptions: SignInWithOAuthOptions = {\n      scopes: ['email', 'name']\n    };\n\n    // ? When we use the redirect authentication flow, the code below the socialSignIn() invocation does not get executed as we leave the current page\n    return this.socialSignIn(provider, authOptions);\n  }\n\n  public async signInWithEmail(email: string, password: string): Promise<SignInResult> {\n    // ? Show a loader while we attempt to perform the login\n    this.presentLoading('email');\n\n    const auth = getAuth();\n    const credential = await signInWithEmailAndPassword(auth, email, password);\n\n    this.dismissLoading();\n\n    return this.firebaseAuthHelper.createSignInResult(credential, null);\n  }\n\n  public async signUpWithEmail(email: string, password: string): Promise<SignInResult> {\n    // ? Show a loader while we attempt to perform the signup\n    this.presentLoading('email');\n\n    const auth = getAuth();\n    const credential = await createUserWithEmailAndPassword(auth, email, password);\n\n    this.dismissLoading();\n\n    return this.firebaseAuthHelper.createSignInResult(credential, null);\n  }\n\n  public get redirectResult$(): Observable<any> {\n    return this.redirectResultSubject.asObservable();\n  }\n\n  public get authState$(): Observable<AuthStateChange> {\n    return this.authStateSubject.asObservable();\n  }\n\n  public getProfileDataSource(): Observable<FirebaseProfileModel> {\n    const auth = getAuth();\n    return of(auth.currentUser)\n    .pipe(\n      filter((user: FirebaseUser) => user != null),\n      map((user: FirebaseUser) => {\n        const userResult = this.firebaseAuthHelper.createUserResult(user);\n        return this.setUserModelForProfile(userResult);\n      })\n    );\n  }\n\n  private setUserModelForProfile(userResult?: (User | null)): FirebaseProfileModel {\n    const userModel = new FirebaseProfileModel();\n\n    if (userResult) {\n      userModel.image = this.getPhotoURL(userResult.providerId, userResult.photoUrl);\n      userModel.name = userResult.displayName || 'What\\'s your name?';\n      userModel.role = 'How would you describe yourself?';\n      userModel.description = 'Anything else you would like to share with the world?';\n      userModel.phoneNumber = userResult.phoneNumber || 'Is there a number where I can reach you?';\n      userModel.email = userResult.email || 'Where can I send you emails?';\n      userModel.provider = (userResult.providerId !== 'password') ? userResult.providerId : 'Credentials';\n    }\n\n    return userModel;\n  }\n\n  public getProfileStore(dataSource: Observable<FirebaseProfileModel>): DataStore<FirebaseProfileModel> {\n    // ? Initialize the model specifying that it is a shell model\n    const shellModel: FirebaseProfileModel = new FirebaseProfileModel();\n    this.profileDataStore = new DataStore(shellModel);\n    // ? Trigger the loading mechanism (with shell) in the dataStore\n    this.profileDataStore.load(dataSource);\n    return this.profileDataStore;\n  }\n\n  private getPhotoURL(signInProviderId: string, photoURL: string): string {\n    // ? Default imgs are too small and our app needs a bigger image\n    switch (signInProviderId) {\n      case SignInProvider.facebook:\n        return photoURL + '?height=400';\n      case SignInProvider.twitter:\n        return photoURL.replace('_normal', '_400x400');\n      case SignInProvider.google:\n        return photoURL.split('=')[0];\n      case 'password':\n        return 'https://s3-us-west-2.amazonaws.com/ionicthemes/otros/avatar-placeholder.png';\n      default:\n        return photoURL;\n    }\n  }\n}\n","import { ShellModel } from '../../../shell/data-store';\n\nexport class FirebaseProfileModel extends ShellModel {\n  image: string;\n  name: string;\n  role: string;\n  description: string;\n  email: string;\n  provider: string;\n  phoneNumber: string;\n\n  constructor() {\n    super();\n  }\n}\n","import { Observable, of, combineLatest, ReplaySubject } from 'rxjs';\nimport { delay, map, startWith } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\nexport class ShellModel {\n  isShell = false;\n}\n\nexport class DataStore<T> {\n  // We wait on purpose 2 secs on local environment when fetching from json to simulate the backend roundtrip.\n  // However, in production you should set this delay to 0 in the environment.prod file.\n  // eslint-disable-next-line max-len\n  private networkDelay = (environment.appShellConfig && environment.appShellConfig.networkDelay) ? environment.appShellConfig.networkDelay : 0;\n\n  private timeline: ReplaySubject<T & ShellModel> = new ReplaySubject(1);\n\n  constructor(private shellModel: T) { }\n\n  // Static function with generics\n  // (ref: https://stackoverflow.com/a/24293088/1116959)\n  // Append a shell (T & ShellModel) to every value (T) emmited to the timeline\n  public static AppendShell<T>(dataObservable: Observable<T>, shellModel: T, networkDelay = 400): Observable<T & ShellModel> {\n    const delayObservable = of(true).pipe(\n      delay(networkDelay)\n    );\n\n    // Assign shell flag accordingly\n    // (ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n    return combineLatest([\n      delayObservable,\n      dataObservable\n    ]).pipe(\n      // Dismiss unnecessary delayValue\n      map(([delayValue, dataValue]: [boolean, T]): (T & ShellModel) => Object.assign(dataValue, {isShell: false})),\n      // Set the shell model as the initial value\n      startWith(Object.assign(shellModel, {isShell: true}))\n    );\n  }\n\n  load(dataSourceObservable: Observable<T>, networkDelay?: number): void {\n    // eslint-disable-next-line no-shadow, @typescript-eslint/no-shadow\n    const delay = (typeof networkDelay === 'number') ? networkDelay : this.networkDelay;\n\n    let processedDataSource: Observable<any>;\n\n    // If no network delay, then don't show shell\n    if (delay === 0) {\n      processedDataSource = dataSourceObservable;\n    } else {\n      processedDataSource = DataStore.AppendShell(dataSourceObservable, this.shellModel, delay);\n    }\n\n    processedDataSource\n    .subscribe((dataValue: T & ShellModel) => {\n      this.timeline.next(dataValue);\n    });\n  }\n\n  public get state(): Observable<T & ShellModel> {\n    return this.timeline.asObservable();\n  }\n}\n","/// <reference types=\"@capacitor/cli\" />\nexport var ProviderId;\n(function (ProviderId) {\n    ProviderId[\"APPLE\"] = \"apple.com\";\n    ProviderId[\"FACEBOOK\"] = \"facebook.com\";\n    ProviderId[\"GAME_CENTER\"] = \"gc.apple.com\";\n    ProviderId[\"GITHUB\"] = \"github.com\";\n    ProviderId[\"GOOGLE\"] = \"google.com\";\n    ProviderId[\"MICROSOFT\"] = \"microsoft.com\";\n    ProviderId[\"PLAY_GAMES\"] = \"playgames.google.com\";\n    ProviderId[\"TWITTER\"] = \"twitter.com\";\n    ProviderId[\"YAHOO\"] = \"yahoo.com\";\n    ProviderId[\"PASSWORD\"] = \"password\";\n    ProviderId[\"PHONE\"] = \"phone\";\n})(ProviderId || (ProviderId = {}));\n","import { registerPlugin } from '@capacitor/core';\nconst FirebaseAuthentication = registerPlugin('FirebaseAuthentication', {\n    web: () => import('./web').then(m => new m.FirebaseAuthenticationWeb()),\n});\nexport * from './definitions';\nexport { FirebaseAuthentication };\n"],"names":["SignInProvider","getAdditionalUserInfo","AuthCredential","FirebaseAuthCredential","CustomParameters","FirebaseCustomParameters","OAuthCredential","User","FirebaseUser","UserCredential","FirebaseUserCredential","FirebaseAuthHelper","applySignInOptions","options","provider","customParameters","map","parameter","key","value","setCustomParameters","scopes","scope","addScope","createSignInResult","userCredential","authCredential","userResult","createUserResult","user","credentialResult","createCredentialResult","additionalUserInfoResult","createAdditionalUserInfoResult","result","credential","additionalUserInfo","displayName","email","emailVerified","isAnonymous","phoneNumber","photoUrl","providerData","photoURL","providerId","tenantId","uid","accessToken","idToken","secret","isNewUser","profile","username","undefined","_","_2","factory","ɵfac","CommonModule","RouterModule","IonicModule","Capacitor","getApp","initializeApp","provideFirebaseApp","provideAuth","getAuth","initializeAuth","indexedDBLocalPersistence","ComponentsModule","environment","FirebaseAuthService","routes","path","children","redirectTo","pathMatch","loadChildren","then","m","FirebaseSignInPageModule","FirebaseSignUpPageModule","FirebaseProfilePageModule","FirebaseAuthModule","_3","imports","forChild","firebase","isNativePlatform","persistence","i1","i2","FirebaseAppModule","i3","AuthModule","NgZone","PLATFORM_ID","isPlatformBrowser","Location","ActivatedRoute","Router","LoadingController","Platform","Subject","of","filter","FacebookAuthProvider","GoogleAuthProvider","TwitterAuthProvider","OAuthProvider","createUserWithEmailAndPassword","getRedirectResult","signInWithCredential","signInWithEmailAndPassword","signInWithPopup","signInWithRedirect","signOut","FirebaseAuthentication","DataStore","FirebaseProfileModel","constructor","router","route","platform","ngZone","firebaseAuthHelper","loadingController","location","platformId","redirectResultSubject","authStateSubject","removeAllListeners","addListener","change","run","next","currentUser","queryParams","subscribe","params","authProvider","presentLoading","auth","apple","credentialFromResult","facebook","google","twitter","signInResult","dismissLoading","Error","reason","console","log","clearAuthWithProvidersRedirection","catch","error","errorResult","code","message","ngOnDestroy","prepareForAuthWithProvidersRedirection","authProviderId","replaceState","getState","url","split","_this","_asyncToGenerator","authProviderCapitalized","toUpperCase","slice","create","duration","loader","authLoader","present","_this2","dismiss","signOutPromise","Promise","resolve","reject","nativeResult","webResult","webError","nativeError","socialSignIn","authOptions","_this3","authResult","is","nativeAuth","webAuth","_this4","webAuthUserCredential","webCredential","_this5","nativeAuthResult","signInWithApple","signInWithFacebook","signInWithGoogle","signInWithTwitter","nativeCredential","rawNonce","nonce","webAuthResult","_this6","_this7","_this8","_this9","signInWithEmail","password","_this10","signUpWithEmail","_this11","redirectResult$","asObservable","authState$","getProfileDataSource","pipe","setUserModelForProfile","userModel","image","getPhotoURL","name","role","description","getProfileStore","dataSource","shellModel","profileDataStore","load","signInProviderId","replace","i0","ɵɵinject","i4","providedIn","ShellModel","combineLatest","ReplaySubject","delay","startWith","isShell","networkDelay","appShellConfig","timeline","AppendShell","dataObservable","delayObservable","delayValue","dataValue","Object","assign","dataSourceObservable","processedDataSource","state","ProviderId","registerPlugin","web","FirebaseAuthenticationWeb"],"sourceRoot":"webpack:///","x_google_ignoreList":[6,7]}