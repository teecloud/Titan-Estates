{"version":3,"file":"src_app_shell_data-store_ts-src_app_showcase_route-resolvers-ux_route-resolvers-ux_module_ts.js","mappings":"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","sources":["./src/app/shell/data-store.ts","./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking-resolvers.page.ts","./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking-resolvers.page.html","./src/app/showcase/route-resolvers-ux/blocking-resolvers/blocking.resolver.ts","./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking-resolvers.page.ts","./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking-resolvers.page.html","./src/app/showcase/route-resolvers-ux/non-blocking-resolvers/non-blocking.resolver.ts","./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell-resolvers.page.ts","./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell-resolvers.page.html","./src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell.resolver.ts","./src/app/showcase/route-resolvers-ux/route-resolvers-ux.module.ts","./src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.ts","./src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.html"],"sourcesContent":["import { Observable, of, combineLatest, ReplaySubject } from 'rxjs';\nimport { delay, map, startWith } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\nexport class ShellModel {\n  isShell = false;\n}\n\nexport class DataStore<T> {\n  // We wait on purpose 2 secs on local environment when fetching from json to simulate the backend roundtrip.\n  // However, in production you should set this delay to 0 in the environment.prod file.\n  // eslint-disable-next-line max-len\n  private networkDelay = (environment.appShellConfig && environment.appShellConfig.networkDelay) ? environment.appShellConfig.networkDelay : 0;\n\n  private timeline: ReplaySubject<T & ShellModel> = new ReplaySubject(1);\n\n  constructor(private shellModel: T) { }\n\n  // Static function with generics\n  // (ref: https://stackoverflow.com/a/24293088/1116959)\n  // Append a shell (T & ShellModel) to every value (T) emmited to the timeline\n  public static AppendShell<T>(dataObservable: Observable<T>, shellModel: T, networkDelay = 400): Observable<T & ShellModel> {\n    const delayObservable = of(true).pipe(\n      delay(networkDelay)\n    );\n\n    // Assign shell flag accordingly\n    // (ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n    return combineLatest([\n      delayObservable,\n      dataObservable\n    ]).pipe(\n      // Dismiss unnecessary delayValue\n      map(([delayValue, dataValue]: [boolean, T]): (T & ShellModel) => Object.assign(dataValue, {isShell: false})),\n      // Set the shell model as the initial value\n      startWith(Object.assign(shellModel, {isShell: true}))\n    );\n  }\n\n  load(dataSourceObservable: Observable<T>, networkDelay?: number): void {\n    // eslint-disable-next-line no-shadow, @typescript-eslint/no-shadow\n    const delay = (typeof networkDelay === 'number') ? networkDelay : this.networkDelay;\n\n    let processedDataSource: Observable<any>;\n\n    // If no network delay, then don't show shell\n    if (delay === 0) {\n      processedDataSource = dataSourceObservable;\n    } else {\n      processedDataSource = DataStore.AppendShell(dataSourceObservable, this.shellModel, delay);\n    }\n\n    processedDataSource\n    .subscribe((dataValue: T & ShellModel) => {\n      this.timeline.next(dataValue);\n    });\n  }\n\n  public get state(): Observable<T & ShellModel> {\n    return this.timeline.asObservable();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// You can also use a Class object as a shell model\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\n\n@Component({\n  selector: 'app-showcase-blocking-resolvers',\n  templateUrl: './blocking-resolvers.page.html',\n  styleUrls: ['./blocking-resolvers.page.scss']\n})\nexport class BlockingResovlersPage implements OnInit {\n  // We will assign data coming from the Route Resolver to this property\n  routeResolveData: ShowcaseShellModel;\n\n  constructor(\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    console.log('Showcase Blocking Resovlers - ngOnInit()');\n\n    if (this.route && this.route.data) {\n      const dataObservable = this.route.data;\n      console.log('Showcase Blocking Resovlers - Route Resolve Observable => dataObservable: ', dataObservable);\n\n      if (dataObservable) {\n        dataObservable.subscribe(observableValue => {\n          const pageData: ShowcaseShellModel = observableValue['data'];\n          // eslint-disable-next-line max-len\n          console.log('Showcase Blocking Resovlers - Subscribe to dataObservable (will emmit just one value) => PageData (' + ((pageData && pageData.isShell) ? 'SHELL' : 'REAL') + '): ', pageData);\n          if (pageData) {\n            this.routeResolveData = pageData;\n          }\n        });\n      } else {\n        console.warn('No dataObservable coming from Route Resolver data');\n      }\n    } else {\n      console.warn('No data coming from Route Resolver');\n    }\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"showcase/route-resolvers-ux\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      Blocking Resovler Showcase\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\">\n    <p>\n      Notice how the UX degrades when using <b>Blocking</b> Route Resolvers in Angular\n    </p>\n    <ion-row style=\"background-color: #FFF; padding: 10px;\">\n      <ion-col size=\"12\">\n        <div [ngStyle]=\"{'background-image': 'url(' + routeResolveData?.cover + ')'}\" style=\"background-size: cover; background-repeat: no-repeat;\">\n          <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\n            <h4 style=\"margin: 10px; text-align: center; color: #FFF;\">Heading on top of a cover image</h4>\n          </app-aspect-ratio>\n        </div>\n      </ion-col>\n      <ion-col size=\"4\">\n        <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n          <img [src]=\"routeResolveData?.image\" alt=\"Sample Image\" style=\"width: 100%; height: 100%;\"/>\n        </app-aspect-ratio>\n      </ion-col>\n      <ion-col size=\"8\">\n        <h3 style=\"margin-top: 0px;\">\n          {{ routeResolveData?.title }}\n        </h3>\n        <p>\n          {{ routeResolveData?.description }}\n        </p>\n      </ion-col>\n    </ion-row>\n  </section>\n</ion-content>\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\n\nimport { defer } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { ShowcaseService } from '../../showcase.service';\n\n@Injectable()\nexport class BlockingResolver implements Resolve<any> {\n  private loadingElement: any;\n\n  constructor(\n    private showcaseService: ShowcaseService,\n    private loadingController: LoadingController\n  ) { }\n\n  async presentLoader() {\n    this.loadingElement = await this.loadingController.create({\n      message: 'Loading ...'\n    });\n\n    await this.loadingElement.present();\n  }\n\n  async dismissLoader() {\n    if (this.loadingElement) {\n      await this.loadingElement.dismiss();\n    }\n  }\n\n  resolve() {\n    // WITHOUT LOADING INDICATOR\n\n    // Base Observable (where we get data from)\n    // const dataObservable = this.showcaseService.getData();\n\n    // Basic Resolver that returns the base Observable\n    // return dataObservable;\n\n\n    // WITH LOADING INDICATOR\n\n    // Base Observable (where we get data from)\n    const dataObservable = this.showcaseService.getDataSourceWithDelay().pipe(\n      finalize(() => {\n        console.log('dataObservable COMPLETED - HIDE LOADER');\n        this.dismissLoader();\n      })\n    );\n\n    const deferedObservable = defer(() => {\n      // Will be logged at the moment of subscription\n      console.log('dataObservable STARTED - SHOW LOADER');\n      this.presentLoader();\n      return dataObservable;\n    });\n\n    // Basic Resolver that returns the base Observable\n    return deferedObservable;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// You can also use a Class object as a shell model\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\n\n@Component({\n  selector: 'app-showcase-non-blocking-resolvers',\n  templateUrl: './non-blocking-resolvers.page.html',\n  styleUrls: ['./non-blocking-resolvers.page.scss']\n})\nexport class NonBlockingResolversPage implements OnInit {\n  // We will assign data coming from the Route Resolver to this property\n  routeResolveData: ShowcaseShellModel;\n\n  constructor(\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    console.log('Showcase NON Blocking Resovlers - ngOnInit()');\n\n    if (this.route && this.route.data) {\n      // We resolved a promise for the data Observable\n      const promiseObservable = this.route.data;\n      console.log('Showcase NON Blocking Resovlers - Route Resolve Observable => promiseObservable: ', promiseObservable);\n\n      if (promiseObservable) {\n        promiseObservable.subscribe(promiseValue => {\n          const dataObservable = promiseValue['data'];\n          console.log('Showcase NON Blocking Resovlers - Subscribe to promiseObservable => dataObservable: ', dataObservable);\n\n          if (dataObservable) {\n            dataObservable.subscribe(observableValue => {\n              const pageData: ShowcaseShellModel = observableValue;\n              // eslint-disable-next-line max-len\n              console.log('Showcase NON Blocking Resovlers - Subscribe to dataObservable (will emmit just one value) => PageData (' + ((pageData && pageData.isShell) ? 'SHELL' : 'REAL') + '): ', pageData);\n              if (pageData) {\n                this.routeResolveData = pageData;\n              }\n            });\n          } else {\n            console.warn('No dataObservable coming from Route Resolver promiseObservable');\n          }\n        });\n      } else {\n        console.warn('No promiseObservable coming from Route Resolver data');\n      }\n    } else {\n      console.warn('No data coming from Route Resolver');\n    }\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"showcase/route-resolvers-ux\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      NON Blocking Resovler Showcase\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\">\n    <p>\n      With Non-Blocking Resolvers, page transition is immediate. However UX degrades because you are showing a static loading indicator while the server sends data back to the client.\n    </p>\n    <ng-container *ngIf=\"!routeResolveData\">\n      <div style=\"margin: 20px 40px; text-align: center;\">\n        <ion-spinner></ion-spinner>\n        <p>\n          <b>You can show a static shell while fetching data from the backend</b>\n        </p>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"routeResolveData\">\n      <ion-row style=\"background-color: #FFF; padding: 10px;\">\n        <ion-col size=\"12\">\n          <div [ngStyle]=\"{'background-image': 'url(' + routeResolveData?.cover + ')'}\" style=\"background-size: cover; background-repeat: no-repeat;\">\n            <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\n              <h4 style=\"margin: 10px; text-align: center; color: #FFF;\">Heading on top of a cover image</h4>\n            </app-aspect-ratio>\n          </div>\n        </ion-col>\n        <ion-col size=\"4\">\n          <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n            <img [src]=\"routeResolveData?.image\" alt=\"Sample Image\" style=\"width: 100%; height: 100%;\"/>\n          </app-aspect-ratio>\n        </ion-col>\n        <ion-col size=\"8\">\n          <h3 style=\"margin-top: 0px;\">\n            {{ routeResolveData?.title }}\n          </h3>\n          <p>\n            {{ routeResolveData?.description }}\n          </p>\n        </ion-col>\n      </ion-row>\n    </ng-container>\n  </section>\n</ion-content>\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { ShowcaseService } from '../../showcase.service';\n\n@Injectable()\nexport class NonBlockingResolver implements Resolve<any> {\n\n  constructor(private showcaseService: ShowcaseService) {}\n\n  resolve() {\n\n    // Base Observable (where we get data from)\n    const dataObservable = this.showcaseService.getDataSourceWithDelay();\n\n    // NON-BLOCKING RESOLVERS\n\n    // Resolver using a ReplySubject that emits the base Observable and then completes\n    // const subject = new ReplaySubject();\n    // subject.next(dataObservable);\n    // subject.complete();\n    // return subject;\n\n    // Resolver using an Observable that emits the base Observable and then completes\n    // const observable = Observable.create((observer) => {\n    //   observer.next(dataObservable);\n    //   observer.complete();\n    // });\n    // return observable;\n\n    // Resolver using a Promise that resolves the base Observable\n    const observablePromise = new Promise((resolve, reject) => {\n      resolve(dataObservable);\n    });\n    return observablePromise;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n// You can also use a Class object as a shell model\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-showcase-progressive-shell-resolvers',\n  templateUrl: './progressive-shell-resolvers.page.html',\n  styleUrls: ['./progressive-shell-resolvers.page.scss']\n})\nexport class ProgressiveShellResovlersPage implements OnInit {\n  // We will assign data coming from the Route Resolver to this property\n  routeResolveData: ShowcaseShellModel;\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    console.log('Showcase Progressive Shell Resovlers - ngOnInit()');\n\n    this.route.data\n    .pipe(\n      // Extract data for this page\n      switchMap((resolvedRouteData) => resolvedRouteData['data'].state)\n    )\n    .subscribe({\n      next: (state: any) => {\n        this.routeResolveData = state;\n      },\n      error: (error) => console.log(error)\n    });\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"showcase/route-resolvers-ux\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      Progressive Shell Showcase\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\">\n    <ion-row style=\"background-color: #FFF; padding: 10px;\">\n      <ion-col size=\"12\">\n        <app-image-shell class=\"add-overlay\" animation=\"spinner\" [display]=\"'cover'\" [src]=\"routeResolveData?.cover\" [alt]=\"'Sample Image Cover'\">\n          <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\n            <h4 style=\"margin: 10px; text-align: center; color: #FFF;\">Heading on top of a cover image</h4>\n          </app-aspect-ratio>\n        </app-image-shell>\n      </ion-col>\n      <ion-col size=\"4\">\n        <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n          <app-image-shell animation=\"spinner\" [src]=\"routeResolveData?.image\" [alt]=\"'Sample Image'\"></app-image-shell>\n        </app-aspect-ratio>\n      </ion-col>\n      <ion-col size=\"8\">\n        <h3 style=\"margin-top: 0px;\">\n          <app-text-shell [data]=\"routeResolveData?.title\"></app-text-shell>\n        </h3>\n        <p>\n          <app-text-shell animation=\"bouncing\" lines=\"3\" [data]=\"routeResolveData?.description\"></app-text-shell>\n        </p>\n      </ion-col>\n    </ion-row>\n  </section>\n</ion-content>\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { ShowcaseService } from '../../showcase.service';\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\nimport { Observable } from 'rxjs';\nimport { DataStore } from '../../../shell/data-store';\n\n@Injectable()\nexport class ProgressiveShellResolver implements Resolve<any> {\n\n  constructor(private showcaseService: ShowcaseService) {}\n\n  resolve() {\n    const dataSource: Observable<ShowcaseShellModel> = this.showcaseService.getDataSourceWithDelay();\n    const dataStore: DataStore<ShowcaseShellModel> = this.showcaseService.getSimpleDataStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { RouteResovlersUXPage } from './route-resolvers-ux.page';\nimport { NonBlockingResolversPage } from './non-blocking-resolvers/non-blocking-resolvers.page';\nimport { BlockingResovlersPage } from './blocking-resolvers/blocking-resolvers.page';\nimport { ProgressiveShellResovlersPage } from './progressive-shell-resolvers/progressive-shell-resolvers.page';\n\nimport { BlockingResolver } from './blocking-resolvers/blocking.resolver';\nimport { NonBlockingResolver } from './non-blocking-resolvers/non-blocking.resolver';\nimport { ProgressiveShellResolver } from './progressive-shell-resolvers/progressive-shell.resolver';\n\nimport { ShowcaseService } from '../showcase.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RouteResovlersUXPage\n  },\n  {\n    path: 'blocking-resolvers',\n    component: BlockingResovlersPage,\n    resolve: {\n      data: BlockingResolver\n    }\n  },\n  {\n    path: 'non-blocking-resolvers',\n    component: NonBlockingResolversPage,\n    resolve: {\n      data: NonBlockingResolver\n    }\n  },\n  {\n    path: 'progressive-shell-resolvers',\n    component: ProgressiveShellResovlersPage,\n    resolve: {\n      data: ProgressiveShellResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule\n  ],\n  declarations: [\n    RouteResovlersUXPage,\n    BlockingResovlersPage,\n    NonBlockingResolversPage,\n    ProgressiveShellResovlersPage\n  ],\n  providers: [\n    BlockingResolver,\n    NonBlockingResolver,\n    ProgressiveShellResolver,\n    ShowcaseService\n  ]\n})\nexport class RouteResolversUXModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-showcase-route-resolvers-ux',\n  templateUrl: './route-resolvers-ux.page.html',\n  styleUrls: ['./route-resolvers-ux.page.scss']\n})\n\nexport class RouteResovlersUXPage {\n\n  constructor() { }\n\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>\n      Improve Route Resolvers UX\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\">\n    <p>\n      Lets see the difference between the different implementations of Route Resolvers.\n    </p>\n    <h5>Blocking Route Resolvers</h5>\n    <p>\n      By default, Angular Route Resolvers won't transition to the page until the Resolver Observable completes.\n    </p>\n    <p>\n      Let's suppose the backend is slow and takes 5 seconds to fetch data and return it to the client, this is what's going to happen.\n    </p>\n    <p>\n      <b>Expected behavior:</b> Page transition will be delayed 5 seconds until the server sends data back to the client.\n    </p>\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/blocking-resolvers']\">Blocking Resolvers</ion-button>\n  </section>\n  <section class=\"showcase-section\">\n    <h5>NON-Blocking Route Resolvers</h5>\n    <p>\n      To avoid waiting for the Observable to complete, we can wrap the base Observable (the one we are getting data from) with a dummy Observable, Subject or Promise that emits the base Observable and immediately completes.\n    </p>\n    <p>\n      <b>Expected behavior:</b> Page transition will be instant and the transitioned page will show a blank state while the server sends data back to the client.\n    </p>\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/non-blocking-resolvers']\">Non-Blocking Resolvers</ion-button>\n  </section>\n  <section class=\"showcase-section\">\n    <h5>Progressive Shell Resolvers</h5>\n    <p>\n      By using the <code>DataStore</code> utility in conjunction with Angular Route Resolvers, we can solve this UX problem and make page transitions immediate.\n    </p>\n    <p>\n      This approach uses a non-blocking Resolver in conjunction with the <code>DataStore</code> utility.\n    </p>\n    <p>\n      <b>Expected behavior:</b> Page transition will be instant and the transitioned page will show some shell elements while the server sends data back to the client.\n    </p>\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/progressive-shell-resolvers']\">Progressive Shell Resolvers</ion-button>\n  </section>\n</ion-content>\n"],"names":["of","combineLatest","ReplaySubject","delay","map","startWith","environment","ShellModel","constructor","isShell","DataStore","shellModel","networkDelay","appShellConfig","timeline","AppendShell","dataObservable","delayObservable","pipe","delayValue","dataValue","Object","assign","load","dataSourceObservable","processedDataSource","subscribe","next","state","asObservable","ActivatedRoute","BlockingResovlersPage","route","ngOnInit","console","log","data","observableValue","pageData","routeResolveData","warn","_","i0","ɵɵdirectiveInject","i1","_2","selectors","decls","vars","consts","template","BlockingResovlersPage_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","cover","ɵɵpureFunction0","_c1","_c2","image","ɵɵsanitizeUrl","ɵɵtextInterpolate1","title","description","LoadingController","defer","finalize","ShowcaseService","BlockingResolver","showcaseService","loadingController","presentLoader","_this","_asyncToGenerator","loadingElement","create","message","present","dismissLoader","_this2","dismiss","resolve","getDataSourceWithDelay","deferedObservable","ɵɵinject","i2","factory","ɵfac","ɵɵelementContainerStart","ɵɵelementContainerEnd","ctx_r1","NonBlockingResolversPage","promiseObservable","promiseValue","NonBlockingResolversPage_Template","ɵɵtemplate","NonBlockingResolversPage_ng_container_10_Template","NonBlockingResolversPage_ng_container_11_Template","NonBlockingResolver","observablePromise","Promise","reject","switchMap","ProgressiveShellResovlersPage","resolvedRouteData","error","ProgressiveShellResovlersPage_Template","ProgressiveShellResolver","dataSource","dataStore","getSimpleDataStore","CommonModule","FormsModule","RouterModule","IonicModule","ComponentsModule","RouteResovlersUXPage","routes","path","component","RouteResolversUXModule","_3","imports","forChild","declarations","RouteResovlersUXPage_Template","_c4"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}