{"ast":null,"code":"import libphonenumber from 'google-libphonenumber';\nexport class PhoneValidator {}\nPhoneValidator.invalidCountryPhone = countryControl => {\n  let subscribe = false;\n  return phoneControl => {\n    if (!subscribe) {\n      subscribe = true;\n      countryControl.valueChanges.subscribe(() => {\n        phoneControl.updateValueAndValidity();\n      });\n    }\n    if (phoneControl.value !== '') {\n      try {\n        const phoneUtil = libphonenumber.PhoneNumberUtil.getInstance();\n        const phoneNumber = '' + phoneControl.value + '',\n          region = countryControl.value.iso,\n          number = phoneUtil.parse(phoneNumber, region),\n          isValidNumber = phoneUtil.isValidNumber(number);\n        if (isValidNumber) {\n          return null;\n        }\n      } catch (e) {\n        return {\n          invalidCountryPhone: true\n        };\n      }\n      return {\n        invalidCountryPhone: true\n      };\n    } else {\n      return null;\n    }\n  };\n};","map":{"version":3,"mappings":"AACA,OAAOA,cAAc,MAAM,uBAAuB;AAElD,OAAM,MAAOC,cAAc;AAAdA,cAAc,CAMlBC,mBAAmB,GAAIC,cAA+B,IAAiB;EAC5E,IAAIC,SAAS,GAAG,KAAK;EAErB,OAAQC,YAA6B,IAA8B;IACjE,IAAI,CAACD,SAAS,EAAE;MACdA,SAAS,GAAG,IAAI;MAChBD,cAAc,CAACG,YAAY,CAACF,SAAS,CAAC,MAAK;QACzCC,YAAY,CAACE,sBAAsB,EAAE;MACvC,CAAC,CAAC;;IAGJ,IAAIF,YAAY,CAACG,KAAK,KAAK,EAAE,EAAE;MAC7B,IAAI;QACF,MAAMC,SAAS,GAAGT,cAAc,CAACU,eAAe,CAACC,WAAW,EAAE;QAC9D,MAAMC,WAAW,GAAG,EAAE,GAAGP,YAAY,CAACG,KAAK,GAAG,EAAE;UAC5CK,MAAM,GAAGV,cAAc,CAACK,KAAK,CAACM,GAAG;UACjCC,MAAM,GAAGN,SAAS,CAACO,KAAK,CAACJ,WAAW,EAAEC,MAAM,CAAC;UAC7CI,aAAa,GAAGR,SAAS,CAACQ,aAAa,CAACF,MAAM,CAAC;QAEnD,IAAIE,aAAa,EAAE;UACjB,OAAO,IAAI;;OAEd,CAAC,OAAOC,CAAC,EAAE;QACV,OAAO;UACLhB,mBAAmB,EAAE;SACtB;;MAGH,OAAO;QACLA,mBAAmB,EAAE;OACtB;KACF,MAAM;MACL,OAAO,IAAI;;EAEf,CAAC;AACH,CAAC","names":["libphonenumber","PhoneValidator","invalidCountryPhone","countryControl","subscribe","phoneControl","valueChanges","updateValueAndValidity","value","phoneUtil","PhoneNumberUtil","getInstance","phoneNumber","region","iso","number","parse","isValidNumber","e"],"sourceRoot":"","sources":["/Users/teeicloud/TitanEstates/Titan Estates/src/app/validators/phone.validator.ts"],"sourcesContent":["import { AbstractControl, ValidatorFn } from '@angular/forms';\nimport libphonenumber from 'google-libphonenumber';\n\nexport class PhoneValidator {\n\n  // Validate if a phone number belongs to a certain country.\n  // If our validation fails, we return an object with a key for the error name and a value of true.\n  // Otherwise, if the validation passes, we simply return null because there is no error.\n\n  static invalidCountryPhone = (countryControl: AbstractControl): ValidatorFn => {\n    let subscribe = false;\n\n    return (phoneControl: AbstractControl): {[key: string]: boolean} => {\n      if (!subscribe) {\n        subscribe = true;\n        countryControl.valueChanges.subscribe(() => {\n          phoneControl.updateValueAndValidity();\n        });\n      }\n\n      if (phoneControl.value !== '') {\n        try {\n          const phoneUtil = libphonenumber.PhoneNumberUtil.getInstance();\n          const phoneNumber = '' + phoneControl.value + '',\n              region = countryControl.value.iso,\n              number = phoneUtil.parse(phoneNumber, region),\n              isValidNumber = phoneUtil.isValidNumber(number);\n\n          if (isValidNumber) {\n            return null;\n          }\n        } catch (e) {\n          return {\n            invalidCountryPhone: true\n          };\n        }\n\n        return {\n          invalidCountryPhone: true\n        };\n      } else {\n        return null;\n      }\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}