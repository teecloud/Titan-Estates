{"ast":null,"code":"import { ShowcaseService } from '../../showcase.service';\nimport { DataStore } from '../../../shell/data-store';\nimport { ShowcaseCombinedTaskUserModel } from '../../showcase-shell.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../showcase.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"../../../shell/text-shell/text-shell.component\";\nfunction DataStoreCombinedPage_ion_item_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 9)(1, \"ion-label\")(2, \"h2\");\n    i0.ɵɵelement(3, \"app-text-shell\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 11)(5, \"span\", 12)(6, \"b\");\n    i0.ɵɵtext(7, \"Status:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"h3\", 13);\n    i0.ɵɵelement(9, \"app-text-shell\", 14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"span\")(11, \"b\");\n    i0.ɵɵtext(12, \"Owner:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"p\");\n    i0.ɵɵelement(14, \"app-text-shell\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"p\");\n    i0.ɵɵelement(16, \"app-text-shell\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"p\");\n    i0.ɵɵelement(18, \"app-text-shell\", 15);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"data\", task_r1 == null ? null : task_r1.title);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"data\", task_r1.completed ? \"Completed\" : \"In Progress\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"data\", task_r1.user == null ? null : task_r1.user.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"data\", (task_r1 == null ? null : task_r1.user) ? \"@\".concat(\"\", task_r1.user.username) : null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"data\", task_r1.user == null ? null : task_r1.user.email);\n  }\n}\nexport class DataStoreCombinedPage {\n  constructor(showcaseService) {\n    this.showcaseService = showcaseService;\n  }\n  ngOnInit() {\n    // We created ShowcaseCombinedTaskUserModel to combine the task with his user data.\n    // They are 2 different collections (or data tables in the DB) and we need to combine them into 1 dataSource.\n    const dataSource = this.showcaseService.getCombinedTasksUserDataSource();\n    const shellModel = [new ShowcaseCombinedTaskUserModel(), new ShowcaseCombinedTaskUserModel(), new ShowcaseCombinedTaskUserModel(), new ShowcaseCombinedTaskUserModel()];\n    this.tasksCombinedDataStore = new DataStore(shellModel);\n    this.tasksCombinedDataStore.load(dataSource);\n    this.tasksCombinedDataStore.state.subscribe(data => {\n      this.tasks = data;\n    });\n  }\n}\nDataStoreCombinedPage.ɵfac = function DataStoreCombinedPage_Factory(t) {\n  return new (t || DataStoreCombinedPage)(i0.ɵɵdirectiveInject(i1.ShowcaseService));\n};\nDataStoreCombinedPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DataStoreCombinedPage,\n  selectors: [[\"app-data-store-combined\"]],\n  decls: 44,\n  vars: 5,\n  consts: [[\"color\", \"primary\"], [\"slot\", \"start\"], [\"defaultHref\", \"showcase/app-shell\"], [1, \"showcase-content\"], [1, \"showcase-section\"], [\"href\", \"https://blog.angularindepth.com/learn-to-combine-rxjs-sequences-with-super-intuitive-interactive-diagrams-20fce8e6511\", \"target\", \"_blank\"], [1, \"tasks\"], [\"lines\", \"full\", 2, \"--background\", \"transparent\"], [\"class\", \"task\", 4, \"ngFor\", \"ngForOf\"], [1, \"task\"], [\"animation\", \"bouncing\", 2, \"--text-shell-line-height\", \"16px\", 3, \"data\"], [2, \"display\", \"flex\"], [2, \"margin-right\", \"10px\"], [2, \"min-width\", \"100px\"], [\"animation\", \"bouncing\", 2, \"--text-shell-line-height\", \"14px\", 3, \"data\"], [\"animation\", \"bouncing\", 3, \"data\"]],\n  template: function DataStoreCombinedPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-buttons\", 1);\n      i0.ɵɵelement(3, \"ion-back-button\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-title\");\n      i0.ɵɵtext(5, \" DataStore - Combined Data Sources \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"ion-content\", 3)(7, \"section\", 4)(8, \"p\");\n      i0.ɵɵtext(9, \" Some modern \");\n      i0.ɵɵelementStart(10, \"b\");\n      i0.ɵɵtext(11, \"no-sql\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \" solutions like \");\n      i0.ɵɵelementStart(13, \"u\");\n      i0.ɵɵtext(14, \"MongoDB\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(15, \" or \");\n      i0.ɵɵelementStart(16, \"u\");\n      i0.ɵɵtext(17, \"Firebase Firestore\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \" do not support multi-collection queries (left join, inner join). \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"p\");\n      i0.ɵɵtext(20, \" That's why you may end up using some \");\n      i0.ɵɵelementStart(21, \"b\");\n      i0.ɵɵtext(22, \"RxJs\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \" operators to manage and combine queries independently. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"p\")(25, \"b\");\n      i0.ɵɵtext(26, \"Note:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(27, \" These techniques are \");\n      i0.ɵɵelementStart(28, \"i\");\n      i0.ɵɵtext(29, \"intermediate / advanced\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(30, \" and require some patience to fully grasp some reactive programming concepts before you can master RxJs operators. I strongly recommend you to read this guide on \");\n      i0.ɵɵelementStart(31, \"a\", 5);\n      i0.ɵɵtext(32, \"learning to combine RxJs sequences\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(33, \". \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"p\");\n      i0.ɵɵtext(35, \" Below you can see how we combine two data sources (one depending on the other) into one Observable. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"p\");\n      i0.ɵɵtext(37, \" Let's do an example of Tasks and their Owners. Imagine a case where we need to have the list of tasks and the details of the 'owner' user combined in the same data source. Let's see how to do it. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(38, \"div\", 6)(39, \"h6\");\n      i0.ɵɵtext(40, \"Tasks\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"ion-list\", 7);\n      i0.ɵɵtemplate(42, DataStoreCombinedPage_ion_item_42_Template, 19, 5, \"ion-item\", 8);\n      i0.ɵɵpipe(43, \"slice\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(42);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(43, 1, ctx.tasks, 0, 40));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.IonBackButton, i3.IonButtons, i3.IonContent, i3.IonHeader, i3.IonItem, i3.IonLabel, i3.IonList, i3.IonTitle, i3.IonToolbar, i3.IonBackButtonDelegate, i4.TextShellComponent, i2.SlicePipe],\n  styles: [\".showcase-content[_ngcontent-%COMP%] {\\n  --background: var(--app-background);\\n}\\n.showcase-content[_ngcontent-%COMP%]   ion-item-divider[_ngcontent-%COMP%] {\\n  --background: var(--ion-color-secondary);\\n  --color: var(--ion-color-lightest);\\n  text-transform: uppercase;\\n  font-weight: 500;\\n  letter-spacing: 1px;\\n}\\n.showcase-content[_ngcontent-%COMP%]   .showcase-section[_ngcontent-%COMP%] {\\n  margin: 20px 20px 60px;\\n}\\n.showcase-content[_ngcontent-%COMP%]   pre[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  background: #CCC;\\n  padding: 10px;\\n}\\n.showcase-content[_ngcontent-%COMP%]   code[_ngcontent-%COMP%] {\\n  color: #F92672;\\n  font-weight: 500;\\n}\\n\\n.tasks[_ngcontent-%COMP%] {\\n  background-color: #ececec;\\n  background-image: url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='40' height='40' viewBox='0 0 40 40'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.38'%3E%3Cpath d='M0 38.59l2.83-2.83 1.41 1.41L1.41 40H0v-1.41zM0 1.4l2.83 2.83 1.41-1.41L1.41 0H0v1.41zM38.59 40l-2.83-2.83 1.41-1.41L40 38.59V40h-1.41zM40 1.41l-2.83 2.83-1.41-1.41L38.59 0H40v1.41zM20 18.6l2.83-2.83 1.41 1.41L21.41 20l2.83 2.83-1.41 1.41L20 21.41l-2.83 2.83-1.41-1.41L18.59 20l-2.83-2.83 1.41-1.41L20 18.59z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\");\\n  padding: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hvd2Nhc2UvYXBwLXNoZWxsL2FwcC1zaGVsbC5wYWdlLnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi9UaXRhbiUyMEVzdGF0ZXMvc3JjL2FwcC9zaG93Y2FzZS9hcHAtc2hlbGwvZGF0YS1zdG9yZS1jb21iaW5lZC9kYXRhLXN0b3JlLWNvbWJpbmVkLnBhZ2Uuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hvd2Nhc2UvYXBwLXNoZWxsL2RhdGEtc3RvcmUtY29tYmluZWQvZGF0YS1zdG9yZS1jb21iaW5lZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQ0FBQTtBQ0NGO0FEQ0U7RUFDRSx3Q0FBQTtFQUNBLGtDQUFBO0VBQ0EseUJBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0FDQ0o7QURFRTtFQUNFLHNCQUFBO0FDQUo7QURHRTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGFBQUE7QUNESjtBRElFO0VBQ0UsY0FBQTtFQUNBLGdCQUFBO0FDRko7O0FDbkJBO0VBQ0UseUJBQUE7RUFDQSx3aUJBQUE7RUFDQSxhQUFBO0FEc0JGIiwic291cmNlc0NvbnRlbnQiOlsiLnNob3djYXNlLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6IHZhcigtLWFwcC1iYWNrZ3JvdW5kKTtcblxuICBpb24taXRlbS1kaXZpZGVyIHtcbiAgICAtLWJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1zZWNvbmRhcnkpO1xuICAgIC0tY29sb3I6IHZhcigtLWlvbi1jb2xvci1saWdodGVzdCk7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gIH1cblxuICAuc2hvd2Nhc2Utc2VjdGlvbiB7XG4gICAgbWFyZ2luOiAyMHB4IDIwcHggNjBweDtcbiAgfVxuXG4gIHByZSB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGJhY2tncm91bmQ6ICNDQ0M7XG4gICAgcGFkZGluZzogMTBweDtcbiAgfVxuXG4gIGNvZGUge1xuICAgIGNvbG9yOiAjRjkyNjcyO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIH1cbn1cbiIsIi5zaG93Y2FzZS1jb250ZW50IHtcbiAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1hcHAtYmFja2dyb3VuZCk7XG59XG4uc2hvd2Nhc2UtY29udGVudCBpb24taXRlbS1kaXZpZGVyIHtcbiAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3Itc2Vjb25kYXJ5KTtcbiAgLS1jb2xvcjogdmFyKC0taW9uLWNvbG9yLWxpZ2h0ZXN0KTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbn1cbi5zaG93Y2FzZS1jb250ZW50IC5zaG93Y2FzZS1zZWN0aW9uIHtcbiAgbWFyZ2luOiAyMHB4IDIwcHggNjBweDtcbn1cbi5zaG93Y2FzZS1jb250ZW50IHByZSB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgYmFja2dyb3VuZDogI0NDQztcbiAgcGFkZGluZzogMTBweDtcbn1cbi5zaG93Y2FzZS1jb250ZW50IGNvZGUge1xuICBjb2xvcjogI0Y5MjY3MjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuLnRhc2tzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWNlYztcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSc0MCcgaGVpZ2h0PSc0MCcgdmlld0JveD0nMCAwIDQwIDQwJyUzRSUzQ2cgZmlsbC1ydWxlPSdldmVub2RkJyUzRSUzQ2cgZmlsbD0nJTIzZmZmZmZmJyBmaWxsLW9wYWNpdHk9JzAuMzgnJTNFJTNDcGF0aCBkPSdNMCAzOC41OWwyLjgzLTIuODMgMS40MSAxLjQxTDEuNDEgNDBIMHYtMS40MXpNMCAxLjRsMi44MyAyLjgzIDEuNDEtMS40MUwxLjQxIDBIMHYxLjQxek0zOC41OSA0MGwtMi44My0yLjgzIDEuNDEtMS40MUw0MCAzOC41OVY0MGgtMS40MXpNNDAgMS40MWwtMi44MyAyLjgzLTEuNDEtMS40MUwzOC41OSAwSDQwdjEuNDF6TTIwIDE4LjZsMi44My0yLjgzIDEuNDEgMS40MUwyMS40MSAyMGwyLjgzIDIuODMtMS40MSAxLjQxTDIwIDIxLjQxbC0yLjgzIDIuODMtMS40MS0xLjQxTDE4LjU5IDIwbC0yLjgzLTIuODMgMS40MS0xLjQxTDIwIDE4LjU5eicvJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9zdmclM0VcIik7XG4gIHBhZGRpbmc6IDIwcHg7XG59IiwiQGltcG9ydCBcIi4uL2FwcC1zaGVsbC5wYWdlXCI7XG5cbi50YXNrcyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlY2VjZWM7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nNDAnIGhlaWdodD0nNDAnIHZpZXdCb3g9JzAgMCA0MCA0MCclM0UlM0NnIGZpbGwtcnVsZT0nZXZlbm9kZCclM0UlM0NnIGZpbGw9JyUyM2ZmZmZmZicgZmlsbC1vcGFjaXR5PScwLjM4JyUzRSUzQ3BhdGggZD0nTTAgMzguNTlsMi44My0yLjgzIDEuNDEgMS40MUwxLjQxIDQwSDB2LTEuNDF6TTAgMS40bDIuODMgMi44MyAxLjQxLTEuNDFMMS40MSAwSDB2MS40MXpNMzguNTkgNDBsLTIuODMtMi44MyAxLjQxLTEuNDFMNDAgMzguNTlWNDBoLTEuNDF6TTQwIDEuNDFsLTIuODMgMi44My0xLjQxLTEuNDFMMzguNTkgMEg0MHYxLjQxek0yMCAxOC42bDIuODMtMi44MyAxLjQxIDEuNDFMMjEuNDEgMjBsMi44MyAyLjgzLTEuNDEgMS40MUwyMCAyMS40MWwtMi44MyAyLjgzLTEuNDEtMS40MUwxOC41OSAyMGwtMi44My0yLjgzIDEuNDEtMS40MUwyMCAxOC41OXonLyUzRSUzQy9nJTNFJTNDL2clM0UlM0Mvc3ZnJTNFXCIpO1xuICBwYWRkaW5nOiAyMHB4O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,wBAAwB;AACxD,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,6BAA6B,QAAQ,4BAA4B;;;;;;;;IC6BpEC,mCAA+D;IAGzDA,qCAAmH;IACrHA,iBAAK;IACLA,+BAA4B;IACWA,uBAAO;IAAAA,iBAAI;IAChDA,8BAA8B;IAC5BA,qCAAqJ;IACvJA,iBAAK;IAEPA,6BAAM;IAAGA,uBAAM;IAAAA,iBAAI;IACnBA,0BAAG;IACDA,sCAA+E;IACjFA,iBAAI;IACJA,0BAAG;IACDA,sCAAwH;IAC1HA,iBAAI;IACJA,0BAAG;IACDA,sCAAgF;IAClFA,iBAAI;;;;IAjBcA,eAAoB;IAApBA,6DAAoB;IAKlBA,eAAsD;IAAtDA,sEAAsD;IAKxDA,eAAwB;IAAxBA,sEAAwB;IAGxBA,eAAiE;IAAjEA,6GAAiE;IAGjEA,eAAyB;IAAzBA,uEAAyB;;;ADzCrD,OAAM,MAAOC,qBAAqB;EAKhCC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;EAAqB;EAExDC,QAAQ;IACN;IACA;IAEA,MAAMC,UAAU,GAAG,IAAI,CAACF,eAAe,CAACG,8BAA8B,EAAE;IAExE,MAAMC,UAAU,GAAyC,CACvD,IAAIR,6BAA6B,EAAE,EACnC,IAAIA,6BAA6B,EAAE,EACnC,IAAIA,6BAA6B,EAAE,EACnC,IAAIA,6BAA6B,EAAE,CACpC;IAED,IAAI,CAACS,sBAAsB,GAAG,IAAIV,SAAS,CAACS,UAAU,CAAC;IACvD,IAAI,CAACC,sBAAsB,CAACC,IAAI,CAACJ,UAAU,CAAC;IAE5C,IAAI,CAACG,sBAAsB,CAACE,KAAK,CAChCC,SAAS,CAACC,IAAI,IAAG;MAChB,IAAI,CAACC,KAAK,GAAGD,IAAI;IACnB,CAAC,CAAC;EACJ;;AA3BWX,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVlClB,kCAAY;MAGNA,qCAAoE;MACtEA,iBAAc;MACdA,iCAAW;MACTA,mDACF;MAAAA,iBAAY;MAIhBA,sCAAsC;MAGhCA,6BAAY;MAAAA,0BAAG;MAAAA,uBAAM;MAAAA,iBAAI;MAACA,iCAAe;MAAAA,0BAAG;MAAAA,wBAAO;MAAAA,iBAAI;MAACA,qBAAG;MAAAA,0BAAG;MAAAA,mCAAkB;MAAAA,iBAAI;MAACA,mFACvF;MAAAA,iBAAI;MACJA,0BAAG;MACDA,uDAAqC;MAAAA,0BAAG;MAAAA,qBAAI;MAAAA,iBAAI;MAACA,yEACnD;MAAAA,iBAAI;MACJA,0BAAG;MACEA,sBAAK;MAAAA,iBAAI;MAACA,uCAAqB;MAAAA,0BAAG;MAAAA,wCAAuB;MAAAA,iBAAI;MAACA,mLAAiK;MAAAA,6BAAgJ;MAAAA,mDAAkC;MAAAA,iBAAI;MAAAA,mBAC1Z;MAAAA,iBAAI;MACJA,0BAAG;MACDA,sHACF;MAAAA,iBAAI;MACJA,0BAAG;MACDA,sNACF;MAAAA,iBAAI;MAENA,+BAAmB;MACbA,sBAAK;MAAAA,iBAAK;MACdA,oCAAyD;MACvDA,mFAsBW;;MACbA,iBAAW;;;MAvB+BA,gBAAqB;MAArBA,iEAAqB","names":["ShowcaseService","DataStore","ShowcaseCombinedTaskUserModel","i0","DataStoreCombinedPage","constructor","showcaseService","ngOnInit","dataSource","getCombinedTasksUserDataSource","shellModel","tasksCombinedDataStore","load","state","subscribe","data","tasks","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/teeicloud/TitanEstates/Titan Estates/src/app/showcase/app-shell/data-store-combined/data-store-combined.page.ts","/Users/teeicloud/TitanEstates/Titan Estates/src/app/showcase/app-shell/data-store-combined/data-store-combined.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ShowcaseService } from '../../showcase.service';\nimport { DataStore } from '../../../shell/data-store';\nimport { ShowcaseCombinedTaskUserModel } from '../../showcase-shell.model';\n\n@Component({\n  selector: 'app-data-store-combined',\n  templateUrl: './data-store-combined.page.html',\n  styleUrls: ['./data-store-combined.page.scss'],\n})\nexport class DataStoreCombinedPage implements OnInit {\n\n  tasksCombinedDataStore: DataStore<Array<ShowcaseCombinedTaskUserModel>>;\n  tasks: Array<ShowcaseCombinedTaskUserModel>;\n\n  constructor(private showcaseService: ShowcaseService) { }\n\n  ngOnInit() {\n    // We created ShowcaseCombinedTaskUserModel to combine the task with his user data.\n    // They are 2 different collections (or data tables in the DB) and we need to combine them into 1 dataSource.\n\n    const dataSource = this.showcaseService.getCombinedTasksUserDataSource();\n\n    const shellModel: Array<ShowcaseCombinedTaskUserModel> = [\n      new ShowcaseCombinedTaskUserModel(),\n      new ShowcaseCombinedTaskUserModel(),\n      new ShowcaseCombinedTaskUserModel(),\n      new ShowcaseCombinedTaskUserModel()\n    ];\n\n    this.tasksCombinedDataStore = new DataStore(shellModel);\n    this.tasksCombinedDataStore.load(dataSource);\n\n    this.tasksCombinedDataStore.state\n    .subscribe(data => {\n      this.tasks = data;\n    });\n  }\n\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"showcase/app-shell\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      DataStore - Combined Data Sources\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\">\n    <p>\n      Some modern <b>no-sql</b> solutions like <u>MongoDB</u> or <u>Firebase Firestore</u> do not support multi-collection queries (left join, inner join).\n    </p>\n    <p>\n      That's why you may end up using some <b>RxJs</b> operators to manage and combine queries independently.\n    </p>\n    <p>\n      <b>Note:</b> These techniques are <i>intermediate / advanced</i> and require some patience to fully grasp some reactive programming concepts before you can master RxJs operators. I strongly recommend you to read this guide on <a href=\"https://blog.angularindepth.com/learn-to-combine-rxjs-sequences-with-super-intuitive-interactive-diagrams-20fce8e6511\" target=\"_blank\">learning to combine RxJs sequences</a>.\n    </p>\n    <p>\n      Below you can see how we combine two data sources (one depending on the other) into one Observable.\n    </p>\n    <p>\n      Let's do an example of Tasks and their Owners. Imagine a case where we need to have the list of tasks and the details of the 'owner' user combined in the same data source. Let's see how to do it.\n    </p>\n  </section>\n  <div class=\"tasks\">\n    <h6>Tasks</h6>\n    <ion-list lines=\"full\" style=\"--background: transparent\">\n      <ion-item class=\"task\" *ngFor=\"let task of tasks | slice:0:40\">\n        <ion-label>\n          <h2>\n            <app-text-shell [data]=\"task?.title\" animation=\"bouncing\" style=\"--text-shell-line-height: 16px;\"></app-text-shell>\n          </h2>\n          <div style=\"display: flex;\">\n            <span style=\"margin-right: 10px;\"><b>Status:</b></span>\n            <h3 style=\"min-width: 100px;\">\n              <app-text-shell [data]=\"(task.completed) ? 'Completed': 'In Progress'\" animation=\"bouncing\" style=\"--text-shell-line-height: 14px;\"></app-text-shell>\n            </h3>\n          </div>\n          <span><b>Owner:</b></span>\n          <p>\n            <app-text-shell [data]=\"task.user?.name\" animation=\"bouncing\"></app-text-shell>\n          </p>\n          <p>\n            <app-text-shell [data]=\"(task?.user) ? '@'.concat('', task.user.username) : null\" animation=\"bouncing\"></app-text-shell>\n          </p>\n          <p>\n            <app-text-shell [data]=\"task.user?.email\" animation=\"bouncing\"></app-text-shell>\n          </p>\n        </ion-label>\n      </ion-item>\n    </ion-list>\n  </div>\n</ion-content>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}