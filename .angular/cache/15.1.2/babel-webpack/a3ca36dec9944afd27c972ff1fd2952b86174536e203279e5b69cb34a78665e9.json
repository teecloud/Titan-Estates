{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Input, Component, ViewEncapsulation, HostBinding, ContentChildren, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Subject, fromEvent, Observable, combineLatest, timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\nconst _c0 = [\"*\"];\nclass VgStates {}\nVgStates.VG_ENDED = 'ended';\nVgStates.VG_PAUSED = 'paused';\nVgStates.VG_PLAYING = 'playing';\nVgStates.VG_LOADING = 'waiting';\n/** @nocollapse */\nVgStates.ɵfac = function VgStates_Factory(t) {\n  return new (t || VgStates)();\n};\n/** @nocollapse */\nVgStates.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: VgStates,\n  factory: VgStates.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgStates, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass VgApiService {\n  constructor() {\n    this.medias = {}; // TODO: refactor to Set<IPlayable>\n    this.playerReadyEvent = new EventEmitter(true);\n    this.isPlayerReady = false;\n  }\n  onPlayerReady(fsAPI) {\n    this.fsAPI = fsAPI;\n    this.isPlayerReady = true;\n    this.playerReadyEvent.emit(this);\n  }\n  getDefaultMedia() {\n    for (const item in this.medias) {\n      if (this.medias[item]) {\n        return this.medias[item];\n      }\n    }\n  }\n  getMasterMedia() {\n    let master;\n    for (const id in this.medias) {\n      if (this.medias[id].vgMaster === 'true' || this.medias[id].vgMaster === true) {\n        master = this.medias[id];\n        break;\n      }\n    }\n    return master || this.getDefaultMedia();\n  }\n  isMasterDefined() {\n    let result = false;\n    for (const id in this.medias) {\n      if (this.medias[id].vgMaster === 'true' || this.medias[id].vgMaster === true) {\n        result = true;\n        break;\n      }\n    }\n    return result;\n  }\n  getMediaById(id = null) {\n    let media = this.medias[id];\n    if (!id || id === '*') {\n      media = this;\n    }\n    return media;\n  }\n  play() {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id].play();\n      }\n    }\n  }\n  pause() {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id].pause();\n      }\n    }\n  }\n  get duration() {\n    return this.$$getAllProperties('duration');\n  }\n  set currentTime(seconds) {\n    this.$$setAllProperties('currentTime', seconds);\n  }\n  get currentTime() {\n    return this.$$getAllProperties('currentTime');\n  }\n  set state(state) {\n    this.$$setAllProperties('state', state);\n  }\n  get state() {\n    return this.$$getAllProperties('state');\n  }\n  set volume(volume) {\n    this.$$setAllProperties('volume', volume);\n  }\n  get volume() {\n    return this.$$getAllProperties('volume');\n  }\n  set playbackRate(rate) {\n    this.$$setAllProperties('playbackRate', rate);\n  }\n  get playbackRate() {\n    return this.$$getAllProperties('playbackRate');\n  }\n  get canPlay() {\n    return this.$$getAllProperties('canPlay');\n  }\n  get canPlayThrough() {\n    return this.$$getAllProperties('canPlayThrough');\n  }\n  get isMetadataLoaded() {\n    return this.$$getAllProperties('isMetadataLoaded');\n  }\n  get isWaiting() {\n    return this.$$getAllProperties('isWaiting');\n  }\n  get isCompleted() {\n    return this.$$getAllProperties('isCompleted');\n  }\n  get isLive() {\n    return this.$$getAllProperties('isLive');\n  }\n  get isMaster() {\n    return this.$$getAllProperties('isMaster');\n  }\n  get time() {\n    return this.$$getAllProperties('time');\n  }\n  get buffer() {\n    return this.$$getAllProperties('buffer');\n  }\n  get buffered() {\n    return this.$$getAllProperties('buffered');\n  }\n  get subscriptions() {\n    return this.$$getAllProperties('subscriptions');\n  }\n  get textTracks() {\n    return this.$$getAllProperties('textTracks');\n  }\n  seekTime(value, byPercent = false) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.$$seek(this.medias[id], value, byPercent);\n      }\n    }\n  }\n  $$seek(media, value, byPercent = false) {\n    let second;\n    let duration = media.duration;\n    if (byPercent) {\n      if (this.isMasterDefined()) {\n        duration = this.getMasterMedia().duration;\n      }\n      second = value * duration / 100;\n    } else {\n      second = value;\n    }\n    media.currentTime = second;\n  }\n  addTextTrack(type, label, language) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.$$addTextTrack(this.medias[id], type, label, language);\n      }\n    }\n  }\n  $$addTextTrack(media, type, label, language) {\n    media.addTextTrack(type, label, language);\n  }\n  $$getAllProperties(property) {\n    const medias = {};\n    let result;\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        medias[id] = this.medias[id];\n      }\n    }\n    const nMedias = Object.keys(medias).length;\n    switch (nMedias) {\n      case 0:\n        // Return default values until vgMedia is initialized\n        switch (property) {\n          case 'state':\n            result = VgStates.VG_PAUSED;\n            break;\n          case 'playbackRate':\n          case 'volume':\n            result = 1;\n            break;\n          case 'time':\n            result = {\n              current: 0,\n              total: 0,\n              left: 0\n            };\n            break;\n        }\n        break;\n      case 1:\n        // If there's only one media element then return the plain value\n        const firstMediaId = Object.keys(medias)[0];\n        result = medias[firstMediaId][property];\n        break;\n      default:\n        // TODO: return 'master' value\n        const master = this.getMasterMedia();\n        result = medias[master.id][property];\n    }\n    return result;\n  }\n  $$setAllProperties(property, value) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id][property] = value;\n      }\n    }\n  }\n  registerElement(elem) {\n    this.videogularElement = elem;\n  }\n  registerMedia(media) {\n    this.medias[media.id] = media;\n  }\n  unregisterMedia(media) {\n    delete this.medias[media.id];\n  }\n}\n/** @nocollapse */\nVgApiService.ɵfac = function VgApiService_Factory(t) {\n  return new (t || VgApiService)();\n};\n/** @nocollapse */\nVgApiService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: VgApiService,\n  factory: VgApiService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgApiService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass VgControlsHiddenService {\n  constructor() {\n    this.isHiddenSubject = new Subject();\n    this.isHidden = this.isHiddenSubject.asObservable();\n  }\n  state(hidden) {\n    this.isHiddenSubject.next(hidden);\n  }\n}\n/** @nocollapse */\nVgControlsHiddenService.ɵfac = function VgControlsHiddenService_Factory(t) {\n  return new (t || VgControlsHiddenService)();\n};\n/** @nocollapse */\nVgControlsHiddenService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: VgControlsHiddenService,\n  factory: VgControlsHiddenService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgControlsHiddenService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass VgUtilsService {\n  /**\n   * Inspired by Paul Irish\n   * https://gist.github.com/paulirish/211209\n   */\n  static getZIndex() {\n    let zIndex = 1;\n    let elementZIndex;\n    const tags = document.getElementsByTagName('*');\n    for (let i = 0, l = tags.length; i < l; i++) {\n      elementZIndex = parseInt(window.getComputedStyle(tags[i])['z-index'], 10);\n      if (elementZIndex > zIndex) {\n        zIndex = elementZIndex + 1;\n      }\n    }\n    return zIndex;\n  }\n  // Very simple mobile detection, not 100% reliable\n  static isMobileDevice() {\n    // return (\n    //   typeof window.screen.orientation !== 'undefined' ||\n    //   navigator.userAgent.indexOf('IEMobile') !== -1\n    // );\n    // window.orientation is deprecated and we should use window.screen.orientation\n    return typeof window.orientation !== 'undefined' || navigator.userAgent.indexOf('IEMobile') !== -1;\n  }\n  static isiOSDevice() {\n    return (navigator.userAgent.match(/ip(hone|ad|od)/i) || VgUtilsService.isIpadOS()) && !navigator.userAgent.match(/(iemobile)[\\/\\s]?([\\w\\.]*)/i);\n  }\n  static isIpadOS() {\n    return navigator.maxTouchPoints && navigator.maxTouchPoints > 2 && /MacIntel/.test(navigator.platform);\n  }\n  static isCordova() {\n    return document.URL.indexOf('http://') === -1 && document.URL.indexOf('https://') === -1;\n  }\n}\n/** @nocollapse */\nVgUtilsService.ɵfac = function VgUtilsService_Factory(t) {\n  return new (t || VgUtilsService)();\n};\n/** @nocollapse */\nVgUtilsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: VgUtilsService,\n  factory: VgUtilsService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgUtilsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass VgFullscreenApiService {\n  constructor() {\n    this.nativeFullscreen = true;\n    this.isFullscreen = false;\n    this.onChangeFullscreen = new EventEmitter();\n  }\n  init(elem, medias) {\n    this.videogularElement = elem;\n    this.medias = medias;\n    const APIs = {\n      w3: {\n        enabled: 'fullscreenEnabled',\n        element: 'fullscreenElement',\n        request: 'requestFullscreen',\n        exit: 'exitFullscreen',\n        onchange: 'fullscreenchange',\n        onerror: 'fullscreenerror'\n      },\n      newWebkit: {\n        enabled: 'webkitFullscreenEnabled',\n        element: 'webkitFullscreenElement',\n        request: 'webkitRequestFullscreen',\n        exit: 'webkitExitFullscreen',\n        onchange: 'webkitfullscreenchange',\n        onerror: 'webkitfullscreenerror'\n      },\n      oldWebkit: {\n        enabled: 'webkitIsFullScreen',\n        element: 'webkitCurrentFullScreenElement',\n        request: 'webkitRequestFullScreen',\n        exit: 'webkitCancelFullScreen',\n        onchange: 'webkitfullscreenchange',\n        onerror: 'webkitfullscreenerror'\n      },\n      moz: {\n        enabled: 'mozFullScreen',\n        element: 'mozFullScreenElement',\n        request: 'mozRequestFullScreen',\n        exit: 'mozCancelFullScreen',\n        onchange: 'mozfullscreenchange',\n        onerror: 'mozfullscreenerror'\n      },\n      ios: {\n        enabled: 'webkitFullscreenEnabled',\n        element: 'webkitFullscreenElement',\n        request: 'webkitEnterFullscreen',\n        exit: 'webkitExitFullscreen',\n        onchange: 'webkitendfullscreen',\n        onerror: 'webkitfullscreenerror'\n      },\n      ms: {\n        enabled: 'msFullscreenEnabled',\n        element: 'msFullscreenElement',\n        request: 'msRequestFullscreen',\n        exit: 'msExitFullscreen',\n        onchange: 'MSFullscreenChange',\n        onerror: 'MSFullscreenError'\n      }\n    };\n    for (const browser in APIs) {\n      if (APIs[browser].enabled in document) {\n        this.polyfill = APIs[browser];\n        break;\n      }\n    }\n    if (VgUtilsService.isiOSDevice()) {\n      this.polyfill = APIs.ios;\n    }\n    this.isAvailable = this.polyfill != null;\n    if (this.polyfill == null) {\n      return;\n    }\n    let fsElemDispatcher;\n    switch (this.polyfill.onchange) {\n      // Mozilla dispatches the fullscreen change event from document, not the element\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=724816#c3\n      case 'mozfullscreenchange':\n        fsElemDispatcher = document;\n        break;\n      // iOS dispatches the fullscreen change event from video element\n      case 'webkitendfullscreen':\n        fsElemDispatcher = this.medias.toArray()[0].elem;\n        break;\n      // HTML5 implementation dispatches the fullscreen change event from the element\n      default:\n        fsElemDispatcher = elem;\n    }\n    this.fsChangeSubscription = fromEvent(fsElemDispatcher, this.polyfill.onchange).subscribe(() => {\n      this.onFullscreenChange();\n    });\n  }\n  onFullscreenChange() {\n    this.isFullscreen = !!document[this.polyfill.element];\n    this.onChangeFullscreen.emit(this.isFullscreen);\n  }\n  toggleFullscreen(element = null) {\n    if (this.isFullscreen) {\n      this.exit();\n    } else {\n      this.request(element);\n    }\n  }\n  request(elem) {\n    if (!elem) {\n      elem = this.videogularElement;\n    }\n    this.isFullscreen = true;\n    this.onChangeFullscreen.emit(true);\n    // Perform native full screen support\n    if (this.isAvailable && this.nativeFullscreen) {\n      // Fullscreen for mobile devices\n      if (VgUtilsService.isMobileDevice()) {\n        // We should make fullscreen the video object if it doesn't have native fullscreen support\n        // Fallback! We can't set vg-player on fullscreen, only video/audio objects\n        if (!this.polyfill.enabled && elem === this.videogularElement || VgUtilsService.isiOSDevice()) {\n          elem = this.medias.toArray()[0].elem;\n        }\n        this.enterElementInFullScreen(elem);\n      } else {\n        this.enterElementInFullScreen(this.videogularElement);\n      }\n    }\n  }\n  enterElementInFullScreen(elem) {\n    elem[this.polyfill.request]();\n  }\n  exit() {\n    this.isFullscreen = false;\n    this.onChangeFullscreen.emit(false);\n    // Exit from native fullscreen\n    if (this.isAvailable && this.nativeFullscreen) {\n      document[this.polyfill.exit]();\n    }\n  }\n}\n/** @nocollapse */\nVgFullscreenApiService.ɵfac = function VgFullscreenApiService_Factory(t) {\n  return new (t || VgFullscreenApiService)();\n};\n/** @nocollapse */\nVgFullscreenApiService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: VgFullscreenApiService,\n  factory: VgFullscreenApiService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgFullscreenApiService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass VgEvents {}\nVgEvents.VG_ABORT = 'abort';\nVgEvents.VG_CAN_PLAY = 'canplay';\nVgEvents.VG_CAN_PLAY_THROUGH = 'canplaythrough';\nVgEvents.VG_DURATION_CHANGE = 'durationchange';\nVgEvents.VG_EMPTIED = 'emptied';\nVgEvents.VG_ENCRYPTED = 'encrypted';\nVgEvents.VG_ENDED = 'ended';\nVgEvents.VG_ERROR = 'error';\nVgEvents.VG_LOADED_DATA = 'loadeddata';\nVgEvents.VG_LOADED_METADATA = 'loadedmetadata';\nVgEvents.VG_LOAD_START = 'loadstart';\nVgEvents.VG_PAUSE = 'pause';\nVgEvents.VG_PLAY = 'play';\nVgEvents.VG_PLAYING = 'playing';\nVgEvents.VG_PROGRESS = 'progress';\nVgEvents.VG_RATE_CHANGE = 'ratechange';\nVgEvents.VG_SEEK = 'seek';\nVgEvents.VG_SEEKED = 'seeked';\nVgEvents.VG_SEEKING = 'seeking';\nVgEvents.VG_STALLED = 'stalled';\nVgEvents.VG_SUSPEND = 'suspend';\nVgEvents.VG_TIME_UPDATE = 'timeupdate';\nVgEvents.VG_VOLUME_CHANGE = 'volumechange';\nVgEvents.VG_WAITING = 'waiting';\nVgEvents.VG_LOAD = 'load';\nVgEvents.VG_ENTER = 'enter';\nVgEvents.VG_EXIT = 'exit';\nVgEvents.VG_START_ADS = 'startads';\nVgEvents.VG_END_ADS = 'endads';\n/** @nocollapse */\nVgEvents.ɵfac = function VgEvents_Factory(t) {\n  return new (t || VgEvents)();\n};\n/** @nocollapse */\nVgEvents.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: VgEvents,\n  factory: VgEvents.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgEvents, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass VgCuePointsDirective {\n  constructor(ref) {\n    this.ref = ref;\n    this.onEnterCuePoint = new EventEmitter();\n    this.onUpdateCuePoint = new EventEmitter();\n    this.onExitCuePoint = new EventEmitter();\n    this.onCompleteCuePoint = new EventEmitter();\n    this.subscriptions = [];\n    this.cuesSubscriptions = [];\n    this.totalCues = 0;\n  }\n  ngOnInit() {\n    this.onLoad$ = fromEvent(this.ref.nativeElement, VgEvents.VG_LOAD);\n    this.subscriptions.push(this.onLoad$.subscribe(this.onLoad.bind(this)));\n  }\n  onLoad(event) {\n    const cues = event.target.track.cues;\n    this.ref.nativeElement.cues = cues;\n    this.updateCuePoints(cues);\n  }\n  updateCuePoints(cues) {\n    this.cuesSubscriptions.forEach(s => s.unsubscribe());\n    for (let i = 0, l = cues.length; i < l; i++) {\n      this.onEnter$ = fromEvent(cues[i], VgEvents.VG_ENTER);\n      this.cuesSubscriptions.push(this.onEnter$.subscribe(this.onEnter.bind(this)));\n      this.onExit$ = fromEvent(cues[i], VgEvents.VG_EXIT);\n      this.cuesSubscriptions.push(this.onExit$.subscribe(this.onExit.bind(this)));\n    }\n  }\n  onEnter(event) {\n    this.onEnterCuePoint.emit(event.target);\n  }\n  onExit(event) {\n    this.onExitCuePoint.emit(event.target);\n  }\n  ngDoCheck() {\n    if (this.ref.nativeElement.track && this.ref.nativeElement.track.cues) {\n      const changes = this.totalCues !== this.ref.nativeElement.track.cues.length;\n      if (changes) {\n        this.totalCues = this.ref.nativeElement.track.cues.length;\n        this.ref.nativeElement.cues = this.ref.nativeElement.track.cues;\n        this.updateCuePoints(this.ref.nativeElement.track.cues);\n      }\n    }\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n/** @nocollapse */\nVgCuePointsDirective.ɵfac = function VgCuePointsDirective_Factory(t) {\n  return new (t || VgCuePointsDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n/** @nocollapse */\nVgCuePointsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: VgCuePointsDirective,\n  selectors: [[\"\", \"vgCuePoints\", \"\"]],\n  outputs: {\n    onEnterCuePoint: \"onEnterCuePoint\",\n    onUpdateCuePoint: \"onUpdateCuePoint\",\n    onExitCuePoint: \"onExitCuePoint\",\n    onCompleteCuePoint: \"onCompleteCuePoint\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgCuePointsDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[vgCuePoints]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    onEnterCuePoint: [{\n      type: Output\n    }],\n    onUpdateCuePoint: [{\n      type: Output\n    }],\n    onExitCuePoint: [{\n      type: Output\n    }],\n    onCompleteCuePoint: [{\n      type: Output\n    }]\n  });\n})();\nclass VgMediaDirective {\n  constructor(api, ref) {\n    this.api = api;\n    this.ref = ref;\n    this.state = VgStates.VG_PAUSED;\n    this.time = {\n      current: 0,\n      total: 0,\n      left: 0\n    };\n    this.buffer = {\n      end: 0\n    };\n    this.canPlay = false;\n    this.canPlayThrough = false;\n    this.isMetadataLoaded = false;\n    this.isWaiting = false;\n    this.isCompleted = false;\n    this.isLive = false;\n    this.isBufferDetected = false;\n    this.checkInterval = 200;\n    this.currentPlayPos = 0;\n    this.lastPlayPos = 0;\n    this.playAtferSync = false;\n    this.bufferDetected = new Subject();\n  }\n  ngOnInit() {\n    if (this.vgMedia.nodeName) {\n      // It's a native element\n      this.elem = this.vgMedia;\n    } else {\n      // It's an Angular Class\n      this.elem = this.vgMedia.elem;\n    }\n    // Just in case we're creating this vgMedia dynamically register again into API\n    this.api.registerMedia(this);\n    this.subscriptions = {\n      // Native events\n      abort: fromEvent(this.elem, VgEvents.VG_ABORT),\n      canPlay: fromEvent(this.elem, VgEvents.VG_CAN_PLAY),\n      canPlayThrough: fromEvent(this.elem, VgEvents.VG_CAN_PLAY_THROUGH),\n      durationChange: fromEvent(this.elem, VgEvents.VG_DURATION_CHANGE),\n      emptied: fromEvent(this.elem, VgEvents.VG_EMPTIED),\n      encrypted: fromEvent(this.elem, VgEvents.VG_ENCRYPTED),\n      ended: fromEvent(this.elem, VgEvents.VG_ENDED),\n      error: fromEvent(this.elem, VgEvents.VG_ERROR),\n      loadedData: fromEvent(this.elem, VgEvents.VG_LOADED_DATA),\n      loadedMetadata: fromEvent(this.elem, VgEvents.VG_LOADED_METADATA),\n      loadStart: fromEvent(this.elem, VgEvents.VG_LOAD_START),\n      pause: fromEvent(this.elem, VgEvents.VG_PAUSE),\n      play: fromEvent(this.elem, VgEvents.VG_PLAY),\n      playing: fromEvent(this.elem, VgEvents.VG_PLAYING),\n      progress: fromEvent(this.elem, VgEvents.VG_PROGRESS),\n      rateChange: fromEvent(this.elem, VgEvents.VG_RATE_CHANGE),\n      seeked: fromEvent(this.elem, VgEvents.VG_SEEKED),\n      seeking: fromEvent(this.elem, VgEvents.VG_SEEKING),\n      stalled: fromEvent(this.elem, VgEvents.VG_STALLED),\n      suspend: fromEvent(this.elem, VgEvents.VG_SUSPEND),\n      timeUpdate: fromEvent(this.elem, VgEvents.VG_TIME_UPDATE),\n      volumeChange: fromEvent(this.elem, VgEvents.VG_VOLUME_CHANGE),\n      waiting: fromEvent(this.elem, VgEvents.VG_WAITING),\n      // Advertisement only events\n      startAds: fromEvent(window, VgEvents.VG_START_ADS),\n      endAds: fromEvent(window, VgEvents.VG_END_ADS),\n      // See changes on <source> child elements to reload the video file\n      mutation: new Observable(observer => {\n        const domObs = new MutationObserver(mutations => {\n          observer.next(mutations);\n        });\n        domObs.observe(this.elem, {\n          childList: true,\n          attributes: true\n        });\n        return () => {\n          domObs.disconnect();\n        };\n      }),\n      // Custom buffering detection\n      bufferDetected: this.bufferDetected\n    };\n    this.mutationObs = this.subscriptions.mutation.subscribe(this.onMutation.bind(this));\n    this.canPlayObs = this.subscriptions.canPlay.subscribe(this.onCanPlay.bind(this));\n    this.canPlayThroughObs = this.subscriptions.canPlayThrough.subscribe(this.onCanPlayThrough.bind(this));\n    this.loadedMetadataObs = this.subscriptions.loadedMetadata.subscribe(this.onLoadMetadata.bind(this));\n    this.waitingObs = this.subscriptions.waiting.subscribe(this.onWait.bind(this));\n    this.progressObs = this.subscriptions.progress.subscribe(this.onProgress.bind(this));\n    this.endedObs = this.subscriptions.ended.subscribe(this.onComplete.bind(this));\n    this.playingObs = this.subscriptions.playing.subscribe(this.onStartPlaying.bind(this));\n    this.playObs = this.subscriptions.play.subscribe(this.onPlay.bind(this));\n    this.pauseObs = this.subscriptions.pause.subscribe(this.onPause.bind(this));\n    this.timeUpdateObs = this.subscriptions.timeUpdate.subscribe(this.onTimeUpdate.bind(this));\n    this.volumeChangeObs = this.subscriptions.volumeChange.subscribe(this.onVolumeChange.bind(this));\n    this.errorObs = this.subscriptions.error.subscribe(this.onError.bind(this));\n    if (this.vgMaster) {\n      this.api.playerReadyEvent.subscribe(() => {\n        this.prepareSync();\n      });\n    }\n  }\n  prepareSync() {\n    const canPlayAll = [];\n    for (const media in this.api.medias) {\n      if (this.api.medias[media]) {\n        canPlayAll.push(this.api.medias[media].subscriptions.canPlay);\n      }\n    }\n    this.canPlayAllSubscription = combineLatest(canPlayAll).pipe(map((...params) => {\n      const checkReadyState = event => {\n        if (!event?.target) {\n          return false;\n        }\n        return event.target.readyState === 4;\n      };\n      const allReady = params.some(checkReadyState);\n      if (allReady && !this.syncSubscription) {\n        this.startSync();\n        this.syncSubscription.unsubscribe();\n      }\n    })).subscribe();\n  }\n  startSync() {\n    this.syncSubscription = timer(0, 1000).subscribe(() => {\n      for (const media in this.api.medias) {\n        if (this.api.medias[media] !== this) {\n          const diff = this.api.medias[media].currentTime - this.currentTime;\n          if (diff < -0.3 || diff > 0.3) {\n            this.playAtferSync = this.state === VgStates.VG_PLAYING;\n            this.pause();\n            this.api.medias[media].pause();\n            this.api.medias[media].currentTime = this.currentTime;\n          } else {\n            if (this.playAtferSync) {\n              this.play();\n              this.api.medias[media].play();\n              this.playAtferSync = false;\n            }\n          }\n        }\n      }\n    });\n  }\n  onMutation(mutations) {\n    // Detect changes only for source elements or src attribute\n    for (let i = 0, l = mutations.length; i < l; i++) {\n      const mut = mutations[i];\n      if (mut.type === 'attributes' && mut.attributeName === 'src') {\n        // Only load src file if it's not a blob (for DASH / HLS sources)\n        if (mut.target.src && mut.target.src.length > 0 && mut.target.src.indexOf('blob:') < 0) {\n          this.loadMedia();\n          break;\n        }\n      } else if (mut.type === 'childList' && mut.removedNodes.length && mut.removedNodes[0].nodeName.toLowerCase() === 'source') {\n        this.loadMedia();\n        break;\n      }\n    }\n  }\n  loadMedia() {\n    this.vgMedia.pause();\n    this.vgMedia.currentTime = 0;\n    // Start buffering until we can play the media file\n    this.stopBufferCheck();\n    this.isBufferDetected = true;\n    this.bufferDetected.next(this.isBufferDetected);\n    // TODO: This is ugly, we should find something cleaner. For some reason a TimerObservable doesn't works.\n    setTimeout(() => this.vgMedia.load(), 10);\n  }\n  play() {\n    // short-circuit if already playing\n    if (this.playPromise || this.state !== VgStates.VG_PAUSED && this.state !== VgStates.VG_ENDED) {\n      return;\n    }\n    this.playPromise = this.vgMedia.play();\n    // browser has async play promise\n    if (this.playPromise && this.playPromise.then && this.playPromise.catch) {\n      this.playPromise.then(() => {\n        this.playPromise = null;\n      }).catch(() => {\n        this.playPromise = null;\n        // deliberately empty for the sake of eating console noise\n      });\n    }\n\n    return this.playPromise;\n  }\n  pause() {\n    // browser has async play promise\n    if (this.playPromise) {\n      this.playPromise.then(() => {\n        this.vgMedia.pause();\n      });\n    } else {\n      this.vgMedia.pause();\n    }\n  }\n  get id() {\n    // We should return undefined if vgMedia still doesn't exist\n    let result;\n    if (this.vgMedia) {\n      result = this.vgMedia.id;\n    }\n    return result;\n  }\n  get duration() {\n    return this.vgMedia.duration === Infinity ? this.specifiedDuration : this.vgMedia.duration;\n  }\n  set currentTime(seconds) {\n    this.vgMedia.currentTime = seconds;\n    // this.elem.dispatchEvent(new CustomEvent(VgEvents.VG_SEEK));\n  }\n\n  get currentTime() {\n    return this.vgMedia.currentTime;\n  }\n  set volume(volume) {\n    this.vgMedia.volume = volume;\n  }\n  get volume() {\n    return this.vgMedia.volume;\n  }\n  set playbackRate(rate) {\n    this.vgMedia.playbackRate = rate;\n  }\n  get playbackRate() {\n    return this.vgMedia.playbackRate;\n  }\n  get buffered() {\n    return this.vgMedia.buffered;\n  }\n  get textTracks() {\n    return this.vgMedia.textTracks;\n  }\n  // @ts-ignore\n  onCanPlay(event) {\n    this.isBufferDetected = false;\n    this.bufferDetected.next(this.isBufferDetected);\n    this.canPlay = true;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onCanPlayThrough(event) {\n    this.isBufferDetected = false;\n    this.bufferDetected.next(this.isBufferDetected);\n    this.canPlayThrough = true;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onLoadMetadata(event) {\n    this.isMetadataLoaded = true;\n    this.time = {\n      current: 0,\n      left: 0,\n      total: this.duration * 1000\n    };\n    this.state = VgStates.VG_PAUSED;\n    // Live streaming check\n    const t = Math.round(this.time.total);\n    this.isLive = t === Infinity;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onWait(event) {\n    this.isWaiting = true;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onComplete(event) {\n    this.isCompleted = true;\n    this.state = VgStates.VG_ENDED;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onStartPlaying(event) {\n    this.state = VgStates.VG_PLAYING;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onPlay(event) {\n    this.state = VgStates.VG_PLAYING;\n    if (this.vgMaster) {\n      if (!this.syncSubscription || this.syncSubscription.closed) {\n        this.startSync();\n      }\n    }\n    this.startBufferCheck();\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onPause(event) {\n    this.state = VgStates.VG_PAUSED;\n    if (this.vgMaster) {\n      if (!this.playAtferSync) {\n        this.syncSubscription.unsubscribe();\n      }\n    }\n    this.stopBufferCheck();\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onTimeUpdate(event) {\n    const end = this.buffered.length - 1;\n    this.time = {\n      current: this.currentTime * 1000,\n      total: this.time.total,\n      left: (this.duration - this.currentTime) * 1000\n    };\n    if (end >= 0) {\n      this.buffer = {\n        end: this.buffered.end(end) * 1000\n      };\n    }\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onProgress(event) {\n    const end = this.buffered.length - 1;\n    if (end >= 0) {\n      this.buffer = {\n        end: this.buffered.end(end) * 1000\n      };\n    }\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onVolumeChange(event) {\n    // TODO: Save to localstorage the current volume\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onError(event) {\n    // TODO: Handle error messages\n    this.ref.detectChanges();\n  }\n  // http://stackoverflow.com/a/23828241/779529\n  bufferCheck() {\n    const offset = 1 / this.checkInterval;\n    this.currentPlayPos = this.currentTime;\n    if (!this.isBufferDetected && this.currentPlayPos < this.lastPlayPos + offset) {\n      this.isBufferDetected = true;\n    }\n    if (this.isBufferDetected && this.currentPlayPos > this.lastPlayPos + offset) {\n      this.isBufferDetected = false;\n    }\n    // Prevent calls to bufferCheck after ngOnDestroy have been called\n    if (!this.bufferDetected.closed) {\n      this.bufferDetected.next(this.isBufferDetected);\n    }\n    this.lastPlayPos = this.currentPlayPos;\n  }\n  startBufferCheck() {\n    this.checkBufferSubscription = timer(0, this.checkInterval).subscribe(() => {\n      this.bufferCheck();\n    });\n  }\n  stopBufferCheck() {\n    if (this.checkBufferSubscription) {\n      this.checkBufferSubscription.unsubscribe();\n    }\n    this.isBufferDetected = false;\n    this.bufferDetected.next(this.isBufferDetected);\n  }\n  seekTime(value, byPercent = false) {\n    let second;\n    const duration = this.duration;\n    if (byPercent) {\n      second = value * duration / 100;\n    } else {\n      second = value;\n    }\n    this.currentTime = second;\n  }\n  addTextTrack(type, label, language, mode) {\n    const newTrack = this.vgMedia.addTextTrack(type, label, language);\n    if (mode) {\n      newTrack.mode = mode;\n    }\n    return newTrack;\n  }\n  ngOnDestroy() {\n    this.vgMedia.src = '';\n    this.mutationObs?.unsubscribe();\n    this.canPlayObs?.unsubscribe();\n    this.canPlayThroughObs?.unsubscribe();\n    this.loadedMetadataObs?.unsubscribe();\n    this.waitingObs?.unsubscribe();\n    this.progressObs?.unsubscribe();\n    this.endedObs?.unsubscribe();\n    this.playingObs?.unsubscribe();\n    this.playObs?.unsubscribe();\n    this.pauseObs?.unsubscribe();\n    this.timeUpdateObs?.unsubscribe();\n    this.volumeChangeObs?.unsubscribe();\n    this.errorObs?.unsubscribe();\n    this.checkBufferSubscription?.unsubscribe();\n    this.syncSubscription?.unsubscribe();\n    this.bufferDetected?.complete();\n    this.bufferDetected?.unsubscribe();\n    this.api.unregisterMedia(this);\n  }\n}\n/** @nocollapse */\nVgMediaDirective.ɵfac = function VgMediaDirective_Factory(t) {\n  return new (t || VgMediaDirective)(i0.ɵɵdirectiveInject(VgApiService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n/** @nocollapse */\nVgMediaDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: VgMediaDirective,\n  selectors: [[\"\", \"vgMedia\", \"\"]],\n  inputs: {\n    vgMedia: \"vgMedia\",\n    vgMaster: \"vgMaster\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgMediaDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[vgMedia]'\n    }]\n  }], function () {\n    return [{\n      type: VgApiService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    vgMedia: [{\n      type: Input\n    }],\n    vgMaster: [{\n      type: Input\n    }]\n  });\n})();\nclass VgPlayerComponent {\n  constructor(ref, api, fsAPI, controlsHidden) {\n    this.api = api;\n    this.fsAPI = fsAPI;\n    this.controlsHidden = controlsHidden;\n    this.isFullscreen = false;\n    this.isNativeFullscreen = false;\n    this.areControlsHidden = false;\n    this.onPlayerReady = new EventEmitter();\n    this.onMediaReady = new EventEmitter();\n    this.subscriptions = [];\n    this.elem = ref.nativeElement;\n    this.api.registerElement(this.elem);\n  }\n  ngAfterContentInit() {\n    this.medias.toArray().forEach(media => {\n      this.api.registerMedia(media);\n    });\n    this.fsAPI.init(this.elem, this.medias);\n    this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n    this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\n    this.api.onPlayerReady(this.fsAPI);\n    this.onPlayerReady.emit(this.api);\n  }\n  onChangeFullscreen(fsState) {\n    if (!this.fsAPI.nativeFullscreen) {\n      this.isFullscreen = fsState;\n      this.zIndex = fsState ? VgUtilsService.getZIndex().toString() : 'auto';\n    } else {\n      this.isNativeFullscreen = fsState;\n    }\n  }\n  onHideControls(hidden) {\n    this.areControlsHidden = hidden;\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n/** @nocollapse */\nVgPlayerComponent.ɵfac = function VgPlayerComponent_Factory(t) {\n  return new (t || VgPlayerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgApiService), i0.ɵɵdirectiveInject(VgFullscreenApiService), i0.ɵɵdirectiveInject(VgControlsHiddenService));\n};\n/** @nocollapse */\nVgPlayerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgPlayerComponent,\n  selectors: [[\"vg-player\"]],\n  contentQueries: function VgPlayerComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, VgMediaDirective, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.medias = _t);\n    }\n  },\n  hostVars: 8,\n  hostBindings: function VgPlayerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"z-index\", ctx.zIndex);\n      i0.ɵɵclassProp(\"fullscreen\", ctx.isFullscreen)(\"native-fullscreen\", ctx.isNativeFullscreen)(\"controls-hidden\", ctx.areControlsHidden);\n    }\n  },\n  outputs: {\n    onPlayerReady: \"onPlayerReady\",\n    onMediaReady: \"onMediaReady\"\n  },\n  features: [i0.ɵɵProvidersFeature([VgApiService, VgFullscreenApiService, VgControlsHiddenService])],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function VgPlayerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  styles: [\"vg-player{font-family:videogular;position:relative;display:flex;width:100%;height:100%;overflow:hidden;background-color:#000}vg-player.fullscreen{position:fixed;left:0;top:0}vg-player.native-fullscreen.controls-hidden{cursor:none}\\n\"],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgPlayerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'vg-player',\n      encapsulation: ViewEncapsulation.None,\n      template: `<ng-content></ng-content>`,\n      providers: [VgApiService, VgFullscreenApiService, VgControlsHiddenService],\n      styles: [\"vg-player{font-family:videogular;position:relative;display:flex;width:100%;height:100%;overflow:hidden;background-color:#000}vg-player.fullscreen{position:fixed;left:0;top:0}vg-player.native-fullscreen.controls-hidden{cursor:none}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgApiService\n    }, {\n      type: VgFullscreenApiService\n    }, {\n      type: VgControlsHiddenService\n    }];\n  }, {\n    isFullscreen: [{\n      type: HostBinding,\n      args: ['class.fullscreen']\n    }],\n    isNativeFullscreen: [{\n      type: HostBinding,\n      args: ['class.native-fullscreen']\n    }],\n    areControlsHidden: [{\n      type: HostBinding,\n      args: ['class.controls-hidden']\n    }],\n    zIndex: [{\n      type: HostBinding,\n      args: ['style.z-index']\n    }],\n    onPlayerReady: [{\n      type: Output\n    }],\n    onMediaReady: [{\n      type: Output\n    }],\n    medias: [{\n      type: ContentChildren,\n      args: [VgMediaDirective, {\n        descendants: true\n      }]\n    }]\n  });\n})();\nconst services = [VgApiService, VgControlsHiddenService, VgFullscreenApiService, VgUtilsService, VgEvents, VgStates];\nconst directives = [VgCuePointsDirective, VgMediaDirective];\nclass VgCoreModule {}\n/** @nocollapse */\nVgCoreModule.ɵfac = function VgCoreModule_Factory(t) {\n  return new (t || VgCoreModule)();\n};\n/** @nocollapse */\nVgCoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: VgCoreModule\n});\n/** @nocollapse */\nVgCoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [...services],\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgCoreModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      providers: [...services],\n      declarations: [...directives, VgPlayerComponent],\n      exports: [...directives, VgPlayerComponent]\n    }]\n  }], null, null);\n})();\nclass VgMediaElement {\n  get audioTracks() {\n    return null;\n  }\n  // @ts-ignore\n  addTextTrack(kind, label, language) {\n    return null;\n  }\n  // @ts-ignore\n  canPlayType(type) {\n    return null;\n  }\n  load() {}\n  msClearEffects() {}\n  msGetAsCastingSource() {\n    return null;\n  }\n  // @ts-ignore\n  msInsertAudioEffect(_activatableClassId, _effectRequired, _config) {}\n  // @ts-ignore\n  msSetMediaProtectionManager(mediaProtectionManager) {}\n  pause() {}\n  play() {\n    return null;\n  }\n  // @ts-ignore\n  setMediaKeys(mediaKeys) {\n    return null;\n  }\n  // @ts-ignore\n  addEventListener(_type, _listener, _useCapture) {}\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { VgApiService, VgControlsHiddenService, VgCoreModule, VgCuePointsDirective, VgEvents, VgFullscreenApiService, VgMediaDirective, VgMediaElement, VgPlayerComponent, VgStates, VgUtilsService };\n//# sourceMappingURL=videogular-ngx-videogular-core.mjs.map","map":{"version":3,"names":["i0","Injectable","EventEmitter","Directive","Output","Input","Component","ViewEncapsulation","HostBinding","ContentChildren","NgModule","CommonModule","Subject","fromEvent","Observable","combineLatest","timer","map","VgStates","VG_ENDED","VG_PAUSED","VG_PLAYING","VG_LOADING","ɵfac","ɵprov","type","args","providedIn","VgApiService","constructor","medias","playerReadyEvent","isPlayerReady","onPlayerReady","fsAPI","emit","getDefaultMedia","item","getMasterMedia","master","id","vgMaster","isMasterDefined","result","getMediaById","media","play","pause","duration","$$getAllProperties","currentTime","seconds","$$setAllProperties","state","volume","playbackRate","rate","canPlay","canPlayThrough","isMetadataLoaded","isWaiting","isCompleted","isLive","isMaster","time","buffer","buffered","subscriptions","textTracks","seekTime","value","byPercent","$$seek","second","addTextTrack","label","language","$$addTextTrack","property","nMedias","Object","keys","length","current","total","left","firstMediaId","registerElement","elem","videogularElement","registerMedia","unregisterMedia","VgControlsHiddenService","isHiddenSubject","isHidden","asObservable","hidden","next","VgUtilsService","getZIndex","zIndex","elementZIndex","tags","document","getElementsByTagName","i","l","parseInt","window","getComputedStyle","isMobileDevice","orientation","navigator","userAgent","indexOf","isiOSDevice","match","isIpadOS","maxTouchPoints","test","platform","isCordova","URL","VgFullscreenApiService","nativeFullscreen","isFullscreen","onChangeFullscreen","init","APIs","w3","enabled","element","request","exit","onchange","onerror","newWebkit","oldWebkit","moz","ios","ms","browser","polyfill","isAvailable","fsElemDispatcher","toArray","fsChangeSubscription","subscribe","onFullscreenChange","toggleFullscreen","enterElementInFullScreen","VgEvents","VG_ABORT","VG_CAN_PLAY","VG_CAN_PLAY_THROUGH","VG_DURATION_CHANGE","VG_EMPTIED","VG_ENCRYPTED","VG_ERROR","VG_LOADED_DATA","VG_LOADED_METADATA","VG_LOAD_START","VG_PAUSE","VG_PLAY","VG_PROGRESS","VG_RATE_CHANGE","VG_SEEK","VG_SEEKED","VG_SEEKING","VG_STALLED","VG_SUSPEND","VG_TIME_UPDATE","VG_VOLUME_CHANGE","VG_WAITING","VG_LOAD","VG_ENTER","VG_EXIT","VG_START_ADS","VG_END_ADS","VgCuePointsDirective","ref","onEnterCuePoint","onUpdateCuePoint","onExitCuePoint","onCompleteCuePoint","cuesSubscriptions","totalCues","ngOnInit","onLoad$","nativeElement","push","onLoad","bind","event","cues","target","track","updateCuePoints","forEach","s","unsubscribe","onEnter$","onEnter","onExit$","onExit","ngDoCheck","changes","ngOnDestroy","ElementRef","ɵdir","selector","VgMediaDirective","api","end","isBufferDetected","checkInterval","currentPlayPos","lastPlayPos","playAtferSync","bufferDetected","vgMedia","nodeName","abort","durationChange","emptied","encrypted","ended","error","loadedData","loadedMetadata","loadStart","playing","progress","rateChange","seeked","seeking","stalled","suspend","timeUpdate","volumeChange","waiting","startAds","endAds","mutation","observer","domObs","MutationObserver","mutations","observe","childList","attributes","disconnect","mutationObs","onMutation","canPlayObs","onCanPlay","canPlayThroughObs","onCanPlayThrough","loadedMetadataObs","onLoadMetadata","waitingObs","onWait","progressObs","onProgress","endedObs","onComplete","playingObs","onStartPlaying","playObs","onPlay","pauseObs","onPause","timeUpdateObs","onTimeUpdate","volumeChangeObs","onVolumeChange","errorObs","onError","prepareSync","canPlayAll","canPlayAllSubscription","pipe","params","checkReadyState","readyState","allReady","some","syncSubscription","startSync","diff","mut","attributeName","src","loadMedia","removedNodes","toLowerCase","stopBufferCheck","setTimeout","load","playPromise","then","catch","Infinity","specifiedDuration","detectChanges","t","Math","round","closed","startBufferCheck","bufferCheck","offset","checkBufferSubscription","mode","newTrack","complete","ChangeDetectorRef","VgPlayerComponent","controlsHidden","isNativeFullscreen","areControlsHidden","onMediaReady","ngAfterContentInit","onHideControls","fsState","toString","ɵcmp","encapsulation","None","template","providers","styles","descendants","services","directives","VgCoreModule","ɵmod","ɵinj","imports","declarations","exports","VgMediaElement","audioTracks","kind","canPlayType","msClearEffects","msGetAsCastingSource","msInsertAudioEffect","_activatableClassId","_effectRequired","_config","msSetMediaProtectionManager","mediaProtectionManager","setMediaKeys","mediaKeys","addEventListener","_type","_listener","_useCapture"],"sources":["/Users/teeicloud/TitanEstates/Titan Estates/node_modules/@videogular/ngx-videogular/fesm2020/videogular-ngx-videogular-core.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Input, Component, ViewEncapsulation, HostBinding, ContentChildren, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Subject, fromEvent, Observable, combineLatest, timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nclass VgStates {\n}\nVgStates.VG_ENDED = 'ended';\nVgStates.VG_PAUSED = 'paused';\nVgStates.VG_PLAYING = 'playing';\nVgStates.VG_LOADING = 'waiting';\n/** @nocollapse */ VgStates.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgStates, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ VgStates.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgStates, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgStates, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass VgApiService {\n    constructor() {\n        this.medias = {}; // TODO: refactor to Set<IPlayable>\n        this.playerReadyEvent = new EventEmitter(true);\n        this.isPlayerReady = false;\n    }\n    onPlayerReady(fsAPI) {\n        this.fsAPI = fsAPI;\n        this.isPlayerReady = true;\n        this.playerReadyEvent.emit(this);\n    }\n    getDefaultMedia() {\n        for (const item in this.medias) {\n            if (this.medias[item]) {\n                return this.medias[item];\n            }\n        }\n    }\n    getMasterMedia() {\n        let master;\n        for (const id in this.medias) {\n            if (this.medias[id].vgMaster === 'true' ||\n                this.medias[id].vgMaster === true) {\n                master = this.medias[id];\n                break;\n            }\n        }\n        return master || this.getDefaultMedia();\n    }\n    isMasterDefined() {\n        let result = false;\n        for (const id in this.medias) {\n            if (this.medias[id].vgMaster === 'true' ||\n                this.medias[id].vgMaster === true) {\n                result = true;\n                break;\n            }\n        }\n        return result;\n    }\n    getMediaById(id = null) {\n        let media = this.medias[id];\n        if (!id || id === '*') {\n            media = this;\n        }\n        return media;\n    }\n    play() {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.medias[id].play();\n            }\n        }\n    }\n    pause() {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.medias[id].pause();\n            }\n        }\n    }\n    get duration() {\n        return this.$$getAllProperties('duration');\n    }\n    set currentTime(seconds) {\n        this.$$setAllProperties('currentTime', seconds);\n    }\n    get currentTime() {\n        return this.$$getAllProperties('currentTime');\n    }\n    set state(state) {\n        this.$$setAllProperties('state', state);\n    }\n    get state() {\n        return this.$$getAllProperties('state');\n    }\n    set volume(volume) {\n        this.$$setAllProperties('volume', volume);\n    }\n    get volume() {\n        return this.$$getAllProperties('volume');\n    }\n    set playbackRate(rate) {\n        this.$$setAllProperties('playbackRate', rate);\n    }\n    get playbackRate() {\n        return this.$$getAllProperties('playbackRate');\n    }\n    get canPlay() {\n        return this.$$getAllProperties('canPlay');\n    }\n    get canPlayThrough() {\n        return this.$$getAllProperties('canPlayThrough');\n    }\n    get isMetadataLoaded() {\n        return this.$$getAllProperties('isMetadataLoaded');\n    }\n    get isWaiting() {\n        return this.$$getAllProperties('isWaiting');\n    }\n    get isCompleted() {\n        return this.$$getAllProperties('isCompleted');\n    }\n    get isLive() {\n        return this.$$getAllProperties('isLive');\n    }\n    get isMaster() {\n        return this.$$getAllProperties('isMaster');\n    }\n    get time() {\n        return this.$$getAllProperties('time');\n    }\n    get buffer() {\n        return this.$$getAllProperties('buffer');\n    }\n    get buffered() {\n        return this.$$getAllProperties('buffered');\n    }\n    get subscriptions() {\n        return this.$$getAllProperties('subscriptions');\n    }\n    get textTracks() {\n        return this.$$getAllProperties('textTracks');\n    }\n    seekTime(value, byPercent = false) {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.$$seek(this.medias[id], value, byPercent);\n            }\n        }\n    }\n    $$seek(media, value, byPercent = false) {\n        let second;\n        let duration = media.duration;\n        if (byPercent) {\n            if (this.isMasterDefined()) {\n                duration = this.getMasterMedia().duration;\n            }\n            second = (value * duration) / 100;\n        }\n        else {\n            second = value;\n        }\n        media.currentTime = second;\n    }\n    addTextTrack(type, label, language) {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.$$addTextTrack(this.medias[id], type, label, language);\n            }\n        }\n    }\n    $$addTextTrack(media, type, label, language) {\n        media.addTextTrack(type, label, language);\n    }\n    $$getAllProperties(property) {\n        const medias = {};\n        let result;\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                medias[id] = this.medias[id];\n            }\n        }\n        const nMedias = Object.keys(medias).length;\n        switch (nMedias) {\n            case 0:\n                // Return default values until vgMedia is initialized\n                switch (property) {\n                    case 'state':\n                        result = VgStates.VG_PAUSED;\n                        break;\n                    case 'playbackRate':\n                    case 'volume':\n                        result = 1;\n                        break;\n                    case 'time':\n                        result = { current: 0, total: 0, left: 0 };\n                        break;\n                }\n                break;\n            case 1:\n                // If there's only one media element then return the plain value\n                const firstMediaId = Object.keys(medias)[0];\n                result = medias[firstMediaId][property];\n                break;\n            default:\n                // TODO: return 'master' value\n                const master = this.getMasterMedia();\n                result = medias[master.id][property];\n        }\n        return result;\n    }\n    $$setAllProperties(property, value) {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.medias[id][property] = value;\n            }\n        }\n    }\n    registerElement(elem) {\n        this.videogularElement = elem;\n    }\n    registerMedia(media) {\n        this.medias[media.id] = media;\n    }\n    unregisterMedia(media) {\n        delete this.medias[media.id];\n    }\n}\n/** @nocollapse */ VgApiService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgApiService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ VgApiService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgApiService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgApiService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass VgControlsHiddenService {\n    constructor() {\n        this.isHiddenSubject = new Subject();\n        this.isHidden = this.isHiddenSubject.asObservable();\n    }\n    state(hidden) {\n        this.isHiddenSubject.next(hidden);\n    }\n}\n/** @nocollapse */ VgControlsHiddenService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgControlsHiddenService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ VgControlsHiddenService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgControlsHiddenService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgControlsHiddenService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass VgUtilsService {\n    /**\n     * Inspired by Paul Irish\n     * https://gist.github.com/paulirish/211209\n     */\n    static getZIndex() {\n        let zIndex = 1;\n        let elementZIndex;\n        const tags = document.getElementsByTagName('*');\n        for (let i = 0, l = tags.length; i < l; i++) {\n            elementZIndex = parseInt(window.getComputedStyle(tags[i])['z-index'], 10);\n            if (elementZIndex > zIndex) {\n                zIndex = elementZIndex + 1;\n            }\n        }\n        return zIndex;\n    }\n    // Very simple mobile detection, not 100% reliable\n    static isMobileDevice() {\n        // return (\n        //   typeof window.screen.orientation !== 'undefined' ||\n        //   navigator.userAgent.indexOf('IEMobile') !== -1\n        // );\n        // window.orientation is deprecated and we should use window.screen.orientation\n        return (typeof window.orientation !== 'undefined' ||\n            navigator.userAgent.indexOf('IEMobile') !== -1);\n    }\n    static isiOSDevice() {\n        return ((navigator.userAgent.match(/ip(hone|ad|od)/i) ||\n            VgUtilsService.isIpadOS()) &&\n            !navigator.userAgent.match(/(iemobile)[\\/\\s]?([\\w\\.]*)/i));\n    }\n    static isIpadOS() {\n        return (navigator.maxTouchPoints &&\n            navigator.maxTouchPoints > 2 &&\n            /MacIntel/.test(navigator.platform));\n    }\n    static isCordova() {\n        return (document.URL.indexOf('http://') === -1 &&\n            document.URL.indexOf('https://') === -1);\n    }\n}\n/** @nocollapse */ VgUtilsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgUtilsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ VgUtilsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgUtilsService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgUtilsService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass VgFullscreenApiService {\n    constructor() {\n        this.nativeFullscreen = true;\n        this.isFullscreen = false;\n        this.onChangeFullscreen = new EventEmitter();\n    }\n    init(elem, medias) {\n        this.videogularElement = elem;\n        this.medias = medias;\n        const APIs = {\n            w3: {\n                enabled: 'fullscreenEnabled',\n                element: 'fullscreenElement',\n                request: 'requestFullscreen',\n                exit: 'exitFullscreen',\n                onchange: 'fullscreenchange',\n                onerror: 'fullscreenerror',\n            },\n            newWebkit: {\n                enabled: 'webkitFullscreenEnabled',\n                element: 'webkitFullscreenElement',\n                request: 'webkitRequestFullscreen',\n                exit: 'webkitExitFullscreen',\n                onchange: 'webkitfullscreenchange',\n                onerror: 'webkitfullscreenerror',\n            },\n            oldWebkit: {\n                enabled: 'webkitIsFullScreen',\n                element: 'webkitCurrentFullScreenElement',\n                request: 'webkitRequestFullScreen',\n                exit: 'webkitCancelFullScreen',\n                onchange: 'webkitfullscreenchange',\n                onerror: 'webkitfullscreenerror',\n            },\n            moz: {\n                enabled: 'mozFullScreen',\n                element: 'mozFullScreenElement',\n                request: 'mozRequestFullScreen',\n                exit: 'mozCancelFullScreen',\n                onchange: 'mozfullscreenchange',\n                onerror: 'mozfullscreenerror',\n            },\n            ios: {\n                enabled: 'webkitFullscreenEnabled',\n                element: 'webkitFullscreenElement',\n                request: 'webkitEnterFullscreen',\n                exit: 'webkitExitFullscreen',\n                onchange: 'webkitendfullscreen',\n                onerror: 'webkitfullscreenerror',\n            },\n            ms: {\n                enabled: 'msFullscreenEnabled',\n                element: 'msFullscreenElement',\n                request: 'msRequestFullscreen',\n                exit: 'msExitFullscreen',\n                onchange: 'MSFullscreenChange',\n                onerror: 'MSFullscreenError',\n            },\n        };\n        for (const browser in APIs) {\n            if (APIs[browser].enabled in document) {\n                this.polyfill = APIs[browser];\n                break;\n            }\n        }\n        if (VgUtilsService.isiOSDevice()) {\n            this.polyfill = APIs.ios;\n        }\n        this.isAvailable = this.polyfill != null;\n        if (this.polyfill == null) {\n            return;\n        }\n        let fsElemDispatcher;\n        switch (this.polyfill.onchange) {\n            // Mozilla dispatches the fullscreen change event from document, not the element\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=724816#c3\n            case 'mozfullscreenchange':\n                fsElemDispatcher = document;\n                break;\n            // iOS dispatches the fullscreen change event from video element\n            case 'webkitendfullscreen':\n                fsElemDispatcher = this.medias.toArray()[0].elem;\n                break;\n            // HTML5 implementation dispatches the fullscreen change event from the element\n            default:\n                fsElemDispatcher = elem;\n        }\n        this.fsChangeSubscription = fromEvent(fsElemDispatcher, this.polyfill.onchange).subscribe(() => {\n            this.onFullscreenChange();\n        });\n    }\n    onFullscreenChange() {\n        this.isFullscreen = !!document[this.polyfill.element];\n        this.onChangeFullscreen.emit(this.isFullscreen);\n    }\n    toggleFullscreen(element = null) {\n        if (this.isFullscreen) {\n            this.exit();\n        }\n        else {\n            this.request(element);\n        }\n    }\n    request(elem) {\n        if (!elem) {\n            elem = this.videogularElement;\n        }\n        this.isFullscreen = true;\n        this.onChangeFullscreen.emit(true);\n        // Perform native full screen support\n        if (this.isAvailable && this.nativeFullscreen) {\n            // Fullscreen for mobile devices\n            if (VgUtilsService.isMobileDevice()) {\n                // We should make fullscreen the video object if it doesn't have native fullscreen support\n                // Fallback! We can't set vg-player on fullscreen, only video/audio objects\n                if ((!this.polyfill.enabled && elem === this.videogularElement) ||\n                    VgUtilsService.isiOSDevice()) {\n                    elem = this.medias.toArray()[0].elem;\n                }\n                this.enterElementInFullScreen(elem);\n            }\n            else {\n                this.enterElementInFullScreen(this.videogularElement);\n            }\n        }\n    }\n    enterElementInFullScreen(elem) {\n        elem[this.polyfill.request]();\n    }\n    exit() {\n        this.isFullscreen = false;\n        this.onChangeFullscreen.emit(false);\n        // Exit from native fullscreen\n        if (this.isAvailable && this.nativeFullscreen) {\n            document[this.polyfill.exit]();\n        }\n    }\n}\n/** @nocollapse */ VgFullscreenApiService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgFullscreenApiService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ VgFullscreenApiService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgFullscreenApiService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgFullscreenApiService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass VgEvents {\n}\nVgEvents.VG_ABORT = 'abort';\nVgEvents.VG_CAN_PLAY = 'canplay';\nVgEvents.VG_CAN_PLAY_THROUGH = 'canplaythrough';\nVgEvents.VG_DURATION_CHANGE = 'durationchange';\nVgEvents.VG_EMPTIED = 'emptied';\nVgEvents.VG_ENCRYPTED = 'encrypted';\nVgEvents.VG_ENDED = 'ended';\nVgEvents.VG_ERROR = 'error';\nVgEvents.VG_LOADED_DATA = 'loadeddata';\nVgEvents.VG_LOADED_METADATA = 'loadedmetadata';\nVgEvents.VG_LOAD_START = 'loadstart';\nVgEvents.VG_PAUSE = 'pause';\nVgEvents.VG_PLAY = 'play';\nVgEvents.VG_PLAYING = 'playing';\nVgEvents.VG_PROGRESS = 'progress';\nVgEvents.VG_RATE_CHANGE = 'ratechange';\nVgEvents.VG_SEEK = 'seek';\nVgEvents.VG_SEEKED = 'seeked';\nVgEvents.VG_SEEKING = 'seeking';\nVgEvents.VG_STALLED = 'stalled';\nVgEvents.VG_SUSPEND = 'suspend';\nVgEvents.VG_TIME_UPDATE = 'timeupdate';\nVgEvents.VG_VOLUME_CHANGE = 'volumechange';\nVgEvents.VG_WAITING = 'waiting';\nVgEvents.VG_LOAD = 'load';\nVgEvents.VG_ENTER = 'enter';\nVgEvents.VG_EXIT = 'exit';\nVgEvents.VG_START_ADS = 'startads';\nVgEvents.VG_END_ADS = 'endads';\n/** @nocollapse */ VgEvents.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgEvents, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n/** @nocollapse */ VgEvents.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgEvents, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgEvents, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass VgCuePointsDirective {\n    constructor(ref) {\n        this.ref = ref;\n        this.onEnterCuePoint = new EventEmitter();\n        this.onUpdateCuePoint = new EventEmitter();\n        this.onExitCuePoint = new EventEmitter();\n        this.onCompleteCuePoint = new EventEmitter();\n        this.subscriptions = [];\n        this.cuesSubscriptions = [];\n        this.totalCues = 0;\n    }\n    ngOnInit() {\n        this.onLoad$ = fromEvent(this.ref.nativeElement, VgEvents.VG_LOAD);\n        this.subscriptions.push(this.onLoad$.subscribe(this.onLoad.bind(this)));\n    }\n    onLoad(event) {\n        const cues = event.target.track.cues;\n        this.ref.nativeElement.cues = cues;\n        this.updateCuePoints(cues);\n    }\n    updateCuePoints(cues) {\n        this.cuesSubscriptions.forEach((s) => s.unsubscribe());\n        for (let i = 0, l = cues.length; i < l; i++) {\n            this.onEnter$ = fromEvent(cues[i], VgEvents.VG_ENTER);\n            this.cuesSubscriptions.push(this.onEnter$.subscribe(this.onEnter.bind(this)));\n            this.onExit$ = fromEvent(cues[i], VgEvents.VG_EXIT);\n            this.cuesSubscriptions.push(this.onExit$.subscribe(this.onExit.bind(this)));\n        }\n    }\n    onEnter(event) {\n        this.onEnterCuePoint.emit(event.target);\n    }\n    onExit(event) {\n        this.onExitCuePoint.emit(event.target);\n    }\n    ngDoCheck() {\n        if (this.ref.nativeElement.track && this.ref.nativeElement.track.cues) {\n            const changes = this.totalCues !== this.ref.nativeElement.track.cues.length;\n            if (changes) {\n                this.totalCues = this.ref.nativeElement.track.cues.length;\n                this.ref.nativeElement.cues = this.ref.nativeElement.track.cues;\n                this.updateCuePoints(this.ref.nativeElement.track.cues);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach((s) => s.unsubscribe());\n    }\n}\n/** @nocollapse */ VgCuePointsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgCuePointsDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ VgCuePointsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: VgCuePointsDirective, selector: \"[vgCuePoints]\", outputs: { onEnterCuePoint: \"onEnterCuePoint\", onUpdateCuePoint: \"onUpdateCuePoint\", onExitCuePoint: \"onExitCuePoint\", onCompleteCuePoint: \"onCompleteCuePoint\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgCuePointsDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[vgCuePoints]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { onEnterCuePoint: [{\n                type: Output\n            }], onUpdateCuePoint: [{\n                type: Output\n            }], onExitCuePoint: [{\n                type: Output\n            }], onCompleteCuePoint: [{\n                type: Output\n            }] } });\n\nclass VgMediaDirective {\n    constructor(api, ref) {\n        this.api = api;\n        this.ref = ref;\n        this.state = VgStates.VG_PAUSED;\n        this.time = { current: 0, total: 0, left: 0 };\n        this.buffer = { end: 0 };\n        this.canPlay = false;\n        this.canPlayThrough = false;\n        this.isMetadataLoaded = false;\n        this.isWaiting = false;\n        this.isCompleted = false;\n        this.isLive = false;\n        this.isBufferDetected = false;\n        this.checkInterval = 200;\n        this.currentPlayPos = 0;\n        this.lastPlayPos = 0;\n        this.playAtferSync = false;\n        this.bufferDetected = new Subject();\n    }\n    ngOnInit() {\n        if (this.vgMedia.nodeName) {\n            // It's a native element\n            this.elem = this.vgMedia;\n        }\n        else {\n            // It's an Angular Class\n            this.elem = this.vgMedia.elem;\n        }\n        // Just in case we're creating this vgMedia dynamically register again into API\n        this.api.registerMedia(this);\n        this.subscriptions = {\n            // Native events\n            abort: fromEvent(this.elem, VgEvents.VG_ABORT),\n            canPlay: fromEvent(this.elem, VgEvents.VG_CAN_PLAY),\n            canPlayThrough: fromEvent(this.elem, VgEvents.VG_CAN_PLAY_THROUGH),\n            durationChange: fromEvent(this.elem, VgEvents.VG_DURATION_CHANGE),\n            emptied: fromEvent(this.elem, VgEvents.VG_EMPTIED),\n            encrypted: fromEvent(this.elem, VgEvents.VG_ENCRYPTED),\n            ended: fromEvent(this.elem, VgEvents.VG_ENDED),\n            error: fromEvent(this.elem, VgEvents.VG_ERROR),\n            loadedData: fromEvent(this.elem, VgEvents.VG_LOADED_DATA),\n            loadedMetadata: fromEvent(this.elem, VgEvents.VG_LOADED_METADATA),\n            loadStart: fromEvent(this.elem, VgEvents.VG_LOAD_START),\n            pause: fromEvent(this.elem, VgEvents.VG_PAUSE),\n            play: fromEvent(this.elem, VgEvents.VG_PLAY),\n            playing: fromEvent(this.elem, VgEvents.VG_PLAYING),\n            progress: fromEvent(this.elem, VgEvents.VG_PROGRESS),\n            rateChange: fromEvent(this.elem, VgEvents.VG_RATE_CHANGE),\n            seeked: fromEvent(this.elem, VgEvents.VG_SEEKED),\n            seeking: fromEvent(this.elem, VgEvents.VG_SEEKING),\n            stalled: fromEvent(this.elem, VgEvents.VG_STALLED),\n            suspend: fromEvent(this.elem, VgEvents.VG_SUSPEND),\n            timeUpdate: fromEvent(this.elem, VgEvents.VG_TIME_UPDATE),\n            volumeChange: fromEvent(this.elem, VgEvents.VG_VOLUME_CHANGE),\n            waiting: fromEvent(this.elem, VgEvents.VG_WAITING),\n            // Advertisement only events\n            startAds: fromEvent(window, VgEvents.VG_START_ADS),\n            endAds: fromEvent(window, VgEvents.VG_END_ADS),\n            // See changes on <source> child elements to reload the video file\n            mutation: new Observable((observer) => {\n                const domObs = new MutationObserver((mutations) => {\n                    observer.next(mutations);\n                });\n                domObs.observe(this.elem, { childList: true, attributes: true });\n                return () => {\n                    domObs.disconnect();\n                };\n            }),\n            // Custom buffering detection\n            bufferDetected: this.bufferDetected,\n        };\n        this.mutationObs = this.subscriptions.mutation.subscribe(this.onMutation.bind(this));\n        this.canPlayObs = this.subscriptions.canPlay.subscribe(this.onCanPlay.bind(this));\n        this.canPlayThroughObs = this.subscriptions.canPlayThrough.subscribe(this.onCanPlayThrough.bind(this));\n        this.loadedMetadataObs = this.subscriptions.loadedMetadata.subscribe(this.onLoadMetadata.bind(this));\n        this.waitingObs = this.subscriptions.waiting.subscribe(this.onWait.bind(this));\n        this.progressObs = this.subscriptions.progress.subscribe(this.onProgress.bind(this));\n        this.endedObs = this.subscriptions.ended.subscribe(this.onComplete.bind(this));\n        this.playingObs = this.subscriptions.playing.subscribe(this.onStartPlaying.bind(this));\n        this.playObs = this.subscriptions.play.subscribe(this.onPlay.bind(this));\n        this.pauseObs = this.subscriptions.pause.subscribe(this.onPause.bind(this));\n        this.timeUpdateObs = this.subscriptions.timeUpdate.subscribe(this.onTimeUpdate.bind(this));\n        this.volumeChangeObs = this.subscriptions.volumeChange.subscribe(this.onVolumeChange.bind(this));\n        this.errorObs = this.subscriptions.error.subscribe(this.onError.bind(this));\n        if (this.vgMaster) {\n            this.api.playerReadyEvent.subscribe(() => {\n                this.prepareSync();\n            });\n        }\n    }\n    prepareSync() {\n        const canPlayAll = [];\n        for (const media in this.api.medias) {\n            if (this.api.medias[media]) {\n                canPlayAll.push(this.api.medias[media].subscriptions.canPlay);\n            }\n        }\n        this.canPlayAllSubscription = combineLatest(canPlayAll)\n            .pipe(map((...params) => {\n            const checkReadyState = (event) => {\n                if (!event?.target) {\n                    return false;\n                }\n                return event.target.readyState === 4;\n            };\n            const allReady = params.some(checkReadyState);\n            if (allReady && !this.syncSubscription) {\n                this.startSync();\n                this.syncSubscription.unsubscribe();\n            }\n        }))\n            .subscribe();\n    }\n    startSync() {\n        this.syncSubscription = timer(0, 1000).subscribe(() => {\n            for (const media in this.api.medias) {\n                if (this.api.medias[media] !== this) {\n                    const diff = this.api.medias[media].currentTime - this.currentTime;\n                    if (diff < -0.3 || diff > 0.3) {\n                        this.playAtferSync = this.state === VgStates.VG_PLAYING;\n                        this.pause();\n                        this.api.medias[media].pause();\n                        this.api.medias[media].currentTime = this.currentTime;\n                    }\n                    else {\n                        if (this.playAtferSync) {\n                            this.play();\n                            this.api.medias[media].play();\n                            this.playAtferSync = false;\n                        }\n                    }\n                }\n            }\n        });\n    }\n    onMutation(mutations) {\n        // Detect changes only for source elements or src attribute\n        for (let i = 0, l = mutations.length; i < l; i++) {\n            const mut = mutations[i];\n            if (mut.type === 'attributes' && mut.attributeName === 'src') {\n                // Only load src file if it's not a blob (for DASH / HLS sources)\n                if (mut.target.src &&\n                    mut.target.src.length > 0 &&\n                    mut.target.src.indexOf('blob:') < 0) {\n                    this.loadMedia();\n                    break;\n                }\n            }\n            else if (mut.type === 'childList' &&\n                mut.removedNodes.length &&\n                mut.removedNodes[0].nodeName.toLowerCase() === 'source') {\n                this.loadMedia();\n                break;\n            }\n        }\n    }\n    loadMedia() {\n        this.vgMedia.pause();\n        this.vgMedia.currentTime = 0;\n        // Start buffering until we can play the media file\n        this.stopBufferCheck();\n        this.isBufferDetected = true;\n        this.bufferDetected.next(this.isBufferDetected);\n        // TODO: This is ugly, we should find something cleaner. For some reason a TimerObservable doesn't works.\n        setTimeout(() => this.vgMedia.load(), 10);\n    }\n    play() {\n        // short-circuit if already playing\n        if (this.playPromise ||\n            (this.state !== VgStates.VG_PAUSED && this.state !== VgStates.VG_ENDED)) {\n            return;\n        }\n        this.playPromise = this.vgMedia.play();\n        // browser has async play promise\n        if (this.playPromise && this.playPromise.then && this.playPromise.catch) {\n            this.playPromise\n                .then(() => {\n                this.playPromise = null;\n            })\n                .catch(() => {\n                this.playPromise = null;\n                // deliberately empty for the sake of eating console noise\n            });\n        }\n        return this.playPromise;\n    }\n    pause() {\n        // browser has async play promise\n        if (this.playPromise) {\n            this.playPromise.then(() => {\n                this.vgMedia.pause();\n            });\n        }\n        else {\n            this.vgMedia.pause();\n        }\n    }\n    get id() {\n        // We should return undefined if vgMedia still doesn't exist\n        let result;\n        if (this.vgMedia) {\n            result = this.vgMedia.id;\n        }\n        return result;\n    }\n    get duration() {\n        return this.vgMedia.duration === Infinity\n            ? this.specifiedDuration\n            : this.vgMedia.duration;\n    }\n    set currentTime(seconds) {\n        this.vgMedia.currentTime = seconds;\n        // this.elem.dispatchEvent(new CustomEvent(VgEvents.VG_SEEK));\n    }\n    get currentTime() {\n        return this.vgMedia.currentTime;\n    }\n    set volume(volume) {\n        this.vgMedia.volume = volume;\n    }\n    get volume() {\n        return this.vgMedia.volume;\n    }\n    set playbackRate(rate) {\n        this.vgMedia.playbackRate = rate;\n    }\n    get playbackRate() {\n        return this.vgMedia.playbackRate;\n    }\n    get buffered() {\n        return this.vgMedia.buffered;\n    }\n    get textTracks() {\n        return this.vgMedia.textTracks;\n    }\n    // @ts-ignore\n    onCanPlay(event) {\n        this.isBufferDetected = false;\n        this.bufferDetected.next(this.isBufferDetected);\n        this.canPlay = true;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onCanPlayThrough(event) {\n        this.isBufferDetected = false;\n        this.bufferDetected.next(this.isBufferDetected);\n        this.canPlayThrough = true;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onLoadMetadata(event) {\n        this.isMetadataLoaded = true;\n        this.time = {\n            current: 0,\n            left: 0,\n            total: this.duration * 1000,\n        };\n        this.state = VgStates.VG_PAUSED;\n        // Live streaming check\n        const t = Math.round(this.time.total);\n        this.isLive = t === Infinity;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onWait(event) {\n        this.isWaiting = true;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onComplete(event) {\n        this.isCompleted = true;\n        this.state = VgStates.VG_ENDED;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onStartPlaying(event) {\n        this.state = VgStates.VG_PLAYING;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onPlay(event) {\n        this.state = VgStates.VG_PLAYING;\n        if (this.vgMaster) {\n            if (!this.syncSubscription || this.syncSubscription.closed) {\n                this.startSync();\n            }\n        }\n        this.startBufferCheck();\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onPause(event) {\n        this.state = VgStates.VG_PAUSED;\n        if (this.vgMaster) {\n            if (!this.playAtferSync) {\n                this.syncSubscription.unsubscribe();\n            }\n        }\n        this.stopBufferCheck();\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onTimeUpdate(event) {\n        const end = this.buffered.length - 1;\n        this.time = {\n            current: this.currentTime * 1000,\n            total: this.time.total,\n            left: (this.duration - this.currentTime) * 1000,\n        };\n        if (end >= 0) {\n            this.buffer = { end: this.buffered.end(end) * 1000 };\n        }\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onProgress(event) {\n        const end = this.buffered.length - 1;\n        if (end >= 0) {\n            this.buffer = { end: this.buffered.end(end) * 1000 };\n        }\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onVolumeChange(event) {\n        // TODO: Save to localstorage the current volume\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onError(event) {\n        // TODO: Handle error messages\n        this.ref.detectChanges();\n    }\n    // http://stackoverflow.com/a/23828241/779529\n    bufferCheck() {\n        const offset = 1 / this.checkInterval;\n        this.currentPlayPos = this.currentTime;\n        if (!this.isBufferDetected &&\n            this.currentPlayPos < this.lastPlayPos + offset) {\n            this.isBufferDetected = true;\n        }\n        if (this.isBufferDetected &&\n            this.currentPlayPos > this.lastPlayPos + offset) {\n            this.isBufferDetected = false;\n        }\n        // Prevent calls to bufferCheck after ngOnDestroy have been called\n        if (!this.bufferDetected.closed) {\n            this.bufferDetected.next(this.isBufferDetected);\n        }\n        this.lastPlayPos = this.currentPlayPos;\n    }\n    startBufferCheck() {\n        this.checkBufferSubscription = timer(0, this.checkInterval).subscribe(() => {\n            this.bufferCheck();\n        });\n    }\n    stopBufferCheck() {\n        if (this.checkBufferSubscription) {\n            this.checkBufferSubscription.unsubscribe();\n        }\n        this.isBufferDetected = false;\n        this.bufferDetected.next(this.isBufferDetected);\n    }\n    seekTime(value, byPercent = false) {\n        let second;\n        const duration = this.duration;\n        if (byPercent) {\n            second = (value * duration) / 100;\n        }\n        else {\n            second = value;\n        }\n        this.currentTime = second;\n    }\n    addTextTrack(type, label, language, mode) {\n        const newTrack = this.vgMedia.addTextTrack(type, label, language);\n        if (mode) {\n            newTrack.mode = mode;\n        }\n        return newTrack;\n    }\n    ngOnDestroy() {\n        this.vgMedia.src = '';\n        this.mutationObs?.unsubscribe();\n        this.canPlayObs?.unsubscribe();\n        this.canPlayThroughObs?.unsubscribe();\n        this.loadedMetadataObs?.unsubscribe();\n        this.waitingObs?.unsubscribe();\n        this.progressObs?.unsubscribe();\n        this.endedObs?.unsubscribe();\n        this.playingObs?.unsubscribe();\n        this.playObs?.unsubscribe();\n        this.pauseObs?.unsubscribe();\n        this.timeUpdateObs?.unsubscribe();\n        this.volumeChangeObs?.unsubscribe();\n        this.errorObs?.unsubscribe();\n        this.checkBufferSubscription?.unsubscribe();\n        this.syncSubscription?.unsubscribe();\n        this.bufferDetected?.complete();\n        this.bufferDetected?.unsubscribe();\n        this.api.unregisterMedia(this);\n    }\n}\n/** @nocollapse */ VgMediaDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgMediaDirective, deps: [{ token: VgApiService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n/** @nocollapse */ VgMediaDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: VgMediaDirective, selector: \"[vgMedia]\", inputs: { vgMedia: \"vgMedia\", vgMaster: \"vgMaster\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgMediaDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[vgMedia]',\n                }]\n        }], ctorParameters: function () { return [{ type: VgApiService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { vgMedia: [{\n                type: Input\n            }], vgMaster: [{\n                type: Input\n            }] } });\n\nclass VgPlayerComponent {\n    constructor(ref, api, fsAPI, controlsHidden) {\n        this.api = api;\n        this.fsAPI = fsAPI;\n        this.controlsHidden = controlsHidden;\n        this.isFullscreen = false;\n        this.isNativeFullscreen = false;\n        this.areControlsHidden = false;\n        this.onPlayerReady = new EventEmitter();\n        this.onMediaReady = new EventEmitter();\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n        this.api.registerElement(this.elem);\n    }\n    ngAfterContentInit() {\n        this.medias.toArray().forEach((media) => {\n            this.api.registerMedia(media);\n        });\n        this.fsAPI.init(this.elem, this.medias);\n        this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n        this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\n        this.api.onPlayerReady(this.fsAPI);\n        this.onPlayerReady.emit(this.api);\n    }\n    onChangeFullscreen(fsState) {\n        if (!this.fsAPI.nativeFullscreen) {\n            this.isFullscreen = fsState;\n            this.zIndex = fsState ? VgUtilsService.getZIndex().toString() : 'auto';\n        }\n        else {\n            this.isNativeFullscreen = fsState;\n        }\n    }\n    onHideControls(hidden) {\n        this.areControlsHidden = hidden;\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach((s) => s.unsubscribe());\n    }\n}\n/** @nocollapse */ VgPlayerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgPlayerComponent, deps: [{ token: i0.ElementRef }, { token: VgApiService }, { token: VgFullscreenApiService }, { token: VgControlsHiddenService }], target: i0.ɵɵFactoryTarget.Component });\n/** @nocollapse */ VgPlayerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: VgPlayerComponent, selector: \"vg-player\", outputs: { onPlayerReady: \"onPlayerReady\", onMediaReady: \"onMediaReady\" }, host: { properties: { \"class.fullscreen\": \"this.isFullscreen\", \"class.native-fullscreen\": \"this.isNativeFullscreen\", \"class.controls-hidden\": \"this.areControlsHidden\", \"style.z-index\": \"this.zIndex\" } }, providers: [VgApiService, VgFullscreenApiService, VgControlsHiddenService], queries: [{ propertyName: \"medias\", predicate: VgMediaDirective, descendants: true }], ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, styles: [\"vg-player{font-family:videogular;position:relative;display:flex;width:100%;height:100%;overflow:hidden;background-color:#000}vg-player.fullscreen{position:fixed;left:0;top:0}vg-player.native-fullscreen.controls-hidden{cursor:none}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgPlayerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vg-player', encapsulation: ViewEncapsulation.None, template: `<ng-content></ng-content>`, providers: [VgApiService, VgFullscreenApiService, VgControlsHiddenService], styles: [\"vg-player{font-family:videogular;position:relative;display:flex;width:100%;height:100%;overflow:hidden;background-color:#000}vg-player.fullscreen{position:fixed;left:0;top:0}vg-player.native-fullscreen.controls-hidden{cursor:none}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgApiService }, { type: VgFullscreenApiService }, { type: VgControlsHiddenService }]; }, propDecorators: { isFullscreen: [{\n                type: HostBinding,\n                args: ['class.fullscreen']\n            }], isNativeFullscreen: [{\n                type: HostBinding,\n                args: ['class.native-fullscreen']\n            }], areControlsHidden: [{\n                type: HostBinding,\n                args: ['class.controls-hidden']\n            }], zIndex: [{\n                type: HostBinding,\n                args: ['style.z-index']\n            }], onPlayerReady: [{\n                type: Output\n            }], onMediaReady: [{\n                type: Output\n            }], medias: [{\n                type: ContentChildren,\n                args: [VgMediaDirective, { descendants: true }]\n            }] } });\n\nconst services = [\n    VgApiService,\n    VgControlsHiddenService,\n    VgFullscreenApiService,\n    VgUtilsService,\n    VgEvents,\n    VgStates\n];\nconst directives = [\n    VgCuePointsDirective,\n    VgMediaDirective\n];\nclass VgCoreModule {\n}\n/** @nocollapse */ VgCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgCoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n/** @nocollapse */ VgCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: VgCoreModule, declarations: [VgCuePointsDirective,\n        VgMediaDirective, VgPlayerComponent], imports: [CommonModule], exports: [VgCuePointsDirective,\n        VgMediaDirective, VgPlayerComponent] });\n/** @nocollapse */ VgCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgCoreModule, providers: [...services], imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: VgCoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    providers: [...services],\n                    declarations: [...directives, VgPlayerComponent],\n                    exports: [...directives, VgPlayerComponent]\n                }]\n        }] });\n\nclass VgMediaElement {\n    get audioTracks() {\n        return null;\n    }\n    // @ts-ignore\n    addTextTrack(kind, label, language) {\n        return null;\n    }\n    // @ts-ignore\n    canPlayType(type) {\n        return null;\n    }\n    load() { }\n    msClearEffects() { }\n    msGetAsCastingSource() {\n        return null;\n    }\n    // @ts-ignore\n    msInsertAudioEffect(_activatableClassId, _effectRequired, _config) { }\n    // @ts-ignore\n    msSetMediaProtectionManager(mediaProtectionManager) { }\n    pause() { }\n    play() {\n        return null;\n    }\n    // @ts-ignore\n    setMediaKeys(mediaKeys) {\n        return null;\n    }\n    // @ts-ignore\n    addEventListener(_type, _listener, _useCapture) { }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { VgApiService, VgControlsHiddenService, VgCoreModule, VgCuePointsDirective, VgEvents, VgFullscreenApiService, VgMediaDirective, VgMediaElement, VgPlayerComponent, VgStates, VgUtilsService };\n//# sourceMappingURL=videogular-ngx-videogular-core.mjs.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}