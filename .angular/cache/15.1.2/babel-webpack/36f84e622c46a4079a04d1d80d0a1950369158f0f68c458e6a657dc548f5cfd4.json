{"ast":null,"code":"import libphonenumber from 'google-libphonenumber';\nexport class CountryPhone {\n  constructor(iso, name) {\n    this.iso = iso;\n    this.name = name;\n    const phoneUtil = libphonenumber.PhoneNumberUtil.getInstance(),\n      PNF = libphonenumber.PhoneNumberFormat,\n      PNT = libphonenumber.PhoneNumberType,\n      country_example_number = phoneUtil.getExampleNumberForType(this.iso, PNT.MOBILE),\n      // We need to define what kind of country phone number type we are going to use as a mask.\n      // You can choose between many types including:\n      //    - FIXED_LINE\n      //    - MOBILE\n      //    - For more types please refer to google libphonenumber repo\n      // (https://bit.ly/2QZb6J9)\n      example_number_formatted = phoneUtil.format(country_example_number, PNF.NATIONAL);\n    // We need to define how are we going to format the phone number\n    // You can choose between many formats including:\n    //    - NATIONAL\n    //    - INTERNATIONAL\n    //    - E164\n    //    - RFC3966\n    this.sample_phone = example_number_formatted;\n    this.code = '+' + country_example_number.getCountryCode();\n  }\n}","map":{"version":3,"mappings":"AAAA,OAAOA,cAAc,MAAM,uBAAuB;AAElD,OAAM,MAAOC,YAAY;EAMvBC,YAAaC,GAAW,EAAEC,IAAY;IACpC,IAAI,CAACD,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,IAAI,GAAGA,IAAI;IAEhB,MAAMC,SAAS,GAAGL,cAAc,CAACM,eAAe,CAACC,WAAW,EAAE;MAC1DC,GAAG,GAAGR,cAAc,CAACS,iBAAiB;MACtCC,GAAG,GAAGV,cAAc,CAACW,eAAe;MACpCC,sBAAsB,GAAGP,SAAS,CAACQ,uBAAuB,CAAC,IAAI,CAACV,GAAG,EAAEO,GAAG,CAACI,MAAM,CAAC;MAChF;MACA;MACA;MACA;MACA;MACA;MACAC,wBAAwB,GAAGV,SAAS,CAACW,MAAM,CAACJ,sBAAsB,EAAEJ,GAAG,CAACS,QAAQ,CAAC;IACjF;IACA;IACA;IACA;IACA;IACA;IAEJ,IAAI,CAACC,YAAY,GAAGH,wBAAwB;IAC5C,IAAI,CAACI,IAAI,GAAG,GAAG,GAAGP,sBAAsB,CAACQ,cAAc,EAAE;EAC3D","names":["libphonenumber","CountryPhone","constructor","iso","name","phoneUtil","PhoneNumberUtil","getInstance","PNF","PhoneNumberFormat","PNT","PhoneNumberType","country_example_number","getExampleNumberForType","MOBILE","example_number_formatted","format","NATIONAL","sample_phone","code","getCountryCode"],"sourceRoot":"","sources":["/Users/teeicloud/TitanEstates/Titan Estates/src/app/forms/validations/country-phone.model.ts"],"sourcesContent":["import libphonenumber from 'google-libphonenumber';\n\nexport class CountryPhone {\n  iso: string;\n  name: string;\n  code: string;\n  sample_phone: string;\n\n  constructor (iso: string, name: string) {\n    this.iso = iso;\n    this.name = name;\n\n    const phoneUtil = libphonenumber.PhoneNumberUtil.getInstance(),\n        PNF = libphonenumber.PhoneNumberFormat,\n        PNT = libphonenumber.PhoneNumberType,\n        country_example_number = phoneUtil.getExampleNumberForType(this.iso, PNT.MOBILE),\n        // We need to define what kind of country phone number type we are going to use as a mask.\n        // You can choose between many types including:\n        //    - FIXED_LINE\n        //    - MOBILE\n        //    - For more types please refer to google libphonenumber repo\n        // (https://bit.ly/2QZb6J9)\n        example_number_formatted = phoneUtil.format(country_example_number, PNF.NATIONAL);\n        // We need to define how are we going to format the phone number\n        // You can choose between many formats including:\n        //    - NATIONAL\n        //    - INTERNATIONAL\n        //    - E164\n        //    - RFC3966\n\n    this.sample_phone = example_number_formatted;\n    this.code = '+' + country_example_number.getCountryCode();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}