{"ast":null,"code":"import { ShowcaseService } from '../../showcase.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../showcase.service\";\nexport class ProgressiveShellResolver {\n  constructor(showcaseService) {\n    this.showcaseService = showcaseService;\n  }\n  resolve() {\n    const dataSource = this.showcaseService.getDataSourceWithDelay();\n    const dataStore = this.showcaseService.getSimpleDataStore(dataSource);\n    return dataStore;\n  }\n}\nProgressiveShellResolver.ɵfac = function ProgressiveShellResolver_Factory(t) {\n  return new (t || ProgressiveShellResolver)(i0.ɵɵinject(i1.ShowcaseService));\n};\nProgressiveShellResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProgressiveShellResolver,\n  factory: ProgressiveShellResolver.ɵfac\n});","map":{"version":3,"mappings":"AAGA,SAASA,eAAe,QAAQ,wBAAwB;;;AAMxD,OAAM,MAAOC,wBAAwB;EAEnCC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;EAAoB;EAEvDC,OAAO;IACL,MAAMC,UAAU,GAAmC,IAAI,CAACF,eAAe,CAACG,sBAAsB,EAAE;IAChG,MAAMC,SAAS,GAAkC,IAAI,CAACJ,eAAe,CAACK,kBAAkB,CAACH,UAAU,CAAC;IAEpG,OAAOE,SAAS;EAClB;;AATWN,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;SAAxBA,wBAAwB;EAAAQ,SAAxBR,wBAAwB;AAAA","names":["ShowcaseService","ProgressiveShellResolver","constructor","showcaseService","resolve","dataSource","getDataSourceWithDelay","dataStore","getSimpleDataStore","factory"],"sourceRoot":"","sources":["/Users/teeicloud/TitanEstates/Titan Estates/src/app/showcase/route-resolvers-ux/progressive-shell-resolvers/progressive-shell.resolver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\n\nimport { ShowcaseService } from '../../showcase.service';\nimport { ShowcaseShellModel } from '../../showcase-shell.model';\nimport { Observable } from 'rxjs';\nimport { DataStore } from '../../../shell/data-store';\n\n@Injectable()\nexport class ProgressiveShellResolver implements Resolve<any> {\n\n  constructor(private showcaseService: ShowcaseService) {}\n\n  resolve() {\n    const dataSource: Observable<ShowcaseShellModel> = this.showcaseService.getDataSourceWithDelay();\n    const dataStore: DataStore<ShowcaseShellModel> = this.showcaseService.getSimpleDataStore(dataSource);\n\n    return dataStore;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}