{"ast":null,"code":"import _asyncToGenerator from \"/Users/teeicloud/TitanEstates/Titan Estates/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Router } from '@angular/router';\nimport { Preferences } from '@capacitor/preferences';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class WalkthroughGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const {\n        value\n      } = yield Preferences.get({\n        key: 'visitedWalkthrough'\n      });\n      if (value === 'true') {\n        // this is a returning user, don't show him the walkthrough\n        _this.router.navigate(['auth']);\n        return false;\n      } else {\n        return true;\n      }\n    })();\n  }\n}\nWalkthroughGuard.ɵfac = function WalkthroughGuard_Factory(t) {\n  return new (t || WalkthroughGuard)(i0.ɵɵinject(i1.Router));\n};\nWalkthroughGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WalkthroughGuard,\n  factory: WalkthroughGuard.ɵfac\n});","map":{"version":3,"mappings":";AACA,SAAsBA,MAAM,QAAQ,iBAAiB;AAErD,SAASC,WAAW,QAAQ,wBAAwB;;;AAGpD,OAAM,MAAOC,gBAAgB;EAC3BC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAW;EAE/BC,WAAW;IAAA;IAAA;MACf,MAAM;QAAEC;MAAK,CAAE,SAASL,WAAW,CAACM,GAAG,CAAC;QAAEC,GAAG,EAAE;MAAoB,CAAE,CAAC;MAEtE,IAAIF,KAAK,KAAK,MAAM,EAAE;QACpB;QACA,KAAI,CAACF,MAAM,CAACK,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;QAC9B,OAAO,KAAK;OACb,MAAM;QACL,OAAO,IAAI;;IACZ;EACH;;AAbWP,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAQ,SAAhBR,gBAAgB;AAAA","names":["Router","Preferences","WalkthroughGuard","constructor","router","canActivate","value","get","key","navigate","factory"],"sourceRoot":"","sources":["/Users/teeicloud/TitanEstates/Titan Estates/src/app/walkthrough/walkthrough.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { Preferences } from '@capacitor/preferences';\n\n@Injectable()\nexport class WalkthroughGuard implements CanActivate {\n  constructor(private router: Router) {}\n\n  async canActivate(): Promise<boolean> {\n    const { value } = await Preferences.get({ key: 'visitedWalkthrough' });\n\n    if (value === 'true') {\n      // this is a returning user, don't show him the walkthrough\n      this.router.navigate(['auth']);\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}