{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  redirectTo: '/walkthrough',\n  pathMatch: 'full'\n}, {\n  path: 'walkthrough',\n  loadChildren: () => import('./walkthrough/walkthrough.module').then(m => m.WalkthroughPageModule)\n}, {\n  path: 'getting-started',\n  loadChildren: () => import('./getting-started/getting-started.module').then(m => m.GettingStartedPageModule)\n}, {\n  path: 'auth',\n  redirectTo: 'auth/login',\n  pathMatch: 'full'\n}, {\n  path: 'auth/login',\n  loadChildren: () => import('./login/login.module').then(m => m.LoginPageModule)\n}, {\n  path: 'auth/signup',\n  loadChildren: () => import('./signup/signup.module').then(m => m.SignupPageModule)\n}, {\n  path: 'auth/forgot-password',\n  loadChildren: () => import('./forgot-password/forgot-password.module').then(m => m.ForgotPasswordPageModule)\n}, {\n  path: 'app',\n  loadChildren: () => import('./tabs/tabs.module').then(m => m.TabsPageModule)\n}, {\n  path: 'contact-card',\n  loadChildren: () => import('./contact-card/contact-card.module').then(m => m.ContactCardPageModule)\n}, {\n  path: 'forms-and-validations',\n  loadChildren: () => import('./forms/validations/forms-validations.module').then(m => m.FormsValidationsPageModule)\n}, {\n  path: 'forms-filters',\n  loadChildren: () => import('./forms/filters/forms-filters.module').then(m => m.FormsFiltersPageModule)\n}, {\n  path: 'page-not-found',\n  loadChildren: () => import('./page-not-found/page-not-found.module').then(m => m.PageNotFoundModule)\n}, {\n  path: 'showcase',\n  loadChildren: () => import('./showcase/showcase.module').then(m => m.ShowcasePageModule)\n}, {\n  path: 'firebase',\n  redirectTo: 'firebase/auth/sign-in',\n  pathMatch: 'full'\n}, {\n  path: 'firebase/auth',\n  loadChildren: () => import('./firebase/auth/firebase-auth.module').then(m => m.FirebaseAuthModule)\n}, {\n  path: 'firebase/crud',\n  loadChildren: () => import('./firebase/crud/firebase-crud.module').then(m => m.FirebaseCrudModule)\n}, {\n  path: 'maps',\n  loadChildren: () => import('./maps/maps.module').then(m => m.MapsPageModule)\n}, {\n  path: 'video-playlist',\n  loadChildren: () => import('./video-playlist/video-playlist.module').then(m => m.VideoPlaylistPageModule)\n}, {\n  path: '**',\n  redirectTo: 'page-not-found'\n}];\nexport class AppRoutingModule {}\nAppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n  return new (t || AppRoutingModule)();\n};\nAppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppRoutingModule\n});\nAppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forRoot(routes, {\n    // This value is required for server-side rendering to work.\n    initialNavigation: 'enabledBlocking',\n    scrollPositionRestoration: 'enabled',\n    anchorScrolling: 'enabled'\n  }), RouterModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"mappings":"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","names":["RouterModule","routes","path","redirectTo","pathMatch","loadChildren","then","m","WalkthroughPageModule","GettingStartedPageModule","LoginPageModule","SignupPageModule","ForgotPasswordPageModule","TabsPageModule","ContactCardPageModule","FormsValidationsPageModule","FormsFiltersPageModule","PageNotFoundModule","ShowcasePageModule","FirebaseAuthModule","FirebaseCrudModule","MapsPageModule","VideoPlaylistPageModule","AppRoutingModule","forRoot","initialNavigation","scrollPositionRestoration","anchorScrolling","imports","exports"],"sourceRoot":"","sources":["/Users/teeicloud/TitanEstates/Titan Estates/src/app/app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/walkthrough',\n    pathMatch: 'full'\n  },\n  {\n    path: 'walkthrough',\n    loadChildren: () => import('./walkthrough/walkthrough.module').then(m => m.WalkthroughPageModule)\n  },\n  {\n    path: 'getting-started',\n    loadChildren: () => import('./getting-started/getting-started.module').then(m => m.GettingStartedPageModule)\n  },\n  {\n    path: 'auth',\n    redirectTo: 'auth/login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'auth/login',\n    loadChildren: () => import('./login/login.module').then(m => m.LoginPageModule)\n  },\n  {\n    path: 'auth/signup',\n    loadChildren: () => import('./signup/signup.module').then(m => m.SignupPageModule)\n  },\n  {\n    path: 'auth/forgot-password',\n    loadChildren: () => import('./forgot-password/forgot-password.module').then(m => m.ForgotPasswordPageModule)\n  },\n  {\n    path: 'app',\n    loadChildren: () => import('./tabs/tabs.module').then(m => m.TabsPageModule)\n  },\n  {\n    path: 'contact-card',\n    loadChildren: () => import('./contact-card/contact-card.module').then(m => m.ContactCardPageModule)\n  },\n  {\n    path: 'forms-and-validations',\n    loadChildren: () => import('./forms/validations/forms-validations.module').then(m => m.FormsValidationsPageModule)\n  },\n  {\n    path: 'forms-filters',\n    loadChildren: () => import('./forms/filters/forms-filters.module').then(m => m.FormsFiltersPageModule)\n  },\n  {\n    path: 'page-not-found',\n    loadChildren: () => import('./page-not-found/page-not-found.module').then(m => m.PageNotFoundModule)\n  },\n  {\n    path: 'showcase',\n    loadChildren: () => import('./showcase/showcase.module').then(m => m.ShowcasePageModule)\n  },\n  {\n    path: 'firebase',\n    redirectTo: 'firebase/auth/sign-in',\n    pathMatch: 'full'\n  },\n  {\n    path: 'firebase/auth',\n    loadChildren: () => import('./firebase/auth/firebase-auth.module').then(m => m.FirebaseAuthModule)\n  },\n  {\n    path: 'firebase/crud',\n    loadChildren: () => import('./firebase/crud/firebase-crud.module').then(m => m.FirebaseCrudModule)\n  },\n  {\n    path: 'maps',\n    loadChildren: () => import('./maps/maps.module').then(m => m.MapsPageModule)\n  },\n  {\n    path: 'video-playlist',\n    loadChildren: () => import('./video-playlist/video-playlist.module').then(m => m.VideoPlaylistPageModule)\n  },\n  {\n    path: '**',\n    redirectTo: 'page-not-found'\n  }\n];\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      // This value is required for server-side rendering to work.\n      initialNavigation: 'enabledBlocking',\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled'\n    })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}