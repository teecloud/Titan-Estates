{"ast":null,"code":"import _asyncToGenerator from \"/Users/teeicloud/TitanEstates/Titan Estates/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { LoadingController } from '@ionic/angular';\nimport { Geolocation } from '@capacitor/geolocation';\nimport { GoogleMapComponent } from '../components/google-map/google-map.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"../components/google-map/google-map.component\";\nexport class MapsPage {\n  constructor(loadingController) {\n    this.loadingController = loadingController;\n    this.mapOptions = {\n      zoom: 15,\n      center: {\n        lat: -34.9199842,\n        lng: -56.149849\n      }\n      // uncomment the following line if you want to remove the default Map controls\n      // disableDefaultUI: true\n    };\n  }\n\n  ngAfterViewInit() {\n    // GoogleMapComponent should be available\n    this._GoogleMap.$mapReady.subscribe(map => {\n      this.map = map;\n      console.log('ngAfterViewInit - Google map ready');\n    });\n    this.createLoader();\n  }\n  createLoader() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.loadingElement = yield _this.loadingController.create({\n        message: 'Trying to get your current location...'\n      });\n    })();\n  }\n  presentLoader() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield _this2.loadingElement.present();\n    })();\n  }\n  dismissLoader() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (_this3.loadingElement) {\n        yield _this3.loadingElement.dismiss();\n      }\n    })();\n  }\n  geolocateMe() {\n    this.presentLoader();\n    Geolocation.getCurrentPosition().then(position => {\n      const current_location = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n      this.map.panTo(current_location);\n      // add a marker\n      const marker = new google.maps.Marker({\n        position: current_location,\n        title: 'You are here!'\n        // animation: google.maps.Animation.DROP\n      });\n      // To add the marker to the map, call setMap();\n      marker.setMap(this.map);\n    }).catch(error => {\n      console.log('Error getting current location', error);\n    }).finally(() => this.dismissLoader());\n  }\n}\nMapsPage.ɵfac = function MapsPage_Factory(t) {\n  return new (t || MapsPage)(i0.ɵɵdirectiveInject(i1.LoadingController));\n};\nMapsPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MapsPage,\n  selectors: [[\"app-maps\"]],\n  viewQuery: function MapsPage_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(GoogleMapComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._GoogleMap = _t.first);\n    }\n  },\n  decls: 11,\n  vars: 1,\n  consts: [[\"color\", \"primary\"], [\"slot\", \"start\"], [\"vertical\", \"top\", \"horizontal\", \"end\", \"slot\", \"fixed\"], [\"color\", \"secondary\", 3, \"click\"], [\"name\", \"locate\"], [3, \"mapOptions\"]],\n  template: function MapsPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-buttons\", 1);\n      i0.ɵɵelement(3, \"ion-menu-button\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-title\");\n      i0.ɵɵtext(5, \"Maps & Geolocation\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"ion-content\")(7, \"ion-fab\", 2)(8, \"ion-fab-button\", 3);\n      i0.ɵɵlistener(\"click\", function MapsPage_Template_ion_fab_button_click_8_listener() {\n        return ctx.geolocateMe();\n      });\n      i0.ɵɵelement(9, \"ion-icon\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(10, \"app-google-map\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"mapOptions\", ctx.mapOptions);\n    }\n  },\n  dependencies: [i1.IonButtons, i1.IonContent, i1.IonFab, i1.IonFabButton, i1.IonHeader, i1.IonIcon, i1.IonMenuButton, i1.IonTitle, i1.IonToolbar, i2.GoogleMapComponent],\n  styles: [\"app-google-map[_ngcontent-%COMP%] {\\n  display: block;\\n  width: 100%;\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWFwcy9zdHlsZXMvbWFwcy5wYWdlLnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi9UaXRhbiUyMEVzdGF0ZXMvc3JjL2FwcC9tYXBzL3N0eWxlcy9tYXBzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQ0NGIiwic291cmNlc0NvbnRlbnQiOlsiYXBwLWdvb2dsZS1tYXAge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cbiIsImFwcC1nb29nbGUtbWFwIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AACA,SAASA,iBAAiB,QAAQ,gBAAgB;AAElD,SAASC,WAAW,QAAQ,wBAAwB;AAEpD,SAASC,kBAAkB,QAAQ,+CAA+C;;;;AASlF,OAAM,MAAOC,QAAQ;EAYnBC,YAAoBC,iBAAoC;IAApC,sBAAiB,GAAjBA,iBAAiB;IARrC,eAAU,GAA2B;MACnCC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE;QAACC,GAAG,EAAE,CAAC,UAAU;QAAEC,GAAG,EAAE,CAAC;MAAS;MAC1C;MACA;KACD;EAG2D;;EAE5DC,eAAe;IACb;IACA,IAAI,CAACC,UAAU,CAACC,SAAS,CAACC,SAAS,CAACC,GAAG,IAAG;MACxC,IAAI,CAACA,GAAG,GAAGA,GAAG;MACdC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACnD,CAAC,CAAC;IACF,IAAI,CAACC,YAAY,EAAE;EACrB;EAEMA,YAAY;IAAA;IAAA;MAChB,KAAI,CAACC,cAAc,SAAS,KAAI,CAACb,iBAAiB,CAACc,MAAM,CAAC;QACxDC,OAAO,EAAE;OACV,CAAC;IAAC;EACL;EAEMC,aAAa;IAAA;IAAA;MACjB,MAAM,MAAI,CAACH,cAAc,CAACI,OAAO,EAAE;IAAC;EACtC;EAEMC,aAAa;IAAA;IAAA;MACjB,IAAI,MAAI,CAACL,cAAc,EAAE;QACvB,MAAM,MAAI,CAACA,cAAc,CAACM,OAAO,EAAE;;IACpC;EACH;EAEOC,WAAW;IAChB,IAAI,CAACJ,aAAa,EAAE;IACpBpB,WAAW,CAACyB,kBAAkB,EAAE,CAACC,IAAI,CAACC,QAAQ,IAAG;MAE/C,MAAMC,gBAAgB,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACC,MAAM,CAACJ,QAAQ,CAACK,MAAM,CAACC,QAAQ,EAAEN,QAAQ,CAACK,MAAM,CAACE,SAAS,CAAC;MACpG,IAAI,CAACrB,GAAG,CAACsB,KAAK,CAACP,gBAAgB,CAAC;MAEhC;MACA,MAAMQ,MAAM,GAAG,IAAIP,MAAM,CAACC,IAAI,CAACO,MAAM,CAAC;QACpCV,QAAQ,EAAEC,gBAAgB;QAC1BU,KAAK,EAAE;QACP;OACD,CAAC;MAEF;MACAF,MAAM,CAACG,MAAM,CAAC,IAAI,CAAC1B,GAAG,CAAC;IAEzB,CAAC,CAAC,CAAC2B,KAAK,CAAEC,KAAK,IAAI;MACjB3B,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAE0B,KAAK,CAAC;IAEtD,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,IAAI,CAACpB,aAAa,EAAE,CAAC;EACxC;;AA5DWpB,QAAQ;mBAARA,QAAQ;AAAA;AAARA,QAAQ;QAARA,QAAQ;EAAAyC;EAAAC;IAAA;qBAER3C,kBAAkB;;;;;;;;;;;;MChB/B4C,kCAAY;MAGNA,kCAAmC;MACrCA,iBAAc;MACdA,iCAAW;MAAAA,kCAAkB;MAAAA,iBAAY;MAI7CA,mCAAa;MAEOA;QAAA,OAASC,iBAAa;MAAA,EAAC;MACrCD,8BAAmC;MACrCA,iBAAiB;MAEnBA,qCAA2D;MAC7DA,iBAAc;;;MADIA,gBAAyB;MAAzBA,2CAAyB","names":["LoadingController","Geolocation","GoogleMapComponent","MapsPage","constructor","loadingController","zoom","center","lat","lng","ngAfterViewInit","_GoogleMap","$mapReady","subscribe","map","console","log","createLoader","loadingElement","create","message","presentLoader","present","dismissLoader","dismiss","geolocateMe","getCurrentPosition","then","position","current_location","google","maps","LatLng","coords","latitude","longitude","panTo","marker","Marker","title","setMap","catch","error","finally","selectors","viewQuery","i0","ctx"],"sourceRoot":"","sources":["/Users/teeicloud/TitanEstates/Titan Estates/src/app/maps/maps.page.ts","/Users/teeicloud/TitanEstates/Titan Estates/src/app/maps/maps.page.html"],"sourcesContent":["import { Component, ViewChild, AfterViewInit } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\nimport { Geolocation } from '@capacitor/geolocation';\n\nimport { GoogleMapComponent } from '../components/google-map/google-map.component';\n\n@Component({\n  selector: 'app-maps',\n  templateUrl: './maps.page.html',\n  styleUrls: [\n    './styles/maps.page.scss'\n  ]\n})\nexport class MapsPage implements AfterViewInit {\n\n  @ViewChild(GoogleMapComponent, { static: false }) _GoogleMap: GoogleMapComponent;\n  map: google.maps.Map;\n  mapOptions: google.maps.MapOptions = {\n    zoom: 15,\n    center: {lat: -34.9199842, lng: -56.149849}\n    // uncomment the following line if you want to remove the default Map controls\n    // disableDefaultUI: true\n  };\n  loadingElement: any;\n\n  constructor(private loadingController: LoadingController) { }\n\n  ngAfterViewInit() {\n    // GoogleMapComponent should be available\n    this._GoogleMap.$mapReady.subscribe(map => {\n      this.map = map;\n      console.log('ngAfterViewInit - Google map ready');\n    });\n    this.createLoader();\n  }\n\n  async createLoader() {\n    this.loadingElement = await this.loadingController.create({\n      message: 'Trying to get your current location...'\n    });\n  }\n\n  async presentLoader() {\n    await this.loadingElement.present();\n  }\n\n  async dismissLoader() {\n    if (this.loadingElement) {\n      await this.loadingElement.dismiss();\n    }\n  }\n\n  public geolocateMe(): void {\n    this.presentLoader();\n    Geolocation.getCurrentPosition().then(position => {\n\n      const current_location = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n      this.map.panTo(current_location);\n\n      // add a marker\n      const marker = new google.maps.Marker({\n        position: current_location,\n        title: 'You are here!',\n        // animation: google.maps.Animation.DROP\n      });\n\n      // To add the marker to the map, call setMap();\n      marker.setMap(this.map);\n\n    }).catch((error) => {\n      console.log('Error getting current location', error);\n\n    }).finally(() => this.dismissLoader());\n  }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>Maps & Geolocation</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-fab vertical=\"top\" horizontal=\"end\" slot=\"fixed\">\n    <ion-fab-button (click)=\"geolocateMe()\" color=\"secondary\">\n      <ion-icon name=\"locate\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n  <app-google-map [mapOptions]=\"mapOptions\"></app-google-map>\n</ion-content>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}