{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"../../../shell/aspect-ratio/aspect-ratio.component\";\nimport * as i4 from \"../../../shell/image-shell/image-shell.component\";\nimport * as i5 from \"../../../shell/text-shell/text-shell.component\";\nconst _c0 = function () {\n  return {\n    w: 2,\n    h: 1\n  };\n};\nexport class TextShellPage {\n  constructor() {\n    this.sampleTextShellData = '';\n  }\n}\nTextShellPage.ɵfac = function TextShellPage_Factory(t) {\n  return new (t || TextShellPage)();\n};\nTextShellPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TextShellPage,\n  selectors: [[\"app-text-shell-page\"]],\n  decls: 310,\n  vars: 26,\n  consts: [[\"color\", \"primary\"], [\"slot\", \"start\"], [\"defaultHref\", \"showcase/app-shell\"], [1, \"showcase-content\"], [1, \"showcase-section\", 2, \"margin-bottom\", \"40px\"], [1, \"loading-state-demo\"], [1, \"showcase-section\", \"sticky-section\"], [\"placeholder\", \"When this text is empty the text-shell will show the loading state.\", \"clearOnEdit\", \"true\", 2, \"--background\", \"#FFF\", 3, \"ngModel\", \"ngModelChange\"], [1, \"showcase-section\"], [2, \"background-color\", \"#FFF\", \"padding\", \"20px\"], [3, \"data\"], [\"lines\", \"3\", 3, \"data\"], [2, \"background-color\", \"#FFF\", \"padding\", \"20px\", \"color\", \"#FFF\", \"font-weight\", \"500\"], [\"animation\", \"spinner\", 1, \"add-overlay\", 3, \"display\", \"src\"], [3, \"ratio\"], [2, \"margin\", \"20px 40px\"], [\"animation\", \"bouncing\", 3, \"data\"], [\"animation\", \"bouncing\", \"lines\", \"3\", 3, \"data\"], [\"animation\", \"gradient\", 3, \"data\"], [\"animation\", \"gradient\", \"lines\", \"3\", 3, \"data\"], [\"lines\", \"6\", 2, \"--text-shell-line-color\", \"#DDD\", 3, \"data\"], [\"animation\", \"bouncing\", \"lines\", \"2\", 2, \"--text-shell-line-color\", \"#DDD\", 3, \"data\"], [2, \"padding\", \"5px\", \"background\", \"#FFF\"], [\"animation\", \"gradient\", \"lines\", \"2\", 2, \"--text-shell-line-color\", \"transparent\", \"--text-shell-background\", \"#FFF\", 3, \"data\"], [2, \"--text-shell-line-color\", \"rgba(233, 30, 99, .25)\", 3, \"data\"], [2, \"padding\", \"5px\", \"background\", \"#000000\"], [\"lines\", \"3\", 2, \"--text-shell-line-color\", \"#FFFFFF\", \"--text-shell-background\", \"#000000\", 3, \"data\"], [\"lines\", \"3\", \"animation\", \"gradient\", 2, \"--text-shell-line-color\", \"transparent\", \"--text-shell-background\", \"#000000\", \"--text-shell-animation-background\", \"rgba(255, 3, 109, 0.6)\", \"--text-shell-animation-color\", \"rgba(156, 4, 68, 0.7)\", 3, \"data\"], [2, \"--text-shell-line-height\", \"40px\", 3, \"data\"], [\"lines\", \"4\", 2, \"--text-shell-line-gutter\", \"10px\", \"--text-shell-line-color\", \"#CCC\", 3, \"data\"], [1, \"sample-text-max-width\"], [1, \"sample-text-min-width\", 2, \"display\", \"inline-block\"]],\n  template: function TextShellPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-buttons\", 1);\n      i0.ɵɵelement(3, \"ion-back-button\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-title\");\n      i0.ɵɵtext(5, \" Text Shell \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"ion-content\", 3)(7, \"section\", 4)(8, \"p\");\n      i0.ɵɵtext(9, \" This component is useful when you want to show a loading indicator while fetching text data from the server. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"p\");\n      i0.ɵɵtext(11, \" The \");\n      i0.ɵɵelementStart(12, \"code\");\n      i0.ɵɵtext(13, \"<app-text-shell>\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(14, \" basically works by wrapping the text node with a loading indicator while you are fetching data. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"p\");\n      i0.ɵɵtext(16, \" While there are empty values the component adds some 'loading' styles and animations. Whereas while there are non empty values, the loading state is removed. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"p\");\n      i0.ɵɵtext(18, \" Try toggling the loading state of the text shells below by changing the value of this textarea. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 5)(20, \"section\", 6)(21, \"ion-textarea\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function TextShellPage_Template_ion_textarea_ngModelChange_21_listener($event) {\n        return ctx.sampleTextShellData = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"p\");\n      i0.ɵɵtext(23, \" You can reset the 'loading' state by clearing the textarea value. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"section\", 8)(25, \"h4\");\n      i0.ɵɵtext(26, \"No animation (default)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"p\");\n      i0.ɵɵtext(28, \" Single line example \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 9);\n      i0.ɵɵelement(30, \"app-text-shell\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"p\");\n      i0.ɵɵtext(32, \" Multi-line example \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 9)(34, \"p\");\n      i0.ɵɵelement(35, \"app-text-shell\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"p\");\n      i0.ɵɵtext(37, \" On top of another element (with transparent background) \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"div\", 12)(39, \"app-image-shell\", 13)(40, \"app-aspect-ratio\", 14)(41, \"p\", 15);\n      i0.ɵɵelement(42, \"app-text-shell\", 11);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(43, \"section\", 8)(44, \"h4\");\n      i0.ɵɵtext(45, \"Bouncing animation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"p\");\n      i0.ɵɵtext(47, \" Single line example \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"div\", 9);\n      i0.ɵɵelement(49, \"app-text-shell\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"p\");\n      i0.ɵɵtext(51, \" Multi-line example \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"div\", 9)(53, \"p\");\n      i0.ɵɵelement(54, \"app-text-shell\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(55, \"p\");\n      i0.ɵɵtext(56, \" On top of another element (with transparent background) \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(57, \"div\", 12)(58, \"app-image-shell\", 13)(59, \"app-aspect-ratio\", 14)(60, \"p\", 15);\n      i0.ɵɵelement(61, \"app-text-shell\", 17);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(62, \"p\")(63, \"b\");\n      i0.ɵɵtext(64, \"Note:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(65, \" As we don\\u2019t use masks, this approach works well with use cases that require transparent backgrounds. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(66, \"section\", 8)(67, \"h4\");\n      i0.ɵɵtext(68, \"Gradient animation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(69, \"p\");\n      i0.ɵɵtext(70, \" Single line example \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(71, \"div\", 9);\n      i0.ɵɵelement(72, \"app-text-shell\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(73, \"p\");\n      i0.ɵɵtext(74, \" Multi-line example \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(75, \"div\", 9)(76, \"p\");\n      i0.ɵɵelement(77, \"app-text-shell\", 19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(78, \"p\");\n      i0.ɵɵtext(79, \" On top of another element (with transparent background) \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(80, \"div\", 12)(81, \"app-image-shell\", 13)(82, \"app-aspect-ratio\", 14)(83, \"p\", 15);\n      i0.ɵɵelement(84, \"app-text-shell\", 19);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(85, \"p\")(86, \"b\");\n      i0.ɵɵtext(87, \"Side effect:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(88, \" This solution doesn\\u2019t play well if you require the \");\n      i0.ɵɵelementStart(89, \"code\");\n      i0.ɵɵtext(90, \"<app-text-shell>\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(91, \" to have a transparent background as the masks need a solid color to work properly. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(92, \"section\", 8)(93, \"h5\");\n      i0.ɵɵtext(94, \"Prepend and Append text to the data binded\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(95, \"p\");\n      i0.ɵɵtext(96, \" There are cases where we need to add some text before or after the value binded to the \");\n      i0.ɵɵelementStart(97, \"code\");\n      i0.ɵɵtext(98, \"<app-text-shell>\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(99, \". For example if we are loading a price value and we want to put the '$' before the price. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(100, \"pre\");\n      i0.ɵɵtext(101, \"  <app-text-shell [data]=\\\"\");\n      i0.ɵɵelementStart(102, \"b\");\n      i0.ɵɵtext(103, \"(sampleTextShellData) ? '$'.concat(' ', sampleTextShellData) : null\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(104, \"\\\"></app-text-shell>\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(105, \"div\", 9);\n      i0.ɵɵelement(106, \"app-text-shell\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(107, \"pre\");\n      i0.ɵɵtext(108, \"<app-text-shell [data]=\\\"\");\n      i0.ɵɵelementStart(109, \"b\");\n      i0.ɵɵtext(110, \"(sampleTextShellData) ? sampleTextShellData.concat(' years old') : null\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(111, \"\\\"></app-text-shell>\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(112, \"div\", 9);\n      i0.ɵɵelement(113, \"app-text-shell\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(114, \"section\", 8)(115, \"h4\");\n      i0.ɵɵtext(116, \"Other use cases\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(117, \"p\");\n      i0.ɵɵtext(118, \" The \");\n      i0.ɵɵelementStart(119, \"code\");\n      i0.ɵɵtext(120, \"<app-text-shell>\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(121, \" element can be used alone or wrapped with a text tag (\");\n      i0.ɵɵelementStart(122, \"b\");\n      i0.ɵɵtext(123, \"h1\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(124, \", \");\n      i0.ɵɵelementStart(125, \"b\");\n      i0.ɵɵtext(126, \"h2\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(127, \", \");\n      i0.ɵɵelementStart(128, \"b\");\n      i0.ɵɵtext(129, \"h3\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(130, \", \");\n      i0.ɵɵelementStart(131, \"b\");\n      i0.ɵɵtext(132, \"p\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(133, \", etc). \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(134, \"p\");\n      i0.ɵɵtext(135, \" In case you wrap it with a heading element, we included basic styles (\");\n      i0.ɵɵelementStart(136, \"code\");\n      i0.ɵɵtext(137, \"src/theme/shell-defaults.scss\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(138, \") to match the different heading styles (mainly line-height associated to each heading). \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(139, \"pre\");\n      i0.ɵɵtext(140, \":root {\\n  h1 > app-text-shell {\\n    --text-shell-line-height: 32px;\\n    --text-shell-line-color: #CCC;\\n  }\\n}\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(141, \"p\");\n      i0.ɵɵtext(142, \" By matching the line-height of the text-shell with the line-height of the wrapper element, we avoid page height bumps after the data gets loaded into the shells. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(143, \"pre\");\n      i0.ɵɵtext(144, \"<h1>\\n  <app-text-shell [data]=\\\"\\\"></app-text-shell>\\n</h1>\\n\\n<h2>\\n  <app-text-shell [data]=\\\"\\\"></app-text-shell>\\n</h2>\\n\\n<h3>\\n  <app-text-shell [data]=\\\"\\\"></app-text-shell>\\n</h3>\\n\\n<h4>\\n  <app-text-shell [data]=\\\"\\\"></app-text-shell>\\n</h4>\\n\\n<h5>\\n  <app-text-shell [data]=\\\"\\\"></app-text-shell>\\n</h5>\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(145, \"h1\");\n      i0.ɵɵelement(146, \"app-text-shell\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(147, \"h2\");\n      i0.ɵɵelement(148, \"app-text-shell\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(149, \"h3\");\n      i0.ɵɵelement(150, \"app-text-shell\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(151, \"h4\");\n      i0.ɵɵelement(152, \"app-text-shell\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(153, \"h5\");\n      i0.ɵɵelement(154, \"app-text-shell\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(155, \"section\", 8)(156, \"p\");\n      i0.ɵɵtext(157, \" You can add/remove the following \");\n      i0.ɵɵelementStart(158, \"b\");\n      i0.ɵɵtext(159, \"Attributes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(160, \" to adjust the shell element behavior \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(161, \"h5\");\n      i0.ɵɵtext(162, \"Multi-line support\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(163, \"p\");\n      i0.ɵɵtext(164, \" You can set up-to 6 lines \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(165, \"pre\");\n      i0.ɵɵtext(166, \"<p>\\n  <app-text-shell \");\n      i0.ɵɵelementStart(167, \"b\");\n      i0.ɵɵtext(168, \"lines=\\\"6\\\"\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(169, \" [data]=\\\"\\\"></app-text-shell>\\n</p>\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(170, \"p\");\n      i0.ɵɵelement(171, \"app-text-shell\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(172, \"h5\");\n      i0.ɵɵtext(173, \"Set different animation options\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(174, \"p\");\n      i0.ɵɵtext(175, \" You can choose between \");\n      i0.ɵɵelementStart(176, \"b\");\n      i0.ɵɵtext(177, \"no animation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(178, \" (default), \");\n      i0.ɵɵelementStart(179, \"b\");\n      i0.ɵɵtext(180, \"bouncing animation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(181, \", and \");\n      i0.ɵɵelementStart(182, \"b\");\n      i0.ɵɵtext(183, \"gradient background with line masks on top\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(184, \"pre\");\n      i0.ɵɵtext(185, \"<p>\\n  <app-text-shell \");\n      i0.ɵɵelementStart(186, \"b\");\n      i0.ɵɵtext(187, \"animation=\\\"bouncing\\\"\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(188, \" lines=\\\"2\\\" [data]=\\\"\\\"></app-text-shell>\\n</p>\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(189, \"p\");\n      i0.ɵɵelement(190, \"app-text-shell\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(191, \"pre\");\n      i0.ɵɵtext(192, \"<p>\\n  <app-text-shell \");\n      i0.ɵɵelementStart(193, \"b\");\n      i0.ɵɵtext(194, \"animation=\\\"gradient\\\"\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(195, \" lines=\\\"2\\\" [data]=\\\"\\\"></app-text-shell>\\n</p>\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(196, \"pre\");\n      i0.ɵɵtext(197, \"app-text-shell {\\n  --text-shell-background: #FFF;\\n  --text-shell-line-color: transparent;\\n}\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(198, \"p\", 22);\n      i0.ɵɵelement(199, \"app-text-shell\", 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(200, \"p\");\n      i0.ɵɵtext(201, \" In this mode, the \");\n      i0.ɵɵelementStart(202, \"code\");\n      i0.ɵɵtext(203, \"--text-shell-background\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(204, \" property refers to the masks colors. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(205, \"p\")(206, \"b\");\n      i0.ɵɵtext(207, \"Note:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(208, \" When using a \");\n      i0.ɵɵelementStart(209, \"code\");\n      i0.ɵɵtext(210, \"gradient\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(211, \" animation, make sure you set the line-color to transparent so the background animation that's beneath the masks can be seen. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(212, \"section\", 8)(213, \"p\");\n      i0.ɵɵtext(214, \" You can also override these \");\n      i0.ɵɵelementStart(215, \"b\");\n      i0.ɵɵtext(216, \"CSS 4 variables\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(217, \" to adjust the shell element style \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(218, \"h5\");\n      i0.ɵɵtext(219, \"Line color\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(220, \"pre\");\n      i0.ɵɵtext(221, \"app-text-shell {\\n  --text-shell-line-color: rgba(233, 30, 99, .25);\\n}\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(222, \"h3\");\n      i0.ɵɵelement(223, \"app-text-shell\", 24);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(224, \"h5\");\n      i0.ɵɵtext(225, \"Background\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(226, \"p\");\n      i0.ɵɵtext(227, \" Background by default is set to \");\n      i0.ɵɵelementStart(228, \"b\");\n      i0.ɵɵtext(229, \"transparent\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(230, \". \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(231, \"pre\");\n      i0.ɵɵtext(232, \"app-text-shell {\\n  --text-shell-line-color: #FFFFFF;\\n  --text-shell-background: #000000;\\n}\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(233, \"p\", 25);\n      i0.ɵɵelement(234, \"app-text-shell\", 26);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(235, \"h5\");\n      i0.ɵɵtext(236, \"Background Animation\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(237, \"p\")(238, \"b\");\n      i0.ɵɵtext(239, \"Note:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(240, \" These properties are only applied when using \");\n      i0.ɵɵelementStart(241, \"code\");\n      i0.ɵɵtext(242, \"animation=\\\"gradient\\\"\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(243, \". \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(244, \"pre\");\n      i0.ɵɵtext(245, \"app-text-shell {\\n  --text-shell-line-color: transparent;\\n  --text-shell-background: #000000;\\n  --text-shell-animation-background: rgba(255, 3, 109, 0.6);\\n  --text-shell-animation-color: rgba(156, 4, 68, 0.7);\\n}\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(246, \"p\", 25);\n      i0.ɵɵelement(247, \"app-text-shell\", 27);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(248, \"h5\");\n      i0.ɵɵtext(249, \"Line height\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(250, \"pre\");\n      i0.ɵɵtext(251, \"app-text-shell {\\n  --text-shell-line-height: 40px;\\n}\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(252, \"h3\");\n      i0.ɵɵelement(253, \"app-text-shell\", 28);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(254, \"h5\");\n      i0.ɵɵtext(255, \"Line gutter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(256, \"pre\");\n      i0.ɵɵtext(257, \"app-text-shell {\\n  --text-shell-line-gutter: 10px;\\n}\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(258, \"p\");\n      i0.ɵɵelement(259, \"app-text-shell\", 29);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(260, \"section\", 8)(261, \"h5\");\n      i0.ɵɵtext(262, \"Max-width\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(263, \"p\");\n      i0.ɵɵtext(264, \" By default, the \");\n      i0.ɵɵelementStart(265, \"code\");\n      i0.ɵɵtext(266, \"<app-text-shell>\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(267, \" element will fill it's container width. You can adjust this by setting a temporary \");\n      i0.ɵɵelementStart(268, \"code\");\n      i0.ɵɵtext(269, \"max-width\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(270, \" while the shell loading state is present. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(271, \"pre\");\n      i0.ɵɵtext(272, \".sample-text-max-width > app-text-shell {\\n  \");\n      i0.ɵɵelementStart(273, \"b\");\n      i0.ɵɵtext(274, \"max-width: 50%;\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(275, \"\\n\\n  &.text-loaded {\\n    \");\n      i0.ɵɵelementStart(276, \"b\");\n      i0.ɵɵtext(277, \"max-width: unset;\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(278, \"\\n  }\\n}\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(279, \"div\", 30);\n      i0.ɵɵelement(280, \"app-text-shell\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(281, \"h5\");\n      i0.ɵɵtext(282, \"Min-width\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(283, \"p\");\n      i0.ɵɵtext(284, \" When the \");\n      i0.ɵɵelementStart(285, \"code\");\n      i0.ɵɵtext(286, \"<app-text-shell>\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(287, \" parent container doesn't have a width defined, it may happen that the \");\n      i0.ɵɵelementStart(288, \"code\");\n      i0.ɵɵtext(289, \"<app-text-shell>\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(290, \" inherits an undefined width and thus it's not shown. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(291, \"p\");\n      i0.ɵɵtext(292, \"In these cases setting a temporary \");\n      i0.ɵɵelementStart(293, \"code\");\n      i0.ɵɵtext(294, \"min-width\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(295, \" fixes the issue.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(296, \"p\")(297, \"b\");\n      i0.ɵɵtext(298, \"Note:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(299, \" If the parent doesn't have a defined width, it will fail to set a min-width based on a percentage of it's parents width. You will have to use absolute units (px, ch, etc). \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(300, \"pre\");\n      i0.ɵɵtext(301, \".sample-text-min-width > app-text-shell {\\n  \");\n      i0.ɵɵelementStart(302, \"b\");\n      i0.ɵɵtext(303, \"min-width: 80px;\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(304, \"\\n\\n  &.text-loaded {\\n    \");\n      i0.ɵɵelementStart(305, \"b\");\n      i0.ɵɵtext(306, \"min-width: 0px;\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(307, \"\\n  }\\n}\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(308, \"span\", 31);\n      i0.ɵɵelement(309, \"app-text-shell\", 10);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(21);\n      i0.ɵɵproperty(\"ngModel\", ctx.sampleTextShellData);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"data\", ctx.sampleTextShellData);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"data\", ctx.sampleTextShellData);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"display\", \"cover\")(\"src\", \"./assets/sample-images/getting-started/category5-1.1.png\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ratio\", i0.ɵɵpureFunction0(23, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"data\", ctx.sampleTextShellData);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"data\", ctx.sampleTextShellData);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"data\", ctx.sampleTextShellData);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"display\", \"cover\")(\"src\", \"./assets/sample-images/getting-started/category5-1.1.png\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ratio\", i0.ɵɵpureFunction0(24, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"data\", ctx.sampleTextShellData);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"data\", ctx.sampleTextShellData);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"data\", ctx.sampleTextShellData);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"display\", \"cover\")(\"src\", \"./assets/sample-images/getting-started/category5-1.1.png\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ratio\", i0.ɵɵpureFunction0(25, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"data\", ctx.sampleTextShellData);\n      i0.ɵɵadvance(22);\n      i0.ɵɵproperty(\"data\", ctx.sampleTextShellData ? \"$\".concat(\" \", ctx.sampleTextShellData) : null);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"data\", ctx.sampleTextShellData ? ctx.sampleTextShellData.concat(\" years old\") : null);\n      i0.ɵɵadvance(167);\n      i0.ɵɵproperty(\"data\", ctx.sampleTextShellData);\n      i0.ɵɵadvance(29);\n      i0.ɵɵproperty(\"data\", ctx.sampleTextShellData);\n    }\n  },\n  dependencies: [i1.NgControlStatus, i1.NgModel, i2.IonBackButton, i2.IonButtons, i2.IonContent, i2.IonHeader, i2.IonTextarea, i2.IonTitle, i2.IonToolbar, i2.TextValueAccessor, i2.IonBackButtonDelegate, i3.AspectRatioComponent, i4.ImageShellComponent, i5.TextShellComponent],\n  styles: [\".showcase-content[_ngcontent-%COMP%] {\\n  --background: var(--app-background);\\n}\\n.showcase-content[_ngcontent-%COMP%]   ion-item-divider[_ngcontent-%COMP%] {\\n  --background: var(--ion-color-secondary);\\n  --color: var(--ion-color-lightest);\\n  text-transform: uppercase;\\n  font-weight: 500;\\n  letter-spacing: 1px;\\n}\\n.showcase-content[_ngcontent-%COMP%]   .showcase-section[_ngcontent-%COMP%] {\\n  margin: 20px 20px 60px;\\n}\\n.showcase-content[_ngcontent-%COMP%]   pre[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  background: #CCC;\\n  padding: 10px;\\n}\\n.showcase-content[_ngcontent-%COMP%]   code[_ngcontent-%COMP%] {\\n  color: #F92672;\\n  font-weight: 500;\\n}\\n\\n.loading-state-demo[_ngcontent-%COMP%] {\\n  background-color: #ececec;\\n  background-image: url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='40' height='40' viewBox='0 0 40 40'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.38'%3E%3Cpath d='M0 38.59l2.83-2.83 1.41 1.41L1.41 40H0v-1.41zM0 1.4l2.83 2.83 1.41-1.41L1.41 0H0v1.41zM38.59 40l-2.83-2.83 1.41-1.41L40 38.59V40h-1.41zM40 1.41l-2.83 2.83-1.41-1.41L38.59 0H40v1.41zM20 18.6l2.83-2.83 1.41 1.41L21.41 20l2.83 2.83-1.41 1.41L20 21.41l-2.83 2.83-1.41-1.41L18.59 20l-2.83-2.83 1.41-1.41L20 18.59z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\");\\n  padding: 0px 0px 20px;\\n}\\n\\n.sticky-section[_ngcontent-%COMP%] {\\n  position: sticky;\\n  top: 0px;\\n  background: #ececec;\\n  padding: 20px;\\n  margin: 0px 0px 60px !important;\\n  z-index: 10;\\n}\\n\\n.sample-text-max-width[_ngcontent-%COMP%]    > app-text-shell[_ngcontent-%COMP%] {\\n  max-width: 50%;\\n}\\n.sample-text-max-width[_ngcontent-%COMP%]    > app-text-shell.text-loaded[_ngcontent-%COMP%] {\\n  max-width: unset;\\n}\\n\\n.sample-text-min-width[_ngcontent-%COMP%]    > app-text-shell[_ngcontent-%COMP%] {\\n  min-width: 80px;\\n}\\n.sample-text-min-width[_ngcontent-%COMP%]    > app-text-shell.text-loaded[_ngcontent-%COMP%] {\\n  min-width: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hvd2Nhc2UvYXBwLXNoZWxsL2FwcC1zaGVsbC5wYWdlLnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi9UaXRhbiUyMEVzdGF0ZXMvc3JjL2FwcC9zaG93Y2FzZS9hcHAtc2hlbGwvdGV4dC1zaGVsbC90ZXh0LXNoZWxsLnBhZ2Uuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hvd2Nhc2UvYXBwLXNoZWxsL3RleHQtc2hlbGwvdGV4dC1zaGVsbC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQ0FBQTtBQ0NGO0FEQ0U7RUFDRSx3Q0FBQTtFQUNBLGtDQUFBO0VBQ0EseUJBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0FDQ0o7QURFRTtFQUNFLHNCQUFBO0FDQUo7QURHRTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGFBQUE7QUNESjtBRElFO0VBQ0UsY0FBQTtFQUNBLGdCQUFBO0FDRko7O0FDbkJBO0VBQ0UseUJBQUE7RUFDQSx3aUJBQUE7RUFDQSxxQkFBQTtBRHNCRjs7QUNuQkE7RUFDRSxnQkFBQTtFQUNBLFFBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7RUFDQSwrQkFBQTtFQUNBLFdBQUE7QURzQkY7O0FDbkJBO0VBQ0UsY0FBQTtBRHNCRjtBQ3BCRTtFQUNFLGdCQUFBO0FEc0JKOztBQ2xCQTtFQUNFLGVBQUE7QURxQkY7QUNuQkU7RUFDRSxjQUFBO0FEcUJKIiwic291cmNlc0NvbnRlbnQiOlsiLnNob3djYXNlLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6IHZhcigtLWFwcC1iYWNrZ3JvdW5kKTtcblxuICBpb24taXRlbS1kaXZpZGVyIHtcbiAgICAtLWJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1zZWNvbmRhcnkpO1xuICAgIC0tY29sb3I6IHZhcigtLWlvbi1jb2xvci1saWdodGVzdCk7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gIH1cblxuICAuc2hvd2Nhc2Utc2VjdGlvbiB7XG4gICAgbWFyZ2luOiAyMHB4IDIwcHggNjBweDtcbiAgfVxuXG4gIHByZSB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGJhY2tncm91bmQ6ICNDQ0M7XG4gICAgcGFkZGluZzogMTBweDtcbiAgfVxuXG4gIGNvZGUge1xuICAgIGNvbG9yOiAjRjkyNjcyO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIH1cbn1cbiIsIi5zaG93Y2FzZS1jb250ZW50IHtcbiAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1hcHAtYmFja2dyb3VuZCk7XG59XG4uc2hvd2Nhc2UtY29udGVudCBpb24taXRlbS1kaXZpZGVyIHtcbiAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3Itc2Vjb25kYXJ5KTtcbiAgLS1jb2xvcjogdmFyKC0taW9uLWNvbG9yLWxpZ2h0ZXN0KTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbn1cbi5zaG93Y2FzZS1jb250ZW50IC5zaG93Y2FzZS1zZWN0aW9uIHtcbiAgbWFyZ2luOiAyMHB4IDIwcHggNjBweDtcbn1cbi5zaG93Y2FzZS1jb250ZW50IHByZSB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgYmFja2dyb3VuZDogI0NDQztcbiAgcGFkZGluZzogMTBweDtcbn1cbi5zaG93Y2FzZS1jb250ZW50IGNvZGUge1xuICBjb2xvcjogI0Y5MjY3MjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuLmxvYWRpbmctc3RhdGUtZGVtbyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlY2VjZWM7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nNDAnIGhlaWdodD0nNDAnIHZpZXdCb3g9JzAgMCA0MCA0MCclM0UlM0NnIGZpbGwtcnVsZT0nZXZlbm9kZCclM0UlM0NnIGZpbGw9JyUyM2ZmZmZmZicgZmlsbC1vcGFjaXR5PScwLjM4JyUzRSUzQ3BhdGggZD0nTTAgMzguNTlsMi44My0yLjgzIDEuNDEgMS40MUwxLjQxIDQwSDB2LTEuNDF6TTAgMS40bDIuODMgMi44MyAxLjQxLTEuNDFMMS40MSAwSDB2MS40MXpNMzguNTkgNDBsLTIuODMtMi44MyAxLjQxLTEuNDFMNDAgMzguNTlWNDBoLTEuNDF6TTQwIDEuNDFsLTIuODMgMi44My0xLjQxLTEuNDFMMzguNTkgMEg0MHYxLjQxek0yMCAxOC42bDIuODMtMi44MyAxLjQxIDEuNDFMMjEuNDEgMjBsMi44MyAyLjgzLTEuNDEgMS40MUwyMCAyMS40MWwtMi44MyAyLjgzLTEuNDEtMS40MUwxOC41OSAyMGwtMi44My0yLjgzIDEuNDEtMS40MUwyMCAxOC41OXonLyUzRSUzQy9nJTNFJTNDL2clM0UlM0Mvc3ZnJTNFXCIpO1xuICBwYWRkaW5nOiAwcHggMHB4IDIwcHg7XG59XG5cbi5zdGlja3ktc2VjdGlvbiB7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMHB4O1xuICBiYWNrZ3JvdW5kOiAjZWNlY2VjO1xuICBwYWRkaW5nOiAyMHB4O1xuICBtYXJnaW46IDBweCAwcHggNjBweCAhaW1wb3J0YW50O1xuICB6LWluZGV4OiAxMDtcbn1cblxuLnNhbXBsZS10ZXh0LW1heC13aWR0aCA+IGFwcC10ZXh0LXNoZWxsIHtcbiAgbWF4LXdpZHRoOiA1MCU7XG59XG4uc2FtcGxlLXRleHQtbWF4LXdpZHRoID4gYXBwLXRleHQtc2hlbGwudGV4dC1sb2FkZWQge1xuICBtYXgtd2lkdGg6IHVuc2V0O1xufVxuXG4uc2FtcGxlLXRleHQtbWluLXdpZHRoID4gYXBwLXRleHQtc2hlbGwge1xuICBtaW4td2lkdGg6IDgwcHg7XG59XG4uc2FtcGxlLXRleHQtbWluLXdpZHRoID4gYXBwLXRleHQtc2hlbGwudGV4dC1sb2FkZWQge1xuICBtaW4td2lkdGg6IDBweDtcbn0iLCJAaW1wb3J0IFwiLi4vYXBwLXNoZWxsLnBhZ2VcIjtcblxuLmxvYWRpbmctc3RhdGUtZGVtbyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlY2VjZWM7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nNDAnIGhlaWdodD0nNDAnIHZpZXdCb3g9JzAgMCA0MCA0MCclM0UlM0NnIGZpbGwtcnVsZT0nZXZlbm9kZCclM0UlM0NnIGZpbGw9JyUyM2ZmZmZmZicgZmlsbC1vcGFjaXR5PScwLjM4JyUzRSUzQ3BhdGggZD0nTTAgMzguNTlsMi44My0yLjgzIDEuNDEgMS40MUwxLjQxIDQwSDB2LTEuNDF6TTAgMS40bDIuODMgMi44MyAxLjQxLTEuNDFMMS40MSAwSDB2MS40MXpNMzguNTkgNDBsLTIuODMtMi44MyAxLjQxLTEuNDFMNDAgMzguNTlWNDBoLTEuNDF6TTQwIDEuNDFsLTIuODMgMi44My0xLjQxLTEuNDFMMzguNTkgMEg0MHYxLjQxek0yMCAxOC42bDIuODMtMi44MyAxLjQxIDEuNDFMMjEuNDEgMjBsMi44MyAyLjgzLTEuNDEgMS40MUwyMCAyMS40MWwtMi44MyAyLjgzLTEuNDEtMS40MUwxOC41OSAyMGwtMi44My0yLjgzIDEuNDEtMS40MUwyMCAxOC41OXonLyUzRSUzQy9nJTNFJTNDL2clM0UlM0Mvc3ZnJTNFXCIpO1xuICBwYWRkaW5nOiAwcHggMHB4IDIwcHg7XG59XG5cbi5zdGlja3ktc2VjdGlvbiB7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMHB4O1xuICBiYWNrZ3JvdW5kOiAjZWNlY2VjO1xuICBwYWRkaW5nOiAyMHB4O1xuICBtYXJnaW46IDBweCAwcHggNjBweCAhaW1wb3J0YW50O1xuICB6LWluZGV4OiAxMDtcbn1cblxuLnNhbXBsZS10ZXh0LW1heC13aWR0aCA+IGFwcC10ZXh0LXNoZWxsIHtcbiAgbWF4LXdpZHRoOiA1MCU7XG5cbiAgJi50ZXh0LWxvYWRlZCB7XG4gICAgbWF4LXdpZHRoOiB1bnNldDtcbiAgfVxufVxuXG4uc2FtcGxlLXRleHQtbWluLXdpZHRoID4gYXBwLXRleHQtc2hlbGwge1xuICBtaW4td2lkdGg6IDgwcHg7XG5cbiAgJi50ZXh0LWxvYWRlZCB7XG4gICAgbWluLXdpZHRoOiAwcHg7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["TextShellPage","constructor","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/teeicloud/TitanEstates/Titan Estates/src/app/showcase/app-shell/text-shell/text-shell.page.ts","/Users/teeicloud/TitanEstates/Titan Estates/src/app/showcase/app-shell/text-shell/text-shell.page.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-text-shell-page',\n  templateUrl: './text-shell.page.html',\n  styleUrls: ['./text-shell.page.scss'],\n})\nexport class TextShellPage {\n  sampleTextShellData = '';\n\n  constructor() { }\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"showcase/app-shell\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      Text Shell\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\" style=\"margin-bottom: 40px;\">\n    <p>\n      This component is useful when you want to show a loading indicator while fetching text data from the server.\n    </p>\n    <p>\n      The <code>&lt;app-text-shell&gt;</code> basically works by wrapping the text node with a loading indicator while you are fetching data.\n    </p>\n    <p>\n      While there are empty values the component adds some 'loading' styles and animations. Whereas while there are non empty values, the loading state is removed.\n    </p>\n    <p>\n      Try toggling the loading state of the text shells below by changing the value of this textarea.\n    </p>\n  </section>\n  <div class=\"loading-state-demo\">\n    <section class=\"showcase-section sticky-section\">\n      <ion-textarea style=\"--background: #FFF;\" placeholder=\"When this text is empty the text-shell will show the loading state.\" clearOnEdit=\"true\" [(ngModel)]=\"sampleTextShellData\"></ion-textarea>\n      <p>\n        You can reset the 'loading' state by clearing the textarea value.\n      </p>\n    </section>\n    <section class=\"showcase-section\">\n      <h4>No animation (default)</h4>\n      <p>\n        Single line example\n      </p>\n      <div style=\"background-color: #FFF; padding: 20px;\">\n        <app-text-shell [data]=\"sampleTextShellData\"></app-text-shell>\n      </div>\n      <p>\n        Multi-line example\n      </p>\n      <div style=\"background-color: #FFF; padding: 20px;\">\n        <p>\n          <app-text-shell [data]=\"sampleTextShellData\" lines=\"3\"></app-text-shell>\n        </p>\n      </div>\n      <p>\n        On top of another element (with transparent background)\n      </p>\n      <div style=\"background-color: #FFF; padding: 20px; color: #FFF; font-weight: 500;\">\n        <app-image-shell animation=\"spinner\" class=\"add-overlay\" [display]=\"'cover'\" [src]=\"'./assets/sample-images/getting-started/category5-1.1.png'\">\n          <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\n            <p style=\"margin: 20px 40px;\">\n              <app-text-shell [data]=\"sampleTextShellData\" lines=\"3\"></app-text-shell>\n            </p>\n          </app-aspect-ratio>\n        </app-image-shell>\n      </div>\n    </section>\n    <section class=\"showcase-section\">\n      <h4>Bouncing animation</h4>\n      <p>\n        Single line example\n      </p>\n      <div style=\"background-color: #FFF; padding: 20px;\">\n        <app-text-shell [data]=\"sampleTextShellData\" animation=\"bouncing\"></app-text-shell>\n      </div>\n      <p>\n        Multi-line example\n      </p>\n      <div style=\"background-color: #FFF; padding: 20px;\">\n        <p>\n          <app-text-shell [data]=\"sampleTextShellData\" animation=\"bouncing\" lines=\"3\"></app-text-shell>\n        </p>\n      </div>\n      <p>\n        On top of another element (with transparent background)\n      </p>\n      <div style=\"background-color: #FFF; padding: 20px; color: #FFF; font-weight: 500;\">\n        <app-image-shell animation=\"spinner\" class=\"add-overlay\" [display]=\"'cover'\" [src]=\"'./assets/sample-images/getting-started/category5-1.1.png'\">\n          <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\n            <p style=\"margin: 20px 40px;\">\n              <app-text-shell [data]=\"sampleTextShellData\" animation=\"bouncing\" lines=\"3\"></app-text-shell>\n            </p>\n          </app-aspect-ratio>\n        </app-image-shell>\n      </div>\n      <p>\n        <b>Note:</b> As we don’t use masks, this approach works well with use cases that require transparent backgrounds.\n      </p>\n    </section>\n    <section class=\"showcase-section\">\n      <h4>Gradient animation</h4>\n      <p>\n        Single line example\n      </p>\n      <div style=\"background-color: #FFF; padding: 20px;\">\n        <app-text-shell [data]=\"sampleTextShellData\" animation=\"gradient\"></app-text-shell>\n      </div>\n      <p>\n        Multi-line example\n      </p>\n      <div style=\"background-color: #FFF; padding: 20px;\">\n        <p>\n          <app-text-shell [data]=\"sampleTextShellData\" animation=\"gradient\" lines=\"3\"></app-text-shell>\n        </p>\n      </div>\n      <p>\n        On top of another element (with transparent background)\n      </p>\n      <div style=\"background-color: #FFF; padding: 20px; color: #FFF; font-weight: 500;\">\n        <app-image-shell animation=\"spinner\" class=\"add-overlay\" [display]=\"'cover'\" [src]=\"'./assets/sample-images/getting-started/category5-1.1.png'\">\n          <app-aspect-ratio [ratio]=\"{w:2, h:1}\">\n            <p style=\"margin: 20px 40px;\">\n              <app-text-shell [data]=\"sampleTextShellData\" animation=\"gradient\" lines=\"3\"></app-text-shell>\n            </p>\n          </app-aspect-ratio>\n        </app-image-shell>\n      </div>\n      <p>\n        <b>Side effect:</b> This solution doesn’t play well if you require the <code>&lt;app-text-shell&gt;</code> to have a transparent background as the masks need a solid color to work properly.\n      </p>\n    </section>\n    <section class=\"showcase-section\">\n      <h5>Prepend and Append text to the data binded</h5>\n      <p>\n        There are cases where we need to add some text before or after the value binded to the <code>&lt;app-text-shell&gt;</code>. For example if we are loading a price value and we want to put the '$' before the price.\n      </p>\n  <pre>\n  &lt;app-text-shell [data]=\"<b>(sampleTextShellData) ? '$'.concat(' ', sampleTextShellData) : null</b>\"&gt;&lt;/app-text-shell&gt;\n  </pre>\n      <div style=\"background-color: #FFF; padding: 20px;\">\n        <app-text-shell [data]=\"(sampleTextShellData) ? '$'.concat(' ', sampleTextShellData) : null\"></app-text-shell>\n      </div>\n<pre>\n&lt;app-text-shell [data]=\"<b>(sampleTextShellData) ? sampleTextShellData.concat(' years old') : null</b>\"&gt;&lt;/app-text-shell&gt;\n</pre>\n      <div style=\"background-color: #FFF; padding: 20px;\">\n        <app-text-shell [data]=\"(sampleTextShellData) ? sampleTextShellData.concat(' years old') : null\"></app-text-shell>\n      </div>\n    </section>\n  </div>\n  <section class=\"showcase-section\">\n    <h4>Other use cases</h4>\n    <p>\n      The <code>&lt;app-text-shell&gt;</code> element can be used alone or wrapped with a text tag (<b>h1</b>, <b>h2</b>, <b>h3</b>, <b>p</b>, etc).\n    </p>\n    <p>\n      In case you wrap it with a heading element, we included basic styles (<code>src/theme/shell-defaults.scss</code>) to match the different heading styles (mainly line-height associated to each heading).\n    </p>\n<pre>\n:root &#123;\n  h1 > app-text-shell &#123;\n    --text-shell-line-height: 32px;\n    --text-shell-line-color: #CCC;\n  &#125;\n&#125;\n</pre>\n    <p>\n      By matching the line-height of the text-shell with the line-height of the wrapper element, we avoid page height bumps after the data gets loaded into the shells.\n    </p>\n<pre>\n&lt;h1&gt;\n  &lt;app-text-shell [data]=\"\"&gt;&lt;/app-text-shell&gt;\n&lt;/h1&gt;\n\n&lt;h2&gt;\n  &lt;app-text-shell [data]=\"\"&gt;&lt;/app-text-shell&gt;\n&lt;/h2&gt;\n\n&lt;h3&gt;\n  &lt;app-text-shell [data]=\"\"&gt;&lt;/app-text-shell&gt;\n&lt;/h3&gt;\n\n&lt;h4&gt;\n  &lt;app-text-shell [data]=\"\"&gt;&lt;/app-text-shell&gt;\n&lt;/h4&gt;\n\n&lt;h5&gt;\n  &lt;app-text-shell [data]=\"\"&gt;&lt;/app-text-shell&gt;\n&lt;/h5&gt;\n</pre>\n    <h1>\n      <app-text-shell [data]=\"\"></app-text-shell>\n    </h1>\n    <h2>\n      <app-text-shell [data]=\"\"></app-text-shell>\n    </h2>\n    <h3>\n      <app-text-shell [data]=\"\"></app-text-shell>\n    </h3>\n    <h4>\n      <app-text-shell [data]=\"\"></app-text-shell>\n    </h4>\n    <h5>\n      <app-text-shell [data]=\"\"></app-text-shell>\n    </h5>\n  </section>\n  <section class=\"showcase-section\">\n    <p>\n      You can add/remove the following <b>Attributes</b> to adjust the shell element behavior\n    </p>\n    <h5>Multi-line support</h5>\n    <p>\n      You can set up-to 6 lines\n    </p>\n<pre>\n&lt;p&gt;\n  &lt;app-text-shell <b>lines=\"6\"</b> [data]=\"\"&gt;&lt;/app-text-shell&gt;\n&lt;/p&gt;\n</pre>\n    <p>\n      <app-text-shell style=\"--text-shell-line-color: #DDD;\" [data]=\"\" lines=\"6\"></app-text-shell>\n    </p>\n    <h5>Set different animation options</h5>\n    <p>\n      You can choose between <b>no animation</b> (default), <b>bouncing animation</b>, and <b>gradient background with line masks on top</b>\n    </p>\n<pre>\n&lt;p&gt;\n  &lt;app-text-shell <b>animation=\"bouncing\"</b> lines=\"2\" [data]=\"\"&gt;&lt;/app-text-shell&gt;\n&lt;/p&gt;\n</pre>\n    <p>\n      <app-text-shell style=\"--text-shell-line-color: #DDD;\" [data]=\"\" animation=\"bouncing\" lines=\"2\"></app-text-shell>\n    </p>\n<pre>\n&lt;p&gt;\n  &lt;app-text-shell <b>animation=\"gradient\"</b> lines=\"2\" [data]=\"\"&gt;&lt;/app-text-shell&gt;\n&lt;/p&gt;\n</pre>\n<pre>\napp-text-shell &#123;\n  --text-shell-background: #FFF;\n  --text-shell-line-color: transparent;\n&#125;\n</pre>\n    <p style=\"padding: 5px; background: #FFF;\">\n      <app-text-shell style=\"--text-shell-line-color: transparent; --text-shell-background: #FFF;\" [data]=\"\" animation=\"gradient\" lines=\"2\"></app-text-shell>\n    </p>\n    <p>\n      In this mode, the <code>--text-shell-background</code> property refers to the masks colors.\n    </p>\n    <p>\n      <b>Note:</b> When using a <code>gradient</code> animation, make sure you set the line-color to transparent so the background animation that's beneath the masks can be seen.\n    </p>\n  </section>\n  <section class=\"showcase-section\">\n    <p>\n      You can also override these <b>CSS 4 variables</b> to adjust the shell element style\n    </p>\n    <h5>Line color</h5>\n<pre>\napp-text-shell &#123;\n  --text-shell-line-color: rgba(233, 30, 99, .25);\n&#125;\n</pre>\n    <h3>\n      <app-text-shell style=\"--text-shell-line-color: rgba(233, 30, 99, .25);\" [data]=\"\"></app-text-shell>\n    </h3>\n    <h5>Background</h5>\n    <p>\n      Background by default is set to <b>transparent</b>.\n    </p>\n<pre>\napp-text-shell &#123;\n  --text-shell-line-color: #FFFFFF;\n  --text-shell-background: #000000;\n&#125;\n</pre>\n    <p style=\"padding: 5px; background: #000000;\">\n      <app-text-shell style=\"--text-shell-line-color: #FFFFFF; --text-shell-background: #000000;\" [data]=\"\" lines=\"3\"></app-text-shell>\n    </p>\n    <h5>Background Animation</h5>\n    <p>\n      <b>Note:</b> These properties are only applied when using <code>animation=\"gradient\"</code>.\n    </p>\n<pre>\napp-text-shell &#123;\n  --text-shell-line-color: transparent;\n  --text-shell-background: #000000;\n  --text-shell-animation-background: rgba(255, 3, 109, 0.6);\n  --text-shell-animation-color: rgba(156, 4, 68, 0.7);\n&#125;\n</pre>\n    <p style=\"padding: 5px; background: #000000;\">\n      <app-text-shell style=\"\n        --text-shell-line-color: transparent;\n        --text-shell-background: #000000;\n        --text-shell-animation-background: rgba(255, 3, 109, 0.6);\n        --text-shell-animation-color: rgba(156, 4, 68, 0.7);\n      \" [data]=\"\" lines=\"3\" animation=\"gradient\"></app-text-shell>\n    </p>\n    <h5>Line height</h5>\n<pre>\napp-text-shell &#123;\n  --text-shell-line-height: 40px;\n&#125;\n</pre>\n    <h3>\n      <app-text-shell style=\"--text-shell-line-height: 40px;\" [data]=\"\"></app-text-shell>\n    </h3>\n    <h5>Line gutter</h5>\n<pre>\napp-text-shell &#123;\n  --text-shell-line-gutter: 10px;\n&#125;\n</pre>\n    <p>\n      <app-text-shell style=\"--text-shell-line-gutter: 10px; --text-shell-line-color: #CCC;\" [data]=\"\" lines=\"4\"></app-text-shell>\n    </p>\n  </section>\n  <section class=\"showcase-section\">\n    <h5>Max-width</h5>\n    <p>\n      By default, the <code>&lt;app-text-shell&gt;</code> element will fill it's container width. You can adjust this by setting a temporary <code>max-width</code> while the shell loading state is present.\n    </p>\n<pre>\n.sample-text-max-width &gt; app-text-shell &#123;\n  <b>max-width: 50%;</b>\n\n  &.text-loaded &#123;\n    <b>max-width: unset;</b>\n  &#125;\n&#125;\n</pre>\n    <div class=\"sample-text-max-width\">\n      <app-text-shell [data]=\"sampleTextShellData\"></app-text-shell>\n    </div>\n    <h5>Min-width</h5>\n    <p>\n      When the <code>&lt;app-text-shell&gt;</code> parent container doesn't have a width defined, it may happen that the <code>&lt;app-text-shell&gt;</code> inherits an undefined width and thus it's not shown.\n    </p>\n    <p>In these cases setting a temporary <code>min-width</code> fixes the issue.</p>\n    <p>\n      <b>Note:</b> If the parent doesn't have a defined width, it will fail to set a min-width based on a percentage of it's parents width. You will have to use absolute units (px, ch, etc).\n    </p>\n<pre>\n.sample-text-min-width &gt; app-text-shell &#123;\n  <b>min-width: 80px;</b>\n\n  &.text-loaded &#123;\n    <b>min-width: 0px;</b>\n  &#125;\n&#125;\n</pre>\n    <span class=\"sample-text-min-width\" style=\"display: inline-block;\">\n      <app-text-shell [data]=\"sampleTextShellData\"></app-text-shell>\n    </span>\n  </section>\n</ion-content>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}