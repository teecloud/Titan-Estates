{"ast":null,"code":"import { ShowcaseService } from '../../showcase.service';\nimport { DataStore } from '../../../shell/data-store';\nimport { ShowcaseCompanyModel } from '../../showcase-shell.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../showcase.service\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"../../../shell/text-shell/text-shell.component\";\nexport class DataStoreSubsetPage {\n  constructor(showcaseService) {\n    this.showcaseService = showcaseService;\n  }\n  ngOnInit() {\n    const dataSource = this.showcaseService.getUserSubsetData(2);\n    const shellModel = new ShowcaseCompanyModel();\n    this.companyDataStore = new DataStore(shellModel);\n    this.companyDataStore.load(dataSource);\n    this.companyDataStore.state.subscribe(data => {\n      this.company = data;\n    });\n  }\n}\nDataStoreSubsetPage.ɵfac = function DataStoreSubsetPage_Factory(t) {\n  return new (t || DataStoreSubsetPage)(i0.ɵɵdirectiveInject(i1.ShowcaseService));\n};\nDataStoreSubsetPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DataStoreSubsetPage,\n  selectors: [[\"app-data-store-subset\"]],\n  decls: 38,\n  vars: 3,\n  consts: [[\"color\", \"primary\"], [\"slot\", \"start\"], [\"defaultHref\", \"showcase/app-shell\"], [1, \"showcase-content\"], [1, \"showcase-section\"], [\"href\", \"https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb\", \"target\", \"_blank\"], [1, \"company\"], [\"animation\", \"bouncing\", 2, \"--text-shell-line-color\", \"#FFF\", 3, \"data\"]],\n  template: function DataStoreSubsetPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-buttons\", 1);\n      i0.ɵɵelement(3, \"ion-back-button\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-title\");\n      i0.ɵɵtext(5, \" DataStore - Subset example \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"ion-content\", 3)(7, \"section\", 4)(8, \"p\");\n      i0.ɵɵtext(9, \" Sometimes the data coming from the remote API does not match 100% the model you defined for your view. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"pre\");\n      i0.ɵɵtext(11, \"export class YourModel extends ShellModel {\\n  cover: string;\\n  image: string;\\n  title: string;\\n  description: string;\\n}\\n\\n// Data coming from the remote API with the following format\\nconst jsonResponse = {\\n  name: 'extra-data',\\n  fields: {\\n    cover: 'some-image';\\n    image: 'some-other-image';\\n    title: 'a-title';\\n    description: 'a-description';\\n  }\\n};\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"p\");\n      i0.ɵɵtext(13, \" Hopefully, we can use some \");\n      i0.ɵɵelementStart(14, \"b\");\n      i0.ɵɵtext(15, \"RxJs operators\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16, \" to mold the data and fit our needs. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"p\");\n      i0.ɵɵtext(18, \" If that\\u2019s not enough, you can use the handy \");\n      i0.ɵɵelementStart(19, \"a\", 5)(20, \"b\");\n      i0.ɵɵtext(21, \"spread\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(22, \" and \");\n      i0.ɵɵelementStart(23, \"b\");\n      i0.ɵɵtext(24, \"rest\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(25, \" operators\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(26, \" to mold your data even deeper. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"pre\");\n      i0.ɵɵtext(28, \"public getListDataSource(): Observable<YourModel> {\\n  const dataObservable = this.http.get('https://reqres.in/api/users');\\n\\n  return dataObservable.pipe(\\n    map((jsonResponse) => {\\n      const filteredData: YourModel = {\\n        ...data.fields\\n      };\\n      return filteredData;\\n    })\\n  );\\n}\\n\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\", 6)(30, \"h4\");\n      i0.ɵɵtext(31, \"Company\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"p\");\n      i0.ɵɵelement(33, \"app-text-shell\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"p\");\n      i0.ɵɵelement(35, \"app-text-shell\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"p\");\n      i0.ɵɵelement(37, \"app-text-shell\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(33);\n      i0.ɵɵproperty(\"data\", ctx.company.name);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"data\", ctx.company.catchPhrase);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"data\", ctx.company.bs);\n    }\n  },\n  dependencies: [i2.IonBackButton, i2.IonButtons, i2.IonContent, i2.IonHeader, i2.IonTitle, i2.IonToolbar, i2.IonBackButtonDelegate, i3.TextShellComponent],\n  styles: [\".showcase-content[_ngcontent-%COMP%] {\\n  --background: var(--app-background);\\n}\\n.showcase-content[_ngcontent-%COMP%]   ion-item-divider[_ngcontent-%COMP%] {\\n  --background: var(--ion-color-secondary);\\n  --color: var(--ion-color-lightest);\\n  text-transform: uppercase;\\n  font-weight: 500;\\n  letter-spacing: 1px;\\n}\\n.showcase-content[_ngcontent-%COMP%]   .showcase-section[_ngcontent-%COMP%] {\\n  margin: 20px 20px 60px;\\n}\\n.showcase-content[_ngcontent-%COMP%]   pre[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  background: #CCC;\\n  padding: 10px;\\n}\\n.showcase-content[_ngcontent-%COMP%]   code[_ngcontent-%COMP%] {\\n  color: #F92672;\\n  font-weight: 500;\\n}\\n\\n.company[_ngcontent-%COMP%] {\\n  background-color: #ececec;\\n  background-image: url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='40' height='40' viewBox='0 0 40 40'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.38'%3E%3Cpath d='M0 38.59l2.83-2.83 1.41 1.41L1.41 40H0v-1.41zM0 1.4l2.83 2.83 1.41-1.41L1.41 0H0v1.41zM38.59 40l-2.83-2.83 1.41-1.41L40 38.59V40h-1.41zM40 1.41l-2.83 2.83-1.41-1.41L38.59 0H40v1.41zM20 18.6l2.83-2.83 1.41 1.41L21.41 20l2.83 2.83-1.41 1.41L20 21.41l-2.83 2.83-1.41-1.41L18.59 20l-2.83-2.83 1.41-1.41L20 18.59z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\\\");\\n  padding: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hvd2Nhc2UvYXBwLXNoZWxsL2FwcC1zaGVsbC5wYWdlLnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi9UaXRhbiUyMEVzdGF0ZXMvc3JjL2FwcC9zaG93Y2FzZS9hcHAtc2hlbGwvZGF0YS1zdG9yZS1zdWJzZXQvZGF0YS1zdG9yZS1zdWJzZXQucGFnZS5zY3NzIiwid2VicGFjazovLy4vc3JjL2FwcC9zaG93Y2FzZS9hcHAtc2hlbGwvZGF0YS1zdG9yZS1zdWJzZXQvZGF0YS1zdG9yZS1zdWJzZXQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUNBQUE7QUNDRjtBRENFO0VBQ0Usd0NBQUE7RUFDQSxrQ0FBQTtFQUNBLHlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtBQ0NKO0FERUU7RUFDRSxzQkFBQTtBQ0FKO0FER0U7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxhQUFBO0FDREo7QURJRTtFQUNFLGNBQUE7RUFDQSxnQkFBQTtBQ0ZKOztBQ25CQTtFQUNFLHlCQUFBO0VBQ0Esd2lCQUFBO0VBQ0EsYUFBQTtBRHNCRiIsInNvdXJjZXNDb250ZW50IjpbIi5zaG93Y2FzZS1jb250ZW50IHtcbiAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1hcHAtYmFja2dyb3VuZCk7XG5cbiAgaW9uLWl0ZW0tZGl2aWRlciB7XG4gICAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3Itc2Vjb25kYXJ5KTtcbiAgICAtLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItbGlnaHRlc3QpO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICB9XG5cbiAgLnNob3djYXNlLXNlY3Rpb24ge1xuICAgIG1hcmdpbjogMjBweCAyMHB4IDYwcHg7XG4gIH1cblxuICBwcmUge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBiYWNrZ3JvdW5kOiAjQ0NDO1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gIH1cblxuICBjb2RlIHtcbiAgICBjb2xvcjogI0Y5MjY3MjtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICB9XG59XG4iLCIuc2hvd2Nhc2UtY29udGVudCB7XG4gIC0tYmFja2dyb3VuZDogdmFyKC0tYXBwLWJhY2tncm91bmQpO1xufVxuLnNob3djYXNlLWNvbnRlbnQgaW9uLWl0ZW0tZGl2aWRlciB7XG4gIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLXNlY29uZGFyeSk7XG4gIC0tY29sb3I6IHZhcigtLWlvbi1jb2xvci1saWdodGVzdCk7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGxldHRlci1zcGFjaW5nOiAxcHg7XG59XG4uc2hvd2Nhc2UtY29udGVudCAuc2hvd2Nhc2Utc2VjdGlvbiB7XG4gIG1hcmdpbjogMjBweCAyMHB4IDYwcHg7XG59XG4uc2hvd2Nhc2UtY29udGVudCBwcmUge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGJhY2tncm91bmQ6ICNDQ0M7XG4gIHBhZGRpbmc6IDEwcHg7XG59XG4uc2hvd2Nhc2UtY29udGVudCBjb2RlIHtcbiAgY29sb3I6ICNGOTI2NzI7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5jb21wYW55IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWNlYztcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSc0MCcgaGVpZ2h0PSc0MCcgdmlld0JveD0nMCAwIDQwIDQwJyUzRSUzQ2cgZmlsbC1ydWxlPSdldmVub2RkJyUzRSUzQ2cgZmlsbD0nJTIzZmZmZmZmJyBmaWxsLW9wYWNpdHk9JzAuMzgnJTNFJTNDcGF0aCBkPSdNMCAzOC41OWwyLjgzLTIuODMgMS40MSAxLjQxTDEuNDEgNDBIMHYtMS40MXpNMCAxLjRsMi44MyAyLjgzIDEuNDEtMS40MUwxLjQxIDBIMHYxLjQxek0zOC41OSA0MGwtMi44My0yLjgzIDEuNDEtMS40MUw0MCAzOC41OVY0MGgtMS40MXpNNDAgMS40MWwtMi44MyAyLjgzLTEuNDEtMS40MUwzOC41OSAwSDQwdjEuNDF6TTIwIDE4LjZsMi44My0yLjgzIDEuNDEgMS40MUwyMS40MSAyMGwyLjgzIDIuODMtMS40MSAxLjQxTDIwIDIxLjQxbC0yLjgzIDIuODMtMS40MS0xLjQxTDE4LjU5IDIwbC0yLjgzLTIuODMgMS40MS0xLjQxTDIwIDE4LjU5eicvJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9zdmclM0VcIik7XG4gIHBhZGRpbmc6IDIwcHg7XG59IiwiQGltcG9ydCBcIi4uL2FwcC1zaGVsbC5wYWdlXCI7XG5cbi5jb21wYW55IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZWNlYztcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSc0MCcgaGVpZ2h0PSc0MCcgdmlld0JveD0nMCAwIDQwIDQwJyUzRSUzQ2cgZmlsbC1ydWxlPSdldmVub2RkJyUzRSUzQ2cgZmlsbD0nJTIzZmZmZmZmJyBmaWxsLW9wYWNpdHk9JzAuMzgnJTNFJTNDcGF0aCBkPSdNMCAzOC41OWwyLjgzLTIuODMgMS40MSAxLjQxTDEuNDEgNDBIMHYtMS40MXpNMCAxLjRsMi44MyAyLjgzIDEuNDEtMS40MUwxLjQxIDBIMHYxLjQxek0zOC41OSA0MGwtMi44My0yLjgzIDEuNDEtMS40MUw0MCAzOC41OVY0MGgtMS40MXpNNDAgMS40MWwtMi44MyAyLjgzLTEuNDEtMS40MUwzOC41OSAwSDQwdjEuNDF6TTIwIDE4LjZsMi44My0yLjgzIDEuNDEgMS40MUwyMS40MSAyMGwyLjgzIDIuODMtMS40MSAxLjQxTDIwIDIxLjQxbC0yLjgzIDIuODMtMS40MS0xLjQxTDE4LjU5IDIwbC0yLjgzLTIuODMgMS40MS0xLjQxTDIwIDE4LjU5eicvJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9zdmclM0VcIik7XG4gIHBhZGRpbmc6IDIwcHg7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,wBAAwB;AACxD,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,oBAAoB,QAAQ,4BAA4B;;;;;AAOjE,OAAM,MAAOC,mBAAmB;EAK9BC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;EAAqB;EAExDC,QAAQ;IAEN,MAAMC,UAAU,GAAG,IAAI,CAACF,eAAe,CAACG,iBAAiB,CAAC,CAAC,CAAC;IAE5D,MAAMC,UAAU,GAAyB,IAAIP,oBAAoB,EAAE;IAEnE,IAAI,CAACQ,gBAAgB,GAAG,IAAIT,SAAS,CAACQ,UAAU,CAAC;IACjD,IAAI,CAACC,gBAAgB,CAACC,IAAI,CAACJ,UAAU,CAAC;IAEtC,IAAI,CAACG,gBAAgB,CAACE,KAAK,CAACC,SAAS,CAACC,IAAI,IAAG;MAC3C,IAAI,CAACC,OAAO,GAAGD,IAAI;IACrB,CAAC,CAAC;EACJ;;AAnBWX,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVhCC,kCAAY;MAGNA,qCAAoE;MACtEA,iBAAc;MACdA,iCAAW;MACTA,4CACF;MAAAA,iBAAY;MAIhBA,sCAAsC;MAGhCA,wHACF;MAAAA,iBAAI;MACRA,4BAAK;MACLA,wYAiBA;MAAAA,iBAAM;MACFA,0BAAG;MACDA,6CAA2B;MAAAA,0BAAG;MAAAA,+BAAc;MAAAA,iBAAI;MAACA,sDACnD;MAAAA,iBAAI;MACJA,0BAAG;MACDA,mEAA4C;MAAAA,6BAAkG;MAAGA,uBAAM;MAAAA,iBAAI;MAACA,sBAAI;MAAAA,0BAAG;MAAAA,qBAAI;MAAAA,iBAAI;MAACA,2BAAS;MAAAA,iBAAI;MAACA,iDAC5L;MAAAA,iBAAI;MACRA,4BAAK;MACLA,oUAYA;MAAAA,iBAAM;MAEJA,+BAAqB;MACfA,wBAAO;MAAAA,iBAAK;MAChBA,0BAAG;MACDA,qCAAkH;MACpHA,iBAAI;MACJA,0BAAG;MACDA,qCAAyH;MAC3HA,iBAAI;MACJA,0BAAG;MACDA,qCAAgH;MAClHA,iBAAI;;;MAPoDA,gBAAqB;MAArBA,uCAAqB;MAGrBA,eAA4B;MAA5BA,8CAA4B;MAG5BA,eAAmB;MAAnBA,qCAAmB","names":["ShowcaseService","DataStore","ShowcaseCompanyModel","DataStoreSubsetPage","constructor","showcaseService","ngOnInit","dataSource","getUserSubsetData","shellModel","companyDataStore","load","state","subscribe","data","company","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/teeicloud/TitanEstates/Titan Estates/src/app/showcase/app-shell/data-store-subset/data-store-subset.page.ts","/Users/teeicloud/TitanEstates/Titan Estates/src/app/showcase/app-shell/data-store-subset/data-store-subset.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ShowcaseService } from '../../showcase.service';\nimport { DataStore } from '../../../shell/data-store';\nimport { ShowcaseCompanyModel } from '../../showcase-shell.model';\n\n@Component({\n  selector: 'app-data-store-subset',\n  templateUrl: './data-store-subset.page.html',\n  styleUrls: ['./data-store-subset.page.scss'],\n})\nexport class DataStoreSubsetPage implements OnInit {\n\n  companyDataStore: DataStore<ShowcaseCompanyModel>;\n  company: ShowcaseCompanyModel;\n\n  constructor(private showcaseService: ShowcaseService) { }\n\n  ngOnInit() {\n\n    const dataSource = this.showcaseService.getUserSubsetData(2);\n\n    const shellModel: ShowcaseCompanyModel = new ShowcaseCompanyModel();\n\n    this.companyDataStore = new DataStore(shellModel);\n    this.companyDataStore.load(dataSource);\n\n    this.companyDataStore.state.subscribe(data => {\n      this.company = data;\n    });\n  }\n\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"showcase/app-shell\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      DataStore - Subset example\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\">\n    <p>\n      Sometimes the data coming from the remote API does not match 100% the model you defined for your view.\n    </p>\n<pre>\nexport class YourModel extends ShellModel &#123;\n  cover: string;\n  image: string;\n  title: string;\n  description: string;\n&#125;\n\n// Data coming from the remote API with the following format\nconst jsonResponse = &#123;\n  name: 'extra-data',\n  fields: &#123;\n    cover: 'some-image';\n    image: 'some-other-image';\n    title: 'a-title';\n    description: 'a-description';\n  &#125;\n&#125;;\n</pre>\n    <p>\n      Hopefully, we can use some <b>RxJs operators</b> to mold the data and fit our needs.\n    </p>\n    <p>\n      If that’s not enough, you can use the handy <a href=\"https://dev.to/napoleon039/how-to-use-the-spread-and-rest-operator-4jbb\" target=\"_blank\"><b>spread</b> and <b>rest</b> operators</a> to mold your data even deeper.\n    </p>\n<pre>\npublic getListDataSource(): Observable&lt;YourModel&gt; &#123;\n  const dataObservable = this.http.get('https://reqres.in/api/users');\n\n  return dataObservable.pipe(\n    map((jsonResponse) => &#123;\n      const filteredData: YourModel = &#123;\n        ...data.fields\n      &#125;;\n      return filteredData;\n    &#125;)\n  );\n&#125;\n</pre>\n  </section>\n  <div class=\"company\">\n    <h4>Company</h4>\n    <p>\n      <app-text-shell style=\"--text-shell-line-color: #FFF\" [data]=\"company.name\" animation=\"bouncing\"></app-text-shell>\n    </p>\n    <p>\n      <app-text-shell style=\"--text-shell-line-color: #FFF\" [data]=\"company.catchPhrase\" animation=\"bouncing\"></app-text-shell>\n    </p>\n    <p>\n      <app-text-shell style=\"--text-shell-line-color: #FFF\" [data]=\"company.bs\" animation=\"bouncing\"></app-text-shell>\n    </p>\n  </div>\n</ion-content>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}