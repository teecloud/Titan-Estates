{"ast":null,"code":"import { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class HistoryHelperService {\n  constructor(router) {\n    this.router = router;\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(({\n      urlAfterRedirects\n    }) => {\n      // console.log('previous URL', this.previousUrl);\n      this.previousUrl = urlAfterRedirects;\n      // console.log('NEW previous URL', this.previousUrl);\n    });\n  }\n}\n\nHistoryHelperService.ɵfac = function HistoryHelperService_Factory(t) {\n  return new (t || HistoryHelperService)(i0.ɵɵinject(i1.Router));\n};\nHistoryHelperService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HistoryHelperService,\n  factory: HistoryHelperService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,MAAM,EAAEC,aAAa,QAAQ,iBAAiB;AACvD,SAASC,MAAM,QAAQ,gBAAgB;;;AAKvC,OAAM,MAAOC,oBAAoB;EAG/BC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IACxB,IAAI,CAACA,MAAM,CAACC,MAAM,CACjBC,IAAI,CACHL,MAAM,CAACM,KAAK,IAAIA,KAAK,YAAYP,aAAa,CAAC,CAChD,CACAQ,SAAS,CAAC,CAAC;MAACC;IAAiB,CAAgB,KAAI;MAChD;MACA,IAAI,CAACC,WAAW,GAAGD,iBAAiB;MACpC;IACF,CAAC,CAAC;EACJ;;;AAbWP,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;SAApBA,oBAAoB;EAAAS,SAApBT,oBAAoB;EAAAU,YAFnB;AAAM","names":["Router","NavigationEnd","filter","HistoryHelperService","constructor","router","events","pipe","event","subscribe","urlAfterRedirects","previousUrl","factory","providedIn"],"sourceRoot":"","sources":["/Users/teeicloud/TitanEstates/Titan Estates/src/app/utils/history-helper.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoryHelperService {\n  previousUrl: string;\n\n  constructor(private router: Router) {\n    this.router.events\n    .pipe(\n      filter(event => event instanceof NavigationEnd)\n    )\n    .subscribe(({urlAfterRedirects}: NavigationEnd) => {\n      // console.log('previous URL', this.previousUrl);\n      this.previousUrl = urlAfterRedirects;\n      // console.log('NEW previous URL', this.previousUrl);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}