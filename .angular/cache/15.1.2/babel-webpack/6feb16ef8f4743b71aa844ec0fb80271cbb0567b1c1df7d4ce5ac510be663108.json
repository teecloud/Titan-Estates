{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/router\";\nconst _c0 = function () {\n  return [\"/showcase/route-resolvers-ux/blocking-resolvers\"];\n};\nconst _c1 = \"/showcase/route-resolvers-ux/non-blocking-resolvers\";\nconst _c2 = function () {\n  return [_c1];\n};\nconst _c3 = \"/showcase/route-resolvers-ux/progressive-shell-resolvers\";\nconst _c4 = function () {\n  return [_c3];\n};\nexport class RouteResovlersUXPage {\n  constructor() {}\n}\nRouteResovlersUXPage.ɵfac = function RouteResovlersUXPage_Factory(t) {\n  return new (t || RouteResovlersUXPage)();\n};\nRouteResovlersUXPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RouteResovlersUXPage,\n  selectors: [[\"app-showcase-route-resolvers-ux\"]],\n  decls: 52,\n  vars: 6,\n  consts: [[\"color\", \"primary\"], [\"slot\", \"start\"], [1, \"showcase-content\"], [1, \"showcase-section\"], [\"expand\", \"block\", 3, \"routerLink\"]],\n  template: function RouteResovlersUXPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-buttons\", 1);\n      i0.ɵɵelement(3, \"ion-menu-button\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-title\");\n      i0.ɵɵtext(5, \" Improve Route Resolvers UX \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"ion-content\", 2)(7, \"section\", 3)(8, \"p\");\n      i0.ɵɵtext(9, \" Lets see the difference between the different implementations of Route Resolvers. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"h5\");\n      i0.ɵɵtext(11, \"Blocking Route Resolvers\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"p\");\n      i0.ɵɵtext(13, \" By default, Angular Route Resolvers won't transition to the page until the Resolver Observable completes. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"p\");\n      i0.ɵɵtext(15, \" Let's suppose the backend is slow and takes 5 seconds to fetch data and return it to the client, this is what's going to happen. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"p\")(17, \"b\");\n      i0.ɵɵtext(18, \"Expected behavior:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(19, \" Page transition will be delayed 5 seconds until the server sends data back to the client. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"ion-button\", 4);\n      i0.ɵɵtext(21, \"Blocking Resolvers\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"section\", 3)(23, \"h5\");\n      i0.ɵɵtext(24, \"NON-Blocking Route Resolvers\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"p\");\n      i0.ɵɵtext(26, \" To avoid waiting for the Observable to complete, we can wrap the base Observable (the one we are getting data from) with a dummy Observable, Subject or Promise that emits the base Observable and immediately completes. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"p\")(28, \"b\");\n      i0.ɵɵtext(29, \"Expected behavior:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(30, \" Page transition will be instant and the transitioned page will show a blank state while the server sends data back to the client. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"ion-button\", 4);\n      i0.ɵɵtext(32, \"Non-Blocking Resolvers\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"section\", 3)(34, \"h5\");\n      i0.ɵɵtext(35, \"Progressive Shell Resolvers\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"p\");\n      i0.ɵɵtext(37, \" By using the \");\n      i0.ɵɵelementStart(38, \"code\");\n      i0.ɵɵtext(39, \"DataStore\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(40, \" utility in conjunction with Angular Route Resolvers, we can solve this UX problem and make page transitions immediate. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"p\");\n      i0.ɵɵtext(42, \" This approach uses a non-blocking Resolver in conjunction with the \");\n      i0.ɵɵelementStart(43, \"code\");\n      i0.ɵɵtext(44, \"DataStore\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(45, \" utility. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"p\")(47, \"b\");\n      i0.ɵɵtext(48, \"Expected behavior:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(49, \" Page transition will be instant and the transitioned page will show some shell elements while the server sends data back to the client. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"ion-button\", 4);\n      i0.ɵɵtext(51, \"Progressive Shell Resolvers\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c2));\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(5, _c4));\n    }\n  },\n  dependencies: [i1.IonButton, i1.IonButtons, i1.IonContent, i1.IonHeader, i1.IonMenuButton, i1.IonTitle, i1.IonToolbar, i1.RouterLinkDelegate, i2.RouterLink],\n  styles: [\".showcase-content[_ngcontent-%COMP%] {\\n  --background: var(--app-background-shade);\\n}\\n.showcase-content[_ngcontent-%COMP%]   .showcase-section[_ngcontent-%COMP%] {\\n  margin: 20px 20px 100px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hvd2Nhc2Uvcm91dGUtcmVzb2x2ZXJzLXV4L3JvdXRlLXJlc29sdmVycy11eC5wYWdlLnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi9UaXRhbiUyMEVzdGF0ZXMvc3JjL2FwcC9zaG93Y2FzZS9yb3V0ZS1yZXNvbHZlcnMtdXgvcm91dGUtcmVzb2x2ZXJzLXV4LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlDQUFBO0FDQ0Y7QURDRTtFQUNFLHVCQUFBO0FDQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuc2hvd2Nhc2UtY29udGVudCB7XG4gIC0tYmFja2dyb3VuZDogdmFyKC0tYXBwLWJhY2tncm91bmQtc2hhZGUpO1xuXG4gIC5zaG93Y2FzZS1zZWN0aW9uIHtcbiAgICBtYXJnaW46IDIwcHggMjBweCAxMDBweDtcbiAgfVxufVxuIiwiLnNob3djYXNlLWNvbnRlbnQge1xuICAtLWJhY2tncm91bmQ6IHZhcigtLWFwcC1iYWNrZ3JvdW5kLXNoYWRlKTtcbn1cbi5zaG93Y2FzZS1jb250ZW50IC5zaG93Y2FzZS1zZWN0aW9uIHtcbiAgbWFyZ2luOiAyMHB4IDIwcHggMTAwcHg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAQA,OAAM,MAAOA,oBAAoB;EAE/BC,eAAgB;;AAFLD,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAE;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRjCC,kCAAY;MAGNA,kCAAmC;MACrCA,iBAAc;MACdA,iCAAW;MACTA,4CACF;MAAAA,iBAAY;MAIhBA,sCAAsC;MAGhCA,mGACF;MAAAA,iBAAI;MACJA,2BAAI;MAAAA,yCAAwB;MAAAA,iBAAK;MACjCA,0BAAG;MACDA,4HACF;MAAAA,iBAAI;MACJA,0BAAG;MACDA,mJACF;MAAAA,iBAAI;MACJA,0BAAG;MACEA,mCAAkB;MAAAA,iBAAI;MAACA,4GAC5B;MAAAA,iBAAI;MACJA,sCAA8F;MAAAA,mCAAkB;MAAAA,iBAAa;MAE/HA,mCAAkC;MAC5BA,6CAA4B;MAAAA,iBAAK;MACrCA,0BAAG;MACDA,4OACF;MAAAA,iBAAI;MACJA,0BAAG;MACEA,mCAAkB;MAAAA,iBAAI;MAACA,oJAC5B;MAAAA,iBAAI;MACJA,sCAAkG;MAAAA,uCAAsB;MAAAA,iBAAa;MAEvIA,mCAAkC;MAC5BA,4CAA2B;MAAAA,iBAAK;MACpCA,0BAAG;MACDA,+BAAa;MAAAA,6BAAM;MAAAA,0BAAS;MAAAA,iBAAO;MAACA,yIACtC;MAAAA,iBAAI;MACJA,0BAAG;MACDA,qFAAmE;MAAAA,6BAAM;MAAAA,0BAAS;MAAAA,iBAAO;MAACA,2BAC5F;MAAAA,iBAAI;MACJA,0BAAG;MACEA,mCAAkB;MAAAA,iBAAI;MAACA,0JAC5B;MAAAA,iBAAI;MACJA,sCAAuG;MAAAA,4CAA2B;MAAAA,iBAAa;;;MAvBpHA,gBAAkE;MAAlEA,uDAAkE;MAUlEA,gBAAsE;MAAtEA,uDAAsE;MAatEA,gBAA2E;MAA3EA,uDAA2E","names":["RouteResovlersUXPage","constructor","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/teeicloud/TitanEstates/Titan Estates/src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.ts","/Users/teeicloud/TitanEstates/Titan Estates/src/app/showcase/route-resolvers-ux/route-resolvers-ux.page.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-showcase-route-resolvers-ux',\n  templateUrl: './route-resolvers-ux.page.html',\n  styleUrls: ['./route-resolvers-ux.page.scss']\n})\n\nexport class RouteResovlersUXPage {\n\n  constructor() { }\n\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>\n      Improve Route Resolvers UX\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"showcase-content\">\n  <section class=\"showcase-section\">\n    <p>\n      Lets see the difference between the different implementations of Route Resolvers.\n    </p>\n    <h5>Blocking Route Resolvers</h5>\n    <p>\n      By default, Angular Route Resolvers won't transition to the page until the Resolver Observable completes.\n    </p>\n    <p>\n      Let's suppose the backend is slow and takes 5 seconds to fetch data and return it to the client, this is what's going to happen.\n    </p>\n    <p>\n      <b>Expected behavior:</b> Page transition will be delayed 5 seconds until the server sends data back to the client.\n    </p>\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/blocking-resolvers']\">Blocking Resolvers</ion-button>\n  </section>\n  <section class=\"showcase-section\">\n    <h5>NON-Blocking Route Resolvers</h5>\n    <p>\n      To avoid waiting for the Observable to complete, we can wrap the base Observable (the one we are getting data from) with a dummy Observable, Subject or Promise that emits the base Observable and immediately completes.\n    </p>\n    <p>\n      <b>Expected behavior:</b> Page transition will be instant and the transitioned page will show a blank state while the server sends data back to the client.\n    </p>\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/non-blocking-resolvers']\">Non-Blocking Resolvers</ion-button>\n  </section>\n  <section class=\"showcase-section\">\n    <h5>Progressive Shell Resolvers</h5>\n    <p>\n      By using the <code>DataStore</code> utility in conjunction with Angular Route Resolvers, we can solve this UX problem and make page transitions immediate.\n    </p>\n    <p>\n      This approach uses a non-blocking Resolver in conjunction with the <code>DataStore</code> utility.\n    </p>\n    <p>\n      <b>Expected behavior:</b> Page transition will be instant and the transitioned page will show some shell elements while the server sends data back to the client.\n    </p>\n    <ion-button expand=\"block\" [routerLink]=\"['/showcase/route-resolvers-ux/progressive-shell-resolvers']\">Progressive Shell Resolvers</ion-button>\n  </section>\n</ion-content>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}