{"ast":null,"code":"import { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, EventEmitter, PLATFORM_ID } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class GoogleMapComponent {\n  constructor(_elementRef, platformId) {\n    this._elementRef = _elementRef;\n    this.platformId = platformId;\n    this.$mapReady = new EventEmitter();\n    this._mapIdledOnce = false;\n  }\n  ngOnInit() {\n    // there are some issues with maps in server side\n    if (isPlatformBrowser(this.platformId)) {\n      this.initMap();\n    }\n  }\n  initMap() {\n    this._el = this._elementRef.nativeElement;\n    this._map = new google.maps.Map(this._el, this.mapOptions);\n    // Workarround for init method: try to catch the first idle event after the map creation\n    // (this._mapIdledOnce). The following idle events don't matter.\n    const _ready_listener = this._map.addListener('idle', () => {\n      console.log('mapReady - IDLE');\n      if (!this._mapIdledOnce) {\n        this.$mapReady.emit(this._map);\n        this._mapIdledOnce = true;\n        // Stop listening to event, the map is ready\n        google.maps.event.removeListener(_ready_listener);\n      }\n    });\n  }\n}\nGoogleMapComponent.ɵfac = function GoogleMapComponent_Factory(t) {\n  return new (t || GoogleMapComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nGoogleMapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GoogleMapComponent,\n  selectors: [[\"app-google-map\"]],\n  inputs: {\n    mapOptions: \"mapOptions\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function GoogleMapComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAAA,SAASA,iBAAiB,QAAQ,iBAAiB;AACnD,SAAoBC,UAAU,EAAUC,YAAY,EAASC,WAAW,QAAgB,eAAe;;AAMvG,OAAM,MAAOC,kBAAkB;EAQ7BC,YACSC,WAAuB,EACDC,UAAkB;IADxC,gBAAW,GAAXD,WAAW;IACW,eAAU,GAAVC,UAAU;IALlC,cAAS,GAAsB,IAAIL,YAAY,EAAE;IACjD,kBAAa,GAAG,KAAK;EAKxB;EAEJM,QAAQ;IACN;IACA,IAAIR,iBAAiB,CAAC,IAAI,CAACO,UAAU,CAAC,EAAE;MACtC,IAAI,CAACE,OAAO,EAAE;;EAElB;EAEAA,OAAO;IACL,IAAI,CAACC,GAAG,GAAG,IAAI,CAACJ,WAAW,CAACK,aAAa;IACzC,IAAI,CAACC,IAAI,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,IAAI,CAACL,GAAG,EAAE,IAAI,CAACM,UAAU,CAAC;IAE1D;IACA;IACA,MAAMC,eAAe,GAAG,IAAI,CAACL,IAAI,CAACM,WAAW,CAAC,MAAM,EAAE,MAAK;MACzDC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9B,IAAI,CAAC,IAAI,CAACC,aAAa,EAAE;QACvB,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,IAAI,CAACX,IAAI,CAAC;QAC9B,IAAI,CAACS,aAAa,GAAG,IAAI;QACzB;QACAR,MAAM,CAACC,IAAI,CAACU,KAAK,CAACC,cAAc,CAACR,eAAe,CAAC;;IAErD,CAAC,CAAC;EACJ;;AAnCWb,kBAAkB;mBAAlBA,kBAAkB,4DAUnBD,WAAW;AAAA;AAVVC,kBAAkB;QAAlBA,kBAAkB;EAAAsB;EAAAC;IAAAX;EAAA;EAAAY;EAAAC;EAAAC;EAAAC;AAAA","names":["isPlatformBrowser","ElementRef","EventEmitter","PLATFORM_ID","GoogleMapComponent","constructor","_elementRef","platformId","ngOnInit","initMap","_el","nativeElement","_map","google","maps","Map","mapOptions","_ready_listener","addListener","console","log","_mapIdledOnce","$mapReady","emit","event","removeListener","selectors","inputs","decls","vars","template","encapsulation"],"sourceRoot":"","sources":["/Users/teeicloud/TitanEstates/Titan Estates/src/app/components/google-map/google-map.component.ts"],"sourcesContent":["import { isPlatformBrowser } from '@angular/common';\nimport { Component, ElementRef, OnInit, EventEmitter, Input, PLATFORM_ID, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-google-map',\n  template: ''\n})\nexport class GoogleMapComponent implements OnInit {\n\n  @Input() mapOptions: google.maps.MapOptions;\n  public _el: HTMLElement;\n  public _map: google.maps.Map;\n  public $mapReady: EventEmitter<any> = new EventEmitter();\n  public _mapIdledOnce = false;\n\n  constructor(\n    public _elementRef: ElementRef,\n    @Inject(PLATFORM_ID) private platformId: object\n  ) { }\n\n  ngOnInit() {\n    // there are some issues with maps in server side\n    if (isPlatformBrowser(this.platformId)) {\n      this.initMap();\n    }\n  }\n\n  initMap(): void {\n    this._el = this._elementRef.nativeElement;\n    this._map = new google.maps.Map(this._el, this.mapOptions);\n\n    // Workarround for init method: try to catch the first idle event after the map creation\n    // (this._mapIdledOnce). The following idle events don't matter.\n    const _ready_listener = this._map.addListener('idle', () => {\n      console.log('mapReady - IDLE');\n      if (!this._mapIdledOnce) {\n        this.$mapReady.emit(this._map);\n        this._mapIdledOnce = true;\n        // Stop listening to event, the map is ready\n        google.maps.event.removeListener(_ready_listener);\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}